Notebook[{

Cell[CellGroupData[{
Cell["Evolution of a Gaussian Wave Packet", "Title",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, 3.4375211451132393`*^9, {3.438015999248402*^9, 
   3.438016022321709*^9}},
 CellTags->{"Name", "Title"},
 CellID->604095604,ExpressionUUID->"eaa9fd82-dbcb-4fa7-a7bb-92ef0f58a2a3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0d9e9bc3-1a14-45a8-8717-c2d10f53673d"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"f94bab31-8f80-4c8c-abcf-d64dfaddad73"],

Cell[TextData[{
 "A Gaussian wave packet centered around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "00b54b9c-78a9-4bd2-b480-e374b4ea58c0"],
 " at time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "3306bab5-afc6-492e-97eb-5a1749e476da"],
 " with an average initial momentum ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "0"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "1179e7ab-0b01-4e8a-a8a3-7e74d7b4085c"],
 " can be represented by the wavefunction ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Psi]", "(", 
     RowBox[{"x", ",", "0"}], ")"}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         RowBox[{"2", "\[Pi]", " "}]], 
        SubscriptBox["\[Sigma]", "0"]}], ")"}], 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], 
     RowBox[{"exp", "(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["x", "2"], 
         RowBox[{"4", 
          SuperscriptBox[
           SubscriptBox["\[Sigma]", "0"], "2"]}]]}], "+", 
       RowBox[{"i", " ", 
        SubscriptBox["p", "0"], "x"}]}], ")"}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"b55d95d5-f7ca-4a80-a122-1f242188322d"],
 ". (For convenience, we take ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[HBar]", "=", 
    RowBox[{"m", "=", "1"}]}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "7a602c27-c27c-47fa-bd30-49e9574020a6"],
 ".) The solution of the free-particle Schr\[ODoubleDot]dinger equation with \
this initial condition works out to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Psi]", "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SubscriptBox["\[Sigma]", "0"], 
        SqrtBox[
         RowBox[{"2", "\[Pi]"}]]], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Sigma]", "0"], "2"], "+", 
        FractionBox[
         RowBox[{"i", " ", "t"}], "2"]}], ")"}], 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], 
     RowBox[{"exp", "(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         SubscriptBox["\[Sigma]", "0"], "2"]}], 
       SuperscriptBox[
        SubscriptBox["p", "0"], "2"]}], ")"}], 
     RowBox[{"exp", "(", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"2", "i", " ", 
            SuperscriptBox[
             SubscriptBox["\[Sigma]", "0"], "2"], 
            SubscriptBox["p", "0"]}]}], ")"}], "2"], 
        RowBox[{"4", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Sigma]", "0"], "2"], "+", 
           RowBox[{"i", " ", 
            RowBox[{"t", "/", "2"}]}]}], ")"}]}]]}], ")"}]}]}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "4237b6af-c8dd-4b1d-9ccb-2474e33bb23c"],
 ". The probability density is then given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Rho]", "(", 
     RowBox[{"x", ",", "t"}], ")"}], "=", 
    RowBox[{
     RowBox[{"|", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"x", ",", "t"}], ")"}], 
      SuperscriptBox["|", "2"]}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{"2", "\[Pi]"}]], 
         RowBox[{"\[Sigma]", "(", "t", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], 
      RowBox[{"exp", "(", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[Cell[TextData[{
           Cell[BoxData[
            FormBox[
             RowBox[{"(", 
              RowBox[{"x", "-", 
               RowBox[{
                SubscriptBox["p", "0"], "t"}]}]}], TraditionalForm]], 
            "InlineMath",ExpressionUUID->
            "4a5bcd40-116e-439c-9732-ca67f8e04b67"],
           ")"
          }], "InlineMath",ExpressionUUID->
           "e28eeb4e-01ec-43db-a45d-ac96738572ea"], "2"], 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "(", "t", ")"}], "2"]}]]}], ")"}]}]}]}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "0a8d9d78-b043-4b2c-a4bc-0f5c5196d038"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sigma]", "(", "t", ")"}], "=", 
    SuperscriptBox[
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "(", 
      RowBox[{"1", "+", 
       FractionBox[
        SuperscriptBox["t", "2"], 
        RowBox[{"4", 
         SuperscriptBox[
          SubscriptBox["\[Sigma]", "0"], "4"]}]]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"bc3cb4cf-0fb2-4c09-a3c6-9ad5e8fb62d7"],
 ", shown as a black curve. The ",
 "wave packet",
 " remains Gaussian as it spreads out, with its center moving to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SubscriptBox["p", "0"], "t"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"f767928d-a593-4f39-a303-e0eda4aa97b9"],
 ", thereby following the classical trajectory of the particle. The \
corresponding momentum probability distribution is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Rho]", "(", 
     RowBox[{"p", ",", "t"}], ")"}], "=", 
    RowBox[{
     RowBox[{"|", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"p", ",", "t"}], ")"}], 
      SuperscriptBox["|", "2"]}], "=", 
     RowBox[{
      SqrtBox[
       FractionBox["2", "\[Pi]"]], 
      SubscriptBox["\[Sigma]", "0"], 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Sigma]", "0"], "2"], "(", 
          RowBox[{"p", "-", 
           SubscriptBox["p", "0"]}], ")"}], "2"]}]]}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"d0ef51b9-bac7-4e18-95cd-7e964122b6f8"],
 ", shown in red. The rms uncertainties are given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[InvisibleSpace]", "x"}], "=", 
    RowBox[{
     SqrtBox[
      RowBox[{"\[Integral]", 
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"\[Rho]", "(", 
         RowBox[{"x", ",", "t"}], ")"}], " ", "d", "\[InvisibleSpace]", 
        "x"}]}]], "=", 
     RowBox[{"\[Sigma]", "(", "t", ")"}]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"090bc7de-3ec1-46eb-927c-3fa25bbab622"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[InvisibleSpace]", "p"}], "=", 
    RowBox[{
     SqrtBox[
      RowBox[{"\[Integral]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"p", "-", 
           SubscriptBox["p", "0"]}], ")"}], "2"], 
        RowBox[{"\[Rho]", "(", 
         RowBox[{"p", ",", "t"}], ")"}], "d", "\[InvisibleSpace]", "p"}]}]], 
     "=", 
     FractionBox["1", 
      RowBox[{"2", 
       SubscriptBox["\[Sigma]", "0"]}]]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"d3d95466-5be5-4c86-81c6-2c8204f39c1b"],
 ", which is independent of ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath",ExpressionUUID->
  "fb5b2fa3-9cd9-40a7-8442-cc8bc1bb0a8b"],
 ". This is consistent with the fact that ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]], "InlineMath",ExpressionUUID->
  "ae520075-6410-42a9-87de-3db7bc57f411"],
 " is a constant of the motion for a free particle."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.4275651779028883`*^9, 3.427565546533995*^9}, {
   3.427631349328631*^9, 3.427631350782233*^9}, {3.427631382699265*^9, 
   3.427631400991458*^9}, {3.4276314336201468`*^9, 3.4276315658159113`*^9}, {
   3.427631774906959*^9, 3.427631817663054*^9}, {3.427631906248027*^9, 
   3.427631961735585*^9}, {3.42763199188435*^9, 3.427632042086314*^9}, {
   3.427632097282092*^9, 3.427632153568125*^9}, {3.427632344541929*^9, 
   3.4276323863258*^9}, {3.427632462532689*^9, 3.427632553552847*^9}, {
   3.427632610999976*^9, 3.4276326825850577`*^9}, {3.427632739654883*^9, 
   3.4276328253930473`*^9}, {3.427632889168782*^9, 3.427633029396103*^9}, {
   3.427633176155888*^9, 3.427633176777463*^9}, {3.427633217693449*^9, 
   3.427633284720251*^9}, {3.4276337868950872`*^9, 3.427633875071678*^9}, {
   3.4276339303732977`*^9, 3.427634078258149*^9}, {3.427634109206312*^9, 
   3.427634157282097*^9}, {3.427634219123383*^9, 3.42763438433609*^9}, {
   3.427634427285367*^9, 3.427634500074686*^9}, {3.427634540331313*^9, 
   3.427634637481773*^9}, {3.427634667712851*^9, 3.427634712092389*^9}, {
   3.427634745405148*^9, 3.427634773239471*^9}, {3.427634811132778*^9, 
   3.427635054822445*^9}, {3.427635084841473*^9, 3.427635134001534*^9}, {
   3.427635174328477*^9, 3.427635197320711*^9}, {3.42763529170432*^9, 
   3.427635473091487*^9}, {3.427635561283682*^9, 3.427635697054123*^9}, {
   3.427635749418732*^9, 3.427635865327214*^9}, {3.427635905586875*^9, 
   3.427635942891214*^9}, {3.427636017520278*^9, 3.427636317320298*^9}, {
   3.427636471983254*^9, 3.427636601315247*^9}, {3.427636650053234*^9, 
   3.427636993525178*^9}, {3.4276370249831247`*^9, 3.427637024994544*^9}, {
   3.427637057303684*^9, 3.427637362859913*^9}, {3.4276378557713423`*^9, 
   3.427638035268553*^9}, {3.4276494848760443`*^9, 3.4276495047620335`*^9}, {
   3.427663530294232*^9, 3.427663530294232*^9}, {3.427663561685058*^9, 
   3.427663578622667*^9}, {3.427663610544745*^9, 3.427663691357763*^9}, {
   3.4276637216392064`*^9, 3.427663930562419*^9}, {3.427747988787846*^9, 
   3.427747993434623*^9}, {3.427748046072991*^9, 3.427748074669366*^9}, {
   3.427748105692069*^9, 3.4277481660109*^9}, 3.427748726855863*^9, {
   3.427749019704109*^9, 3.4277490638708963`*^9}, {3.427749117718431*^9, 
   3.4277491360271263`*^9}, {3.427749167300441*^9, 3.427749477889042*^9}, {
   3.427749510327975*^9, 3.427749521030015*^9}, {3.437513000498528*^9, 
   3.43751301192842*^9}, {3.437513055921091*^9, 3.437513055921329*^9}, {
   3.437517701617956*^9, 3.437517756780245*^9}, {3.437517790631505*^9, 
   3.437517911046335*^9}, {3.437517986863042*^9, 3.437518006983674*^9}, {
   3.437518081355178*^9, 3.437518107399365*^9}, {3.4375181444689283`*^9, 
   3.437518144542148*^9}, {3.437518981759434*^9, 3.437519013886147*^9}, {
   3.437519420796342*^9, 3.437519423856988*^9}, 3.437519549021208*^9, {
   3.437840007950099*^9, 3.437840013590796*^9}, {3.437840060122642*^9, 
   3.43784007679473*^9}, {3.437840120623416*^9, 3.4378401569676313`*^9}, {
   3.438016002321709*^9, 3.438016003183796*^9}},
 CellID->757773058,ExpressionUUID->"2819a45e-bd42-4ef2-a64a-6bde6164e05c"],

Cell[TextData[{
 "Thus, with \[HBar] put back in, the uncertainty product is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
    "\[CapitalDelta]", "\[InvisibleSpace]", "x", " ", "\[CapitalDelta]", 
     "\[InvisibleSpace]", "p"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["\[HBar]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox["t", "2"], 
          RowBox[{"4", 
           SuperscriptBox[
            SubscriptBox["\[Sigma]", "0"], "4"]}]]}], ")"}], 
       RowBox[{"1", "/", "2"}]]}], "\[GreaterEqual]", 
     FractionBox["\[HBar]", "2"]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"d374af21-646c-41ad-938e-c03b469cc058"],
 ", in accord with Heisenberg's uncertainty principle. At ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "37e4682f-8051-4afc-b63b-02b3e753f624"],
 ", the Gaussian probability distribution represents a ",
 StyleBox["minimum uncertainty ",
  FontSlant->"Italic"],
 "wave packet",
 StyleBox[" ",
  FontSlant->"Italic"],
 "with",
 StyleBox[" ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
    "\[CapitalDelta]", "\[InvisibleSpace]", "x", " ", "\[CapitalDelta]", 
     "\[InvisibleSpace]", "p"}], "=", 
    RowBox[{"\[HBar]", "/", "2"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"0fbd0658-c64d-4d04-a9a2-81a85c2ebe4a"],
 ", but the product increases when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", ">", "0"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "49c00673-2057-4363-b1f3-9dedd2dc2ed2"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.4275651779028883`*^9, 3.427565546533995*^9}, {
   3.427631349328631*^9, 3.427631350782233*^9}, {3.427631382699265*^9, 
   3.427631400991458*^9}, {3.4276314336201468`*^9, 3.4276315658159113`*^9}, {
   3.427631774906959*^9, 3.427631817663054*^9}, {3.427631906248027*^9, 
   3.427631961735585*^9}, {3.42763199188435*^9, 3.427632042086314*^9}, {
   3.427632097282092*^9, 3.427632153568125*^9}, {3.427632344541929*^9, 
   3.4276323863258*^9}, {3.427632462532689*^9, 3.427632553552847*^9}, {
   3.427632610999976*^9, 3.4276326825850577`*^9}, {3.427632739654883*^9, 
   3.4276328253930473`*^9}, {3.427632889168782*^9, 3.427633029396103*^9}, {
   3.427633176155888*^9, 3.427633176777463*^9}, {3.427633217693449*^9, 
   3.427633284720251*^9}, {3.4276337868950872`*^9, 3.427633875071678*^9}, {
   3.4276339303732977`*^9, 3.427634078258149*^9}, {3.427634109206312*^9, 
   3.427634157282097*^9}, {3.427634219123383*^9, 3.42763438433609*^9}, {
   3.427634427285367*^9, 3.427634500074686*^9}, {3.427634540331313*^9, 
   3.427634637481773*^9}, {3.427634667712851*^9, 3.427634712092389*^9}, {
   3.427634745405148*^9, 3.427634773239471*^9}, {3.427634811132778*^9, 
   3.427635054822445*^9}, {3.427635084841473*^9, 3.427635134001534*^9}, {
   3.427635174328477*^9, 3.427635197320711*^9}, {3.42763529170432*^9, 
   3.427635473091487*^9}, {3.427635561283682*^9, 3.427635697054123*^9}, {
   3.427635749418732*^9, 3.427635865327214*^9}, {3.427635905586875*^9, 
   3.427635942891214*^9}, {3.427636017520278*^9, 3.427636317320298*^9}, {
   3.427636471983254*^9, 3.427636601315247*^9}, {3.427636650053234*^9, 
   3.427636993525178*^9}, {3.4276370249831247`*^9, 3.427637024994544*^9}, {
   3.427637057303684*^9, 3.427637362859913*^9}, {3.4276378557713423`*^9, 
   3.427638035268553*^9}, {3.4276494848760443`*^9, 3.4276495047620335`*^9}, {
   3.427663530294232*^9, 3.427663530294232*^9}, {3.427663561685058*^9, 
   3.427663578622667*^9}, {3.427663610544745*^9, 3.427663691357763*^9}, {
   3.4276637216392064`*^9, 3.427663930562419*^9}, {3.427747988787846*^9, 
   3.427747993434623*^9}, {3.427748046072991*^9, 3.427748074669366*^9}, {
   3.427748105692069*^9, 3.4277481660109*^9}, 3.427748726855863*^9, {
   3.427749019704109*^9, 3.4277490638708963`*^9}, {3.427749117718431*^9, 
   3.4277491360271263`*^9}, {3.427749167300441*^9, 3.427749477889042*^9}, {
   3.427749510327975*^9, 3.427749521030015*^9}, {3.437513000498528*^9, 
   3.43751301192842*^9}, {3.437513055921091*^9, 3.437513055921329*^9}, {
   3.437517701617956*^9, 3.437517756780245*^9}, {3.437517790631505*^9, 
   3.437517911046335*^9}, {3.437517986863042*^9, 3.437518006983674*^9}, {
   3.437518081355178*^9, 3.437518107399365*^9}, 3.4375181444689283`*^9, {
   3.437518177240644*^9, 3.43751820748884*^9}, {3.437518237647111*^9, 
   3.437518238723469*^9}, {3.4375183068261557`*^9, 3.437518367030352*^9}, {
   3.437518406663901*^9, 3.437518445696847*^9}, {3.437518714781023*^9, 
   3.437518913464327*^9}, {3.437519039657459*^9, 3.437519060961151*^9}, {
   3.4375194644264603`*^9, 3.4375195104302998`*^9}, {3.437519578919443*^9, 
   3.437519579457107*^9}, {3.437840197796279*^9, 3.4378404161271987`*^9}, {
   3.437840449158871*^9, 3.437840474987327*^9}, 3.4380160042659035`*^9},
 CellID->1012356312,ExpressionUUID->"c7b60d92-9a58-4251-9e6e-bbea34ca8c7d"],

Cell[TextData[{
 "In this Demonstration, you can drag the time slider to simulate the \
simultaneous time evolution of the probability and momentum distributions. \
Note that the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
  "e4c1bc1a-cef6-415c-bf21-6f6d61f631f0"],
 " distribution broadens with time while the ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]], "InlineMath",ExpressionUUID->
  "79f5b68c-3a43-4377-8fb3-3a6648bfeaba"],
 " distribution maintains its original width. The numerical values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
  "07a921ae-0bf4-486c-8a4d-d93758af8d0b"],
 ", ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]], "InlineMath",ExpressionUUID->
  "b7467c93-b167-4891-80b0-352e6c074427"],
 ", and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath",ExpressionUUID->
  "fd79d985-1952-40bc-b66d-8a93f446dc6f"],
 " are illustrative only and have no absolute significance."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.427637421313634*^9, 3.427637441043084*^9}, {
   3.427637499243581*^9, 3.427637541098873*^9}, {3.427637571563836*^9, 
   3.427637699915369*^9}, {3.427637738095726*^9, 3.4276377546521597`*^9}, {
   3.427663963500129*^9, 3.4276639862033997`*^9}, {3.437517928496218*^9, 
   3.437517974429249*^9}, {3.43751854373705*^9, 3.437518599806542*^9}, {
   3.437518651889551*^9, 3.437518699710971*^9}, {3.4375189253833513`*^9, 
   3.437518952018236*^9}, {3.437519588127626*^9, 3.43751959067114*^9}, {
   3.437840491440663*^9, 3.437840495612591*^9}},
 CellID->1193103282,ExpressionUUID->"055b420c-c628-442d-991f-ec3d23d905bf"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1faca217-de21-4801-961b-396b2737da4a"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"6a4207b0-96a3-453e-8c52-df89394c1476"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"\[Sigma]0_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"\[Sigma]0", 
   SqrtBox[
    RowBox[{"1", "+", 
     FractionBox[
      SuperscriptBox["t", "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Sigma]0", "4"]}]]}]]}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.4275590848702383`*^9, 3.427559218575052*^9}},
 CellID->1161158971,ExpressionUUID->"c22231c2-beae-4bbf-8892-62cc58e748c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", 
   RowBox[{"\[Sigma]0_", ",", "p0_", ",", "x_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]], " ", 
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"\[Sigma]0", ",", "t"}], "]"}]}]], 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"p0", " ", "t"}]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"\[Sigma]0", ",", "t"}], "]"}], "2"]}]]}], 
    "]"}]}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.427403467156724*^9, 3.427403524163701*^9}, 
   3.4274043587812786`*^9, 3.427558908513478*^9, {3.42755923129869*^9, 
   3.427559281510334*^9}, {3.427559314300519*^9, 3.427559488687454*^9}, {
   3.4275609936449213`*^9, 3.427561021714252*^9}, {3.427561869221812*^9, 
   3.427561875885982*^9}, {3.42756192670499*^9, 3.427561932702199*^9}, 
   3.4275620787466383`*^9, {3.427564649445674*^9, 3.427564652224211*^9}},
 CellID->2004530789,ExpressionUUID->"df8544b6-6907-4c39-ba08-3c654edfdb43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]p", "[", 
   RowBox[{"\[Sigma]0_", ",", "p0_", ",", "p_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["2", "\[Pi]"], ")"}], 
    RowBox[{"1", "/", "2"}]], "  ", "\[Sigma]0", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"p", "-", "p0"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Sigma]0", "2"]}]]}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{
  3.35696210375764*^9, {3.427404561308389*^9, 3.427404599765343*^9}, {
   3.427559639471559*^9, 3.427559651494344*^9}, {3.427559682067378*^9, 
   3.42755969373678*^9}, {3.427560138077961*^9, 3.427560140358991*^9}, {
   3.4375197423946953`*^9, 3.437519773220436*^9}, {3.437520031905897*^9, 
   3.437520033917117*^9}, {3.437520074509475*^9, 3.437520081005385*^9}, {
   3.437520120442209*^9, 3.437520121305364*^9}, {3.437521921490061*^9, 
   3.4375219421663113`*^9}, {3.437522002494235*^9, 3.437522030192954*^9}},
 CellID->1414388709,ExpressionUUID->"273d533a-b3ee-4418-afa4-73fdf427a838"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "[", 
   RowBox[{"\[Sigma]0_", ",", "p0_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"\[Rho]", "[", 
     RowBox[{"\[Sigma]0", ",", "p0", ",", "x", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "None"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<|\>\"", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[Psi]\>\"", ",", "Italic"}], "]"}], ",", "\"\<(\>\"",
           ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
          "\"\<)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], "}"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".25"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"550", ",", "175"}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"Text", "[", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[CapitalDelta]\>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\< = \>\"", ",", 
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"\[Sigma]0", ",", "t"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}], ",",
            "24"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{".85", ",", "Center"}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{
  3.35696210375764*^9, {3.427404665671961*^9, 3.4274047709847608`*^9}, {
   3.427405213593905*^9, 3.427405220948642*^9}, {3.42740537558357*^9, 
   3.427405385707657*^9}, {3.427405542383039*^9, 3.427405573563715*^9}, {
   3.4274057289742203`*^9, 3.427405761454361*^9}, {3.427405830660778*^9, 
   3.42740584345037*^9}, {3.427405912622758*^9, 3.427405934801461*^9}, {
   3.427406028316144*^9, 3.427406032272985*^9}, 3.4274062844501047`*^9, 
   3.427406368021683*^9, {3.427406910496674*^9, 3.427406922298375*^9}, {
   3.427559510959199*^9, 3.427559569518592*^9}, {3.42756003736384*^9, 
   3.427560056583634*^9}, {3.427560652707706*^9, 3.427560695856305*^9}, 
   3.427560980381338*^9, {3.427562526699728*^9, 3.427562532074932*^9}, {
   3.427564270887814*^9, 3.427564331564855*^9}, {3.427564364832076*^9, 
   3.42756438774066*^9}, {3.427564474535315*^9, 3.4275644786375656`*^9}, {
   3.427564570833082*^9, 3.427564615021454*^9}, {3.427649118005361*^9, 
   3.4276491512886887`*^9}, {3.427749598810046*^9, 3.427749837777724*^9}, {
   3.427749869134296*^9, 3.427749891109263*^9}, {3.427749941712227*^9, 
   3.427749943901315*^9}, {3.427749992818312*^9, 3.427749995909268*^9}, {
   3.4277500320180902`*^9, 3.427750051308997*^9}, {3.42775014724272*^9, 
   3.427750168655773*^9}, {3.427750213303699*^9, 3.427750218763839*^9}, {
   3.427750293079977*^9, 3.427750296589043*^9}, {3.427750327225932*^9, 
   3.427750331819256*^9}, 3.427750371257841*^9, {3.427750448823866*^9, 
   3.427750454981994*^9}, {3.427750489054206*^9, 3.427750523819624*^9}, 
   3.427750554248543*^9, {3.427750616997423*^9, 3.4277507189422407`*^9}, {
   3.427750753618475*^9, 3.427750843116713*^9}, {3.427751210964958*^9, 
   3.427751229690349*^9}, {3.427751274411591*^9, 3.4277512958411717`*^9}, {
   3.427751332011318*^9, 3.427751369945359*^9}, {3.427751591547365*^9, 
   3.427751601312819*^9}, {3.427751640379589*^9, 3.4277516703874207`*^9}, 
   3.427751705066179*^9, {3.427752276926028*^9, 3.427752302913496*^9}, {
   3.42775554978125*^9, 3.42775556053125*^9}},
 CellID->1134543520,ExpressionUUID->"0b6b096e-34ce-4ff9-9435-8b8bed5c93aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "[", 
   RowBox[{"\[Sigma]0_", ",", "p0_"}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"\[Rho]p", "[", 
     RowBox[{"\[Sigma]0", ",", "p0", ",", "p"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "None"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<p\>\"", ",", "Italic"}], "]"}], ",", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<|\>\"", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[Phi]\>\"", ",", "Italic"}], "]"}], ",", "\"\<(\>\"",
           ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<p\>\"", ",", "Italic"}], "]"}], ",", 
          "\"\<)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], "}"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".25"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"550", ",", "175"}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"Text", "[", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[CapitalDelta]\>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<p\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\< = \>\"", ",", 
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"N", "[", 
                 FractionBox["1", 
                  RowBox[{"2", "\[Sigma]0"}]], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}], ",",
            "24", ",", "Red"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{".85", ",", "Center"}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{
  3.35696210375764*^9, {3.427404799555559*^9, 3.427404841384882*^9}, 
   3.427405238600101*^9, 3.42740540678722*^9, 3.4274056187592688`*^9, {
   3.427405784691773*^9, 3.4274057894585543`*^9}, 3.427405861869933*^9, {
   3.427405943628993*^9, 3.427405958485815*^9}, {3.42740609996361*^9, 
   3.4274061050003633`*^9}, {3.427406228618142*^9, 3.427406252358459*^9}, {
   3.42740631282648*^9, 3.427406353073677*^9}, 3.427406952894965*^9, {
   3.427560074863719*^9, 3.4275601137503366`*^9}, {3.42756015110378*^9, 
   3.42756015183968*^9}, {3.427564705465145*^9, 3.427564725782561*^9}, {
   3.4276490794755087`*^9, 3.427649115426103*^9}, {3.427751756078781*^9, 
   3.4277517647478952`*^9}, {3.427751800394356*^9, 3.427751822309914*^9}, {
   3.427751856824917*^9, 3.427751948322622*^9}, {3.427751988284795*^9, 
   3.427752030834132*^9}, {3.427755585203125*^9, 3.4277555958125*^9}, {
   3.437520135463368*^9, 3.437520199369651*^9}},
 CellID->765638927,ExpressionUUID->"1ce7df35-a43e-4a8c-93b6-e98e464bf1a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "48d9ec88-8fa6-4df8-afb6-4bc9d5147964"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"4c271684-4906-4886-85da-3bb4c70f9aca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g1", "[", 
        RowBox[{"\[Sigma]0", ",", "p0", ",", "t"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"g2", "[", 
        RowBox[{"\[Sigma]0", ",", "p0"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Spacings", "\[Rule]", "2"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p0", ",", "0", ",", 
       RowBox[{"\"\<momentum \>\"", 
        RowBox[{"Subscript", "[", 
         RowBox[{"p", ",", "0"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"-", "5"}], ",", "5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]0", ",", "1", ",", 
       RowBox[{"\"\<wave packet width \>\"", 
        RowBox[{"Subscript", "[", 
         RowBox[{"\[Sigma]", ",", "0"}], "]"}]}]}], "}"}], ",", ".1", ",", 
     "5", ",", " ", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\"\<time\>\""}], "}"}], ",", "0", ",", "4",
      ",", " ", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{"p0", ",", "\[Sigma]0", ",", "t"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.427404865790704*^9, 3.427405034655979*^9}, {
   3.4274050778418417`*^9, 3.427405140160335*^9}, {3.4274053002268*^9, 
   3.427405301318986*^9}, {3.427406158419734*^9, 3.427406203210819*^9}, 
   3.427406491720757*^9, {3.427406622681213*^9, 3.427406626670804*^9}, {
   3.427406669991026*^9, 3.427406767891711*^9}, {3.42740680122325*^9, 
   3.427406814820232*^9}, {3.427559761512982*^9, 3.427559771514454*^9}, {
   3.427559812724135*^9, 3.427559998326793*^9}, {3.427560335778942*^9, 
   3.427560356320749*^9}, {3.427560485237254*^9, 3.42756048671391*^9}, {
   3.427560547347766*^9, 3.427560591753412*^9}, {3.427560794850111*^9, 
   3.427560795920948*^9}, 3.427562135341714*^9, {3.4275622442726607`*^9, 
   3.427562245398199*^9}, 3.427564877281231*^9, {3.4275649699930778`*^9, 
   3.427564971062454*^9}, 3.427638511587882*^9, {3.427649168873448*^9, 
   3.427649172114772*^9}, {3.42764925550811*^9, 3.4276492592464843`*^9}, {
   3.427649371364694*^9, 3.427649378948453*^9}, {3.437520220484109*^9, 
   3.437520222212318*^9}, 3.438016001450622*^9},
 CellID->35821574,ExpressionUUID->"e6a019d0-f521-45c1-8e95-521c8522ed8e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`p0$$ = 4.74, $CellContext`t$$ = 
    2.7800000000000002`, $CellContext`\[Sigma]0$$ = 0.22, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`p0$$], 0, "momentum " 
       Subscript[$CellContext`p, 0]}, -5, 5}, {{
       Hold[$CellContext`\[Sigma]0$$], 1, "wave packet width " 
       Subscript[$CellContext`\[Sigma], 0]}, 0.1, 5}, {{
       Hold[$CellContext`t$$], 0, "time"}, 0, 4}}, Typeset`size$$ = {
    550., {185.134033203125, 190.865966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`p0$268716$$ = 0, $CellContext`\[Sigma]0$268717$$ = 
    0, $CellContext`t$268718$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`p0$$ = 0, $CellContext`t$$ = 
        0, $CellContext`\[Sigma]0$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`p0$$, $CellContext`p0$268716$$, 0], 
        Hold[$CellContext`\[Sigma]0$$, $CellContext`\[Sigma]0$268717$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$268718$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         $CellContext`g1[$CellContext`\[Sigma]0$$, $CellContext`p0$$, \
$CellContext`t$$], 
         $CellContext`g2[$CellContext`\[Sigma]0$$, $CellContext`p0$$]}, 
        Spacings -> 2], 
      "Specifications" :> {{{$CellContext`p0$$, 0, "momentum " 
          Subscript[$CellContext`p, 0]}, -5, 5, Appearance -> 
         "Labeled"}, {{$CellContext`\[Sigma]0$$, 1, "wave packet width " 
          Subscript[$CellContext`\[Sigma], 0]}, 0.1, 5, Appearance -> 
         "Labeled"}, {{$CellContext`t$$, 0, "time"}, 0, 4, Appearance -> 
         "Labeled"}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`p0$$, $CellContext`\[Sigma]0$$, \
$CellContext`t$$}}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{594., {259., 265.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`g1[
         Pattern[$CellContext`\[Sigma]0, 
          Blank[]], 
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := Plot[
         $CellContext`\[Rho][$CellContext`\[Sigma]0, $CellContext`p0, \
$CellContext`x, $CellContext`t], {$CellContext`x, -20, 20}, PlotRange -> All, 
         AxesOrigin -> {0, 0}, PlotStyle -> {Thick, Black}, Axes -> None, 
         Frame -> True, FrameTicks -> None, FrameLabel -> {
           Style["x", Italic], 
           Row[{"|", 
             Style["\[Psi]", Italic], "(", 
             Style["x", Italic], ")\!\(\*SuperscriptBox[\(|\), \(2\)]\)"}]}, 
         AspectRatio -> 0.25, ImageSize -> {550, 175}, Epilog -> Inset[
           Graphics[
            Text[
             Style[
              Row[{"\[CapitalDelta]", 
                Style["x", Italic], " = ", 
                NumberForm[
                 $CellContext`\[Sigma][$CellContext`\[Sigma]0, \
$CellContext`t], {4, 3}]}], 24]]], {0.85, Center}]], $CellContext`\[Rho][
         Pattern[$CellContext`\[Sigma]0, 
          Blank[]], 
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := (1/(
         Sqrt[2 Pi] $CellContext`\[Sigma][$CellContext`\[Sigma]0, \
$CellContext`t])) 
        Exp[-(($CellContext`x - $CellContext`p0 $CellContext`t)^2/(
           2 $CellContext`\[Sigma][$CellContext`\[Sigma]0, \
$CellContext`t]^2))], $CellContext`\[Sigma][
         Pattern[$CellContext`\[Sigma]0, 
          Blank[]], 
         Pattern[$CellContext`t, 
          Blank[]]] := $CellContext`\[Sigma]0 
        Sqrt[1 + $CellContext`t^2/(4 $CellContext`\[Sigma]0^4)], 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`g2[
         Pattern[$CellContext`\[Sigma]0, 
          Blank[]], 
         Pattern[$CellContext`p0, 
          Blank[]]] := Plot[
         $CellContext`\[Rho]p[$CellContext`\[Sigma]0, $CellContext`p0, \
$CellContext`p], {$CellContext`p, -20, 20}, PlotRange -> All, 
         AxesOrigin -> {0, 0}, PlotStyle -> {Thick, Red}, Axes -> None, Frame -> 
         True, FrameTicks -> None, FrameLabel -> {
           Style["p", Italic], 
           Row[{"|", 
             Style["\[Phi]", Italic], "(", 
             Style["p", Italic], ")\!\(\*SuperscriptBox[\(|\), \(2\)]\)"}]}, 
         AspectRatio -> 0.25, ImageSize -> {550, 175}, Epilog -> Inset[
           Graphics[
            Text[
             Style[
              Row[{"\[CapitalDelta]", 
                Style["p", Italic], " = ", 
                NumberForm[
                 N[1/(2 $CellContext`\[Sigma]0)], {4, 3}]}], 24, Red]]], {
           0.85, Center}]], $CellContext`\[Rho]p[
         Pattern[$CellContext`\[Sigma]0, 
          Blank[]], 
         Pattern[$CellContext`p0, 
          Blank[]], 
         Pattern[$CellContext`p, 
          Blank[]]] := ((2/Pi)^(1/2) $CellContext`\[Sigma]0)/
        E^(2 ($CellContext`p - $CellContext`p0)^2 $CellContext`\[Sigma]0^2), 
       Attributes[Subscript] = {NHoldRest}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellID->175189803,ExpressionUUID->"8f7853ed-796c-4f81-9c78-672c6a16543c"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.0691653114758397`\\\", \\\" \\\", \
\\\"1.18406998347192249146178644269`12.78353770047222*^-644\\\"}]\\) is too \
small to represent as a normalized machine number; precision may be lost.\"", 
   2, 313, 312, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935374992924736*^9},
 CellLabel->"",
 CellID->1825366484,ExpressionUUID->"88b89a41-38c9-403c-90ec-4505430784eb"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.635663349645874`\\\", \\\" \\\", \
\\\"8.43813764633249165435381789831335`12.414239575090326*^-1508\\\"}]\\) is \
too small to represent as a normalized machine number; precision may be lost.\
\"", 2, 313, 314, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935374995261776*^9},
 CellLabel->"",
 CellID->2130599193,ExpressionUUID->"bb30f5df-e2c2-4f25-b4f9-3c22c6486ed2"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.635663349645874`\\\", \\\" \\\", \
\\\"8.43813764633249165435381789831335`12.414239575090326*^-1508\\\"}]\\) is \
too small to represent as a normalized machine number; precision may be lost.\
\"", 2, 313, 316, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935374998295548*^9},
 CellLabel->"",
 CellID->1838306673,ExpressionUUID->"80551c5e-dd37-4556-8ee0-7b3419ae4c58"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.635663349645874`\\\", \\\" \\\", \
\\\"8.43813764633249165435381789831335`12.414239575090326*^-1508\\\"}]\\) is \
too small to represent as a normalized machine number; precision may be lost.\
\"", 2, 313, 318, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9353750009447803`*^9},
 CellLabel->"",
 CellID->573023722,ExpressionUUID->"b1d54880-ce9d-4e01-924d-d8f8b8d8d788"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.635663349645874`\\\", \\\" \\\", \
\\\"8.43813764633249165435381789831335`12.414239575090326*^-1508\\\"}]\\) is \
too small to represent as a normalized machine number; precision may be lost.\
\"", 2, 313, 320, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935375003329533*^9},
 CellLabel->"",
 CellID->1493022506,ExpressionUUID->"782c7a58-14c5-423e-8360-94c9189831c7"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.635663349645874`\\\", \\\" \\\", \
\\\"8.43813764633249165435381789831335`12.414239575090326*^-1508\\\"}]\\) is \
too small to represent as a normalized machine number; precision may be lost.\
\"", 2, 313, 372, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935375016186372*^9},
 CellLabel->"",
 CellID->2030326794,ExpressionUUID->"d0ae0a5b-7a72-4938-b5bf-5031f06d550a"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.635663349645874`\\\", \\\" \\\", \
\\\"6.08595343528947880543930575`12.67791685301087*^-822\\\"}]\\) is too \
small to represent as a normalized machine number; precision may be lost.\"", 
   2, 313, 381, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9353750205299664`*^9},
 CellLabel->"",
 CellID->187275928,ExpressionUUID->"2d0a335d-60cc-4f7c-a35e-6095ac0ecc53"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.635663349645874`\\\", \\\" \\\", \
\\\"6.08595343528947880543930575`12.67791685301087*^-822\\\"}]\\) is too \
small to represent as a normalized machine number; precision may be lost.\"", 
   2, 313, 473, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935375033619226*^9},
 CellLabel->"",
 CellID->1482979041,ExpressionUUID->"51e2f81e-16d3-43ce-8ea0-935f8bd49241"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.635663349645874`\\\", \\\" \\\", \
\\\"3.915982711191548652172973`12.676759442776623*^-824\\\"}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   313, 475, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935375037118739*^9},
 CellLabel->"",
 CellID->733535005,ExpressionUUID->"3cd1eda9-0d1b-4fd5-977c-00d382c8f32a"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"19998.365747671836`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 313, 512, 
   30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935375043851418*^9},
 CellLabel->"",
 CellID->1966695255,ExpressionUUID->"77f5be1b-50ac-4002-9767-59f5aafcf48d"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.1808691499882409`\\\", \\\" \\\", \
\\\"6.74559780248661379090558640602469`12.95974373409822*^-430\\\"}]\\) is \
too small to represent as a normalized machine number; precision may be lost.\
\"", 2, 313, 525, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9353750619793777`*^9},
 CellLabel->"",
 CellID->178856161,ExpressionUUID->"b13814bc-8f3d-4c0b-b29e-1e9c6eb4f3d8"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"1.1808691499882409`\\\", \\\" \\\", \
\\\"6.74559780248661379090558640602469`12.95974373409822*^-430\\\"}]\\) is \
too small to represent as a normalized machine number; precision may be lost.\
\"", 2, 313, 569, 30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9353750696727467`*^9},
 CellLabel->"",
 CellID->1705875774,ExpressionUUID->"01c06bf3-bb84-4238-be07-00743573a09f"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"19998.365747671836`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 313, 574, 
   30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935376148164064*^9},
 CellLabel->"",
 CellID->1747446168,ExpressionUUID->"3ca490ad-fc3b-447e-b854-bf070a5be918"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"19998.365747671836`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 313, 576, 
   30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935376151762802*^9},
 CellLabel->"",
 CellID->341389204,ExpressionUUID->"06970656-bb44-4de4-847a-21bc958409f2"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"19998.365747671836`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 313, 578, 
   30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935376154111898*^9},
 CellLabel->"",
 CellID->1799530491,ExpressionUUID->"f39d389c-7cd2-4bec-96cd-dd8c7b6cb6de"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1543.083776826531`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 313, 604, 
   30645888301958250308, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9353761618832827`*^9},
 CellLabel->"",
 CellID->1696761536,ExpressionUUID->"25e9dc66-19a8-4c73-9d04-2eb2a2f3940e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "79729715-ce86-433c-af7e-d431a8200e4c"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"3dfa8a5e-11ac-4057-9691-d2a0aea603e8"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Ql4U2XesHFayr7vIgiyyCi7gAgC6qjIIiC44MIqiuygbL7IIOALI4Iy
oCyCLAMqiigCI6IoIM5QBsqwtxQKlNKFLm/3KRRp8ftPn+H5jmmbpk3Sk5zc
v+uauZKTc57zJEKSm5OcNBox6alX/UuUKDGlrPzfUy+98cfJk1+a8XRVufLs
xCljRk0c+UqviVNHjho5udOIkrKwbECJEp/I//5z+bdcrl+/np6e/n8AAAAA
AM8m7SYFlzvrbBIvOUdqauq/AQAAAACeTdpNRVx+uZeRkSG3pqWlZeS4BgAA
AADwbCrfpOOk5uRCnpUnPXj16lWzZwoAAAAAKATpOKk5m9ZTn9ik8gAAAADA
S+nW05/hTEpKUp/YNHtqAAAAAIAiUp/hlL6TysvMzFQH+MyeFAAAAADAKepL
eVJ5Unypqal8aBMAAAAAvJ2UnfSdVN7//d///fvf/zZ7OgAAAAAAF5C+Uz+x
R+gBAAAAgDUQegAAAABgMYQeAAAAAFgMoQcAAAAAFkPoAQAAAIDFEHoAAAAA
YDGEHgAAAABYDKEHAAAAABZD6AEAAACAxRB6AAAAAGCuizkO59j9e2qhWsHx
AQk9AAAAADAXoQcAAAAAlhGc41vHqJUdGZbQAwAAAACzEHoAAAAAYBnq05i5
ay7l93Kv4MjHOAk9AAAAACh+hB4AAAAAWIw6y0oRQk9taH9wQg8AAAAAih+h
BwAAAAAWo349Ic+4y49aWW1of3BCDwAAAACKH6EHAAAAABZD6AEAAACAxRB6
AAAAAGAxhB4AAAAAWAxn3QQAAAAAiyH0AAAAAMBiLuYoQuipDe0PTugBAAAA
QPEj9AAAAADAkoJz5K65PKmVHRmW0AMAAAAAsxB6AAAAAGBJ6tOY6iwru39P
LXTk45pGhB4AAAAAmIvQAwAAAADYR+gBAAAAgMUQegAAAABgMYQeAAAAAFgM
oQcAAAAAFkPoAQAAAIDFEHoAAAAAYDGEHgAAAABYDKEHAAAAABZD6AHwTVft
Mnt2AAAATiH0APgUY81l5IPiAwAA3o7QA+AjbPpOnvTScqQaqCVyk03xmT13
AACAwiH0APgCnXiq71JSUhISEuLi4q5cuRIdHR2ZQy7IVVkoN8kKuvhoPQAA
4HUIPQCWZ0y8pKQkSbmoqKiYmBh56pMlmZmZ2TnkglyVhXKTrCCrycrG3DP7
fgAAADiK0ANgbbryUlJSpN0k4hISEmThb3bJCrKarCybyIa0HgAA8C6EHgAL
U5WXnp6enJws1RYbGytX7Seekawsm8iGsrkMQusBAABvQegBsCpdeYmJidHR
0QkJCY4nnpFsKJvLILQeAADwFoQeAEvSlZeUlBQVFSXPckWrPEU2l0FkKFoP
AAB4BUIPgPWo82Sq7+U5cywv93E99X09zsMJAAA8HKEHwHrU4by0tLTY2Ngr
V644X3mKDCUDyrAc1IOnOXv27K5du4KCgng1BwAohJ5VyX/Q3bt3Hz161OyJ
AMVNHW5TX82LioqSC64KPRlKBlRf1uOgHjxEamrqgAEDStzSrFmzI0eOmD0p
AID5CD2runz5srzi9+jRw+yJAMXNeDgvLi7OVZWnyIAc1IOTvnXMzhwFjvbG
G2/Is33Lli3nz5/fr18/f3//Fi1aSP0Vwx0BAHgyQs+qCD34LPXtvOTk5MjI
SLng2tCTAWVYGVx9U8/s+wqv5MLQCwwMlLJr2LBhSkqKWjJ27Fh58pf6c/vd
AAB4NkIvP+PHj7/nnnvkNbR79+4VKlRo1KjR6tWr09PTZ86c2aBBg/Lly3fp
0mXv3r3GTdasWdO3b9+qVas2bdr05ZdfPnz4sL7p1KlTMtr8+fPnzJkjt1as
WLFfv37h4eEHDx588MEHZTR5mR43bpzNf4X169f36dOnUqVKbdq0mTJlSnR0
dO4BFyxY0KpVqzJlyrRo0eKvf/2runXu3LmyF3mtl5Flteeee04tf/HFF9u2
bWvcxZ///GdZQUYr8r22/wCePn164MCB1atXv/3220eMGHHs2DEHH3875N11
bGzspUuXLt5yAbjlfI5z586dOHEiJCTEtZWnyLAyuOxC7cvsewwPop+U5AlK
nqby+6eA3E2Xekvum+w/H86aNUue6teuXauXREVFyXN18+bNnX+yBQB4NUIv
PxJi8upZv359yaiePXuWLl1arj7++ONly5bt0aNHp06d5GrlypUjIyPV+h98
8IEsKVeu3GOPPda6dWu5XKtWrTNnzqhbJfpkSb169STxnnjiibvuukuuduzY
sVq1anL5ySefrFGjhiyZPn26nsCqVatkiVSe7E6t361bt7S0NOOAd9xxh8zn
kUceUSuI3bt3q2179eolV2vXrj1gwAD9T7udO3eWO2K8mxMmTJDVDh06VLR7
XeAD2KRJE7nLsq1ckKtSi/ImxIn/LP8hb58u/p7Zb+7gQaS8wsLCQkNDjx49
Gh4e7o7Qk2FlcNmF7IjQg5HNU1NcXFyeT2IuDL3nn39enlr1a43Srl27MmXK
ZGRkOPlkCwDwaoReflSnDB48WF397LPP5Kqfn9+PP/6olrz44ouy5Ouvv5bL
wcHB/v7+NWvWlDd+6tYVK1bIrV26dFFXVZdVqFBBfUc+JSWlbdu2sqR79+7q
kT916pQMfu+996r15T1kqVKlJLjkLaVaMmzYMFn/nXfeMQ4oL+X6+Npbb70l
S4YMGaKu5vnRTQdDz8F77cgDKGWnD0SOHz/eOEOtsCeLMx7LI/RgQx3Ok/e9
8nckPj7eHaEnw8rgsgt1UM/sewwPYvPUJE9WeT6JGTvuuxxFDr327dvLU7T+
N0Clf//+8mQrryOOPKMCAKyK0MuP6hRdQJJm6tvueoX169fLkvfff18ur127
Vi4vXrzYOEKHDh2kqtTrr+qyvn376lunTp0qS7744gu9pEmTJtWqVTMOvnz5
cn1rTEyMLHnyySfVVTXgI488olc4efKkOuqnrjoTeg7ea/vUUJ988oleIg9F
5cqV77rrLr2kaCeLI/Rghwq9kJCQgwcPZmRkuCP0ZFgZXHZB6MFG8Yde3bp1
q1evbrNw5MiR8oy6Z8+eAp9OAQAWRujlR3WK8YM3cvXhhx/WV7ds2SJL3nvv
vWu3jlX99NNPxhFGjBghC+UN4bVbXSZVpW+dOXOmzSZt2rSpWrWqujxx4kTV
Pm0N1MdB1QpqwLFjxxr3KBHXqVMnddmZ0HPwXtunhjp9+rTNBPz8/BITE9XV
op0sjo9uwg4deoGBgVlZWe4IPRlWBif0kFuhPrqZWhBHQq9jx47yLGrztKme
fuXPZwFP0wAASyP08lOo5Hn55Zfl8j/+8Q/jCGPGjJGF6qOVhQ09FYmtWrV6
1qBJkybDhw9XK+QeUJQpU8bTQk9/llV56KGHZGFMTMw1J04Wx8lYYIcKveDg
4AMHDrgv9GRw2QWhBxuFOhmLS0Jv0KBB8rQpfxqNC+XVpFy5cpwVFgB8HKGX
n0Ilz/Lly+Xy6tWrjSNI1Pj5+clje63woffhhx/KrRs2bMhvekULva5du8pC
46eJ1Bf53Rd627dvNy6sU6dO/fr11WVOFgd3UL+tkJSUJO+65bI7Qk+GlcFl
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
D6wx9NRWNhGnHtjCnnXTwdD78MMPjZ8pVbp37166dGn9UVVt1qxZNmNGRUVJ
ZTdv3tz+XqxE/bZCUlKSvEWUy+4IPRlWBpdd8AsLgIcg9AAAxcDlP6/QsmXL
Ll26SCk0aNBArsrb+ypVqrz++uutW7eW5WodFRcNGzbUH2s5fvy4TeiJ+++/
/4477ggJCTF+y+zarZrYsGGDg1NSoafOf6LVqVOnfv36jkxm5cqVcnXFihXG
zWUrFYkq9KpVq5aQkHD33XeXyPkyms2O8vuMqOLgzys48sBey/XRzZo1a6r1
NZWKbgq90aNH23xKVh6lChUqPPHEE7lXfv7552XlM2fOGBe2a9euTJkyOuot
T4VeSkpKeHh4YmKiO0JPhpXBZReEHuAhXHjWTY3QAwDYcHnoSXqULl26Xr16
L7/8sloixSQZ5efnp09Icvjw4RI558nUW02YMCF36Klznqjja/pMKeLAgQOy
5L777ktKSlJLzp8/379//zfffDPPKanQ69ixoz49iBq5T58+jkwmKChIrjZq
1Cg2NlYt2blzpyzp1avXtd+fjOXkyZOVKlUqVarUzz//rEdTp7U0frvt3Xff
lSnpe6Q+r7hu3TrnH9hruULvsccek6uSaeqqvNtXnx3Voac+3tm4cWPjvooc
eosXL5bV/vznP+slMrdy5crp89gYtW/fXiZvc65U+e8oI+S5viXp0IuMjIyO
jnZH6MmwMjihB3gOQg8AUAxcHnoqgozfGvvoo4/UEv0CJO8269Spo3Jj3rx5
kkJlypTJHXryBlWiSX3BzWYv6shRixYtpk+fPmXKlNq1a9s5xqdCr3LlyjLO
tGnTnnnmGRlWikx9B82RyUyePFmWNG3adOrUqcOGDatataoUyg8//HAt1+/o
yb2Wq3Xr1tWpJfVXvXp1GfP555+fO3du7969ZYXmzZvrjzKqOLr99tslMNVP
JBT5gb2WK/SkUsuXLy+FKPdOJt+qVSv1s3069IRMT5bIxPRRyyKH3oULF0rk
/FSEurp582Z5nI0H+IzkUZJd2yxU71XUdzN9gfzxy8jIkHd3UtwXL150R+jJ
sDK47EJ2ROgBnoDQAwAUA5eHXkpKSrly5QICAhISEtQS9ea/Ro0axs/jHT58
WH3QUR1O+vrrr0sYTnSpqUZbuHChzXIZatKkSY0aNVIjNGjQwM4RMTXIrl27
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
hJ6JCD0A8GTz5s2zOYDVr1+/IQbG432VKlUakg+bQUqXLh0fH6/3kvvHFGQF
m1c6m+/u3XnnnQ7+jk8RnDp1Su/otttuc9Ne7CP0AMB5hJ6JCD0A8Fg3b95s
0qRJCfdYsGCB2kueP6awdu1am8nExcWVK1fOuM7KlSvddMezsrKM+4qOjnbT
juwg9ADAeYSefUePHl1WJKmpqQUOTugBgMfat2+fmypPNG7c+GaOp59+2uam
iRMn5jmf1157zbha/fr1MzMz3XTfO3furHe0Y8cON+3FDkIPAJxH6Nm3c+fO
V4uE39EDAK+W+yOXrvX999/n/jGFRx99NL8TrcTExNj8/Lr9X2pwxvjx4/Ve
Zs+e7aa92EHoAYDzCD37MjIyooskOzu7wMEJPQDwWDY/i+ByuUOycePG9s/h
PG7cOOP6999/v5vu+1//+le9l969e7tpL3YYS9PPz+/ixYvFPwcA8HaEnokI
PQDwXsYfQ2/durXZ03Gl4OBgfddq1apl9nQAAEVB6JmI0AMA72U8J+fIkSPN
no4rZWdnV6pUSd87m9+IBwB4BULPRIQeAHivfv366RT6+OOPzZ6Oiz388MP6
3n3xxRdmTwcAUGiEnokIPQDwXrfddptOoRMnTpg9HRebPn26vneTJ082ezoA
gEIj9ExE6AGAl4qIiNAdVKFChaysLLNn5GJfffWVvoNdunQxezoAgEIj9ExE
6AGAl9qyZYvuoG7dupk9HdeLiorSd7BcuXK//vqr2TMCABQOoWciQg8AvJTx
J/CmTp1q9nTcol69evo+yqu52dMBABQOoWciQg8AvNRDDz2kI+jLL780ezpu
8fTTT+v7uGzZMrOnAwAoHELPRIQeAHijrKysChUq6Ai6dOmS2TNyi0WLFun7
OHjwYLOnAwAoHELPRIQeAHij48eP6wKq/f/YuxN4K+c88ONTKdkZjP0/KMNg
jG3MjL+xDGMb+76NJWYqO5ElkiUi60REMpYikgnFZGTJS8oQfyIjEaVipKSU
7r3n/xw35znndLtb55zfPc99v1/Pa1517nN+z/c8pXs/c5bnZz8LPU6xjB49
OvMw27dvH3ocABpG6AUk9ADKUd++fTMFdPDBB4cep1jmz5/funXrzCOdOXNm
6IkAaAChF5DQAyhHJ5xwQiZ/rr/++tDjFNFOO+2UeaRDhw4NPQ4ADSD0AhJ6
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
g5deemnJp/aqtWzZcosttthll12uuOKKKOFDTwpQloReQEIPoHZRzX399dcf
ffTR2LFjn3zyybvuuuvSSy895phjtt9++xVXXLHGRsjYa6+9XnvttdCPgNpU
VFT0799/k002qf2PcqWVVtptt92ior/mmmuitB85cuRbb701derUefPmhX4E
AE2X0AtoWU7+pEmTOgFl7je/+c2WPzrhhBOKd6Btttkmc6Dop+UG3bdjvf0t
yy677LLFFlts/oODDjqoQ4cOp5xyysknn3zSSSf95S9/Of7444899tijjjrq
8MMPP+SQQw444IB99tnnj3/8Y3Sv6Jz86le/at++/XrrrbfKKqss+eq+OrVt
2zY6xBtvvFHAf64pqij3Bg0atPPOOzf0z/onP1x+fY011thoo42iv2nbbrvt
b3/721133TVq/P322+/AAw889NBDjzjiiKOPPvq4446L/hM78cQTo7+B0d/D
Dj849dRTo/8c/vqjzN/e6r/P0c6//NH2229f49/5Av5HGh0i8x9pNGQBV84W
neTMUY455pgiHQUorK5duzbuX1ehF9CynPzRo0c34hsiQFJFfbf//vv379//
66+/LuA/1JTSxIkTe/ToseTHpQI0Z+uss07j/lEVegEJPYBlsfbaa++9997d
u3d/7rnnvvOJmgnyySefdOzYceutt15xxRUb8awuQJIIvXIk9ABqF/2Qv8oq
q/z85z/fYYcd9ttvvw4dOkRZd++997700kuuiNdMLFq0aNKkScOHD+/Tp88F
F1xw7LHH7rHHHlEDrrfeem3btg39NxSg6IReOVqWkz99+vQ7gTL317/+9dgf
9e7du3gH+stf/pI5UPTTcuMWuase+v3ovPPOiw564g+uu+66KM0GDBhw3333
/eMf/3jggQceeuihQYMGDR48+LHHHnviiSeeeuqpZ5555vnnnx89evS4cePe
fvvt//73v9OmTZszZ05lZWUB/9UleRYuXPjVV19NmTLl/fffHz9+/JgxY158
8cXnnntuxIgRw4YNGzp06KOPPvrII48MHDjwwQcfvP/++6O/gdHfw+gvZP8f
3HPPPXf/oF+W6r/Mt9xyy3E/6tChQ/bf88L+51ntlFNOyfxHGh26GIeIdO7c
OXOU6D/MIh0FKKzo367G/Qsp9ALyqZsAAEAxCL2AhB4AAFAMQi8goQcAABSD
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
oKoqVY//767BHnssnvyQQwq8eBQvmcVbt158ncGXX84plK22qmORe+7J2f/Y
Y5dppLynX7/6qpHrFPxRhD0tAEUj9Gr34osvnn766dFZ6t2797hx42r5lJXp
06c//vjjXbp0qf5glhqvq55H6AHU1w035Px0vffei2+PfpF9e9eujVn88cfj
y3M/8MDiG99/P/0k1Gabpd9AF6283nrpN7t1756+mnZB/P3v8didOhVmzWyr
rhqvX/12s7xzeP75dawwdWrO/quttkzzrLlmvNTGGzd+nYI/irCnBaBohF6d
pk2bdv3111d/ykrnzp2jXz/66KPPPvvs6NGjR40aNWzYsLvvvvvCCy+s3qFT
p06DBg1asGBBfVYWegD1tcUWOT9dDxiw+PaHHsq5fe21U/X73OMc222X84RO
tMLll+c8gZi9RcEybFgBHtGll8ZrFuMjQ7NfYfjuu+lbDjss54GMGFH3Iu3b
59zl008bOUx0x+x1jjiikeukivAoAp4WgGISevX03nvv3XzzzR07dlzywgrV
zjrrrIEDBzboPX1CD6BeXn015+fqFVZIzZ69+Evz5qVWWSXnq4MGNWzx+fNz
mu6QQ1K77FJz4mVvUQkuow4d4tX69VvW1Za0667x+v/+d/qW9dfPeQj1eOVJ
6vDDc+7y7LONHObJJ3PWyXwSS9TU77yTfhXrww+nf7FoUd1LFfxRBDwtAMUk
9Bpk7ty5Y8aMiYKub9++vXr1uvHGG++5556hQ4dGGbioPt+ecgk9gHo59dSc
n6uPPjrnq6edlvPVP/yhYYvnVWQ9t5YtU+PHL9OD2m+/eLWCPEWY56ij4vUf
eiidVNnzt227+I17tTvvvJx71XhJu/q46qr8Mop6fNttc95iWT3VjjumD5oJ
+TwFfxRhTwtAMQm9gIQeQN3mzs1/zm748Jwdom8KeRU2YUID1r/11ppTbsst
U/fdl35D1uefp5+Q2mmn/B3++MdlelzZrxcdO3aZlqrR2WfH6994Y/qza7KH
/8Uv6rXILbfk3Ouiixo5TN7LI7Ovh1jjtuGGNX8sZ8EfRdjTAlBMQi8goQdQ
t6i28hphyQujb755zj5nndWA9Y8/vobQOPnkVN67rRcuzH/q8CeNes3ep5+m
P+Yx2rI/nOSxxxbfWM/tk0/qPtC118brX3BBzmX7om233eo17cCBjT+x2TbZ
pI6yq3Hr3Dn/xZwFfxRhTwtAMQm9BnnnnXfuvPPOPn36PPLIIxMnTqyqzws8
lk7oAdTtD3/I+aG6xg9F7NUrZ5/VVlvqBa+XtNlm+X1xzDE17xml38Yb5+x5
2WUNfjjHHtuY5MnbDj207gMNGBDvf8IJqTfeyFlh333rNe3QoTn36tChwY83
Mnt24x9pz545SxX8UQQ8LQBFJvRqN3369FmzZlX/+oMPPsj7MJarrrrq448/
bvTiQg+gDh98kP+T/1tv1bDbtGn57/bq379e60f/wrdokXPHdu3SH8+yNPff
n7NzI66hVrLQGzEi3n+vvVIvvNDgFfIW+ckS746sp5dequEhrLtu+loV776b
PtszZqSeey7ddFGh5+22/PLp61xkFPxRBDwtAEUm9Go3fPjwzp0733fffZ9/
/vnAgQOj03XOOef079//lltuiW6Pfhul3+jRoxu3uNADqMPFF+f8RL3NNkvd
c//9c/bcccd6rR/1RV5Z1P4BmJ99lrPzTjs17OGkShh648fH+2+1VfptgNkr
1PMNhs8/n3Ovgw5q8OON3HZb/vy//nU67pYUnd59983feeedU5WVi3co+KMI
eFoAikzo1e7FF1/MPH/XqVOn6H/f+vH/TI5GfeKJJ6pz75VXXmnE4kIPoDYV
FfkffX/jjUvd+bHH8gPh9dfrPkTPnjl3WW+9/Lfm5amqWnz99OptzTUb/KBK
FnpRSWX2/+lP85+EOuqoek07cmTOvQ4/vMGPN/XDR5dEf46ZZ06jcPv669r2
j2or7/E+8cTiLxX8UQQ8LQBFJvTqNGXKlH79+mVetHnDDTe88847ma9+9NFH
55577hlnnDFt2rSGriz0AGrz9NM5P063alXbNc4WLsz5eJNoO/XUug9xyCE5
d7n++rrvkn2U1q0b8HCqffBB6qmnUuecEy+y++7pWxq0Zb+acWkqK3OuD/jv
fzfmSai8698ty5vRvvsuNXFieow63z4Z7damTc5xM1ctfPnlAj+Kgi8I0GQI
vXr64osvunfvnnl278orr3z11Vcrfvjkt/fffz+6pW/fvg1dU+gB1ObQQ3N+
nK7zgzKyLygQbSuuuNTLsWVkP2PYtm3qm2/q2H/+/Jz39K27bgMeTra8j8Qs
kuxHl1fNe+9drxUefTTnXueeW6xR8+T9UWaewXzzzQI/ioIvCNBkCL36u//+
+6sT75xzzqnOva5du44cOTKaqk+fPh07dvzqq68atKDQA1iqmTPTz5dl/zg9
aFAdd8l+V1r19ve/17b/1Kk5O++wQ91TTZiQc5da3jNYu7yL3BVJ9IgyR8lr
k9//vl4r9O+fc68rrijWqHnyrl/Qvv3i2//73wI/ioIvCNBkCL36q36/3uDB
g6Mxor6LKq8696LuO//886NfjI9+xmgIoQewVDfdlPOz9Kqr1vZhmBnbbptz
r622qm3nJ57I2fmUU+pe/6mncu6y1171fTh5jjoqXiSKmiI54ID4KNlXW/jJ
D1ckr48ePXLuFf2hlEbeVQ9atky/8jP1Q/4X9lEUfEGAJkPo1d/8+fPP/MGX
X36ZSn9IQEU0yRVXXJF5PWefPn2++OKL+i8o9ACWKmq07J+l6/k2qCU/4PGl
l5a686WX5ux5yy11r3/ZZTl36dSpvg8nT/bFAZ9/vpGL1Omvf42PcscdqdVX
j3/bqlX+tchrFJ327Md7//3FGjXPtGn5f47ffrv4SwV/FGV0WgAaQug1yNNP
Px2dsV69en3743ecqqqqt956K/P2vY4dO959991Tpkypz2pCD6Bmr72W/3P+
iy/W647/+1/+53jUcqm7vfbK2bPOZ9aiBMj7FNDMp0E2VPZV2t97r5GL1Kl7
9/goUaLuvHPO8JMm1b3Cbrvl3CXrs8iKK+8vwAYbxF8q+KMoo9MC0BBCr0Eq
KytvvPHG6KRdcskl77zzTuWPV/bp27dvdOOFF16YeXav+lm/2gk9gJpF/zxm
/yC98cbp6xrU0+GH59w36r4aX2sRLZj9VE60vfBCHSsPHZq/8ty5DXpYab16
pa++17JlvM7226dvadB25ZX1Otadd8ZHOfXU1Gmn5cz/j3/UcfeFC1MrrBDv
v8oq8fXs6u/zz1NHHJEuo1/+Mv2BpVtsUa975V2Yfs894y8V/FEEOS0AxSf0
GmrhwoW33nprdc1dfPHFDzzwQJ8+fap/G6XftGnT7rvvvs6dO8+cObPOpYQe
QA3mzUu/Iy/7Z+/LLmvA3YcPz382MGqrJeV9Cke0DRtWx8p7752z/5/+1ICp
Mkp2Hb3IP/8Z32X//XO6L9pOOqmOu+ddeqCeFxPP8847+cNHZ75OeZ+6ecYZ
8ZcK/iiCnBaA4hN6jVBZWTlq1KjMZ29W69at24IfL7M7Z86cynr8/3tCD6AG
DzzQmDTIqKhIX/c8++6bblrDE4IPPZR/lJ49a1t2/PicCytE28iRDX5oqdKG
3tix8V222y41fXrOM4lRTdd+4fKTT8456KWXNubxRvL+OOp8L+THH6cvdZF9
l6jFMgr+KEKdFoAiE3qNtnDhwjFjxtx777033XTTfffdN2PGjIauIPQAapD3
Bqjf/a7BK1x0UX4ZPfNM/j7Zlyyv3tq3X+p1977/PvXrX+fsXM/P4V9SKUPv
00/ju1Rf8m/33XPWueSSpd73/fdzrrcepVCDcjvbiSfmHPRnP0vV/h0z7yr2
66yT/xLZgj+KIKcFoMiEXkBCDyDfhx/mP3HWt2+DF5k4Mb+MDj44f5+o1JYM
qGi3JZ/7q6jIT5VowlGjGvkAb745teWW8VJrrpmujIZuNb4YdUlRn2ZOZpQk
0QO59978h1zj82tRzmywQc5uRx1V8yEGD07ddVe8RX98S1ryydN99qn5fW3R
jVdckb9ztGyegj+Kgi8I0AQIvYCEHkC+bt3yf+SOuuawwxq85S3SqlXqs8/i
o0QFlP15GtnbeefFn+Sf+uGtfPvvn7/PMr5a79Zb46U6d16mpeq09trxsaZN
S7de3qUGo61Hj5xrFL7ySs69qrc336x5/dVWy9nt+utr2Cc627/7Xf6CO+4Y
/YiQs1v0B5T3zFq0bbFFeuY8BX8UBV8QoAkQegEJPYAc0c/bG25Yc38t+9a9
e3yg6OfzWvZca63UkUemP4xxzz3ThZj31ejGJdOjQbp2jVe75pplPGd1yH7F
6euvp2+JvofmPWcabcsvn9pjj/QHlua9n656O/fcpa5fn9BL/fAi0uis5i3b
smX6E0f/8pf0y1k337yGqdq0Weozp4V9FMVYECA0oVe7N9988/ZGmTNnTp2L
Cz2AHCNGFKvyfvLDtdgy18Lu1y/nS+edl34xYX0WOeCA9IeCLqPjj48XvO++
ZV2tdvvtFx8r87Gi2U8p1rkdcURtlw+oZ+hFnn025zNP6txat67jc1AL+CiK
tCBAUEKvdsOHD/9bo9Tns1mEHkCO6Ifn4oVetD3++OID5V067eGH0x+0uOuu
td23VatUly7L+lxetewXKP7rXwVYsBannhofK/uzK++4I/+TLZeWM999V9v6
9Q+91A+fArrkazhr3Nq3r9e7IAv1KIq3IEA4Qq928+bNm9YoLq8A0GDrr1/c
0Dv77MUH2mabnNsnTUrfuGBB6sIL09e/zrtXy5bpK+gV8N1Ym20WL/7uuwVb
tkbdu8fHyrscYfSoDzss/fLIGs/V73+fGj267vXz/shuv72O/auq0pfP2Gij
pf4Z/eIX6Zez1j+jCvIoirogQCBCLyChBxDAt9/mvPNuzTVzvjp7durRR9Mf
a3neeeniePDB9HXWCmulleKj137JtmV3113xsU45pYYd5sxJDRmS6t07/Xxl
FMK33JK+4nyNH55ZWDNnpq88fvfdqQsuSF/q4tpr069ifeedRq5W8EcR6rQA
FI7QC0joAQQwenTOczT77FPSo0chmTn0iisW/XBPPRXskQIQlNALSOgBBHDz
zTmhl/eCxmKbMCHnnWjFlv35olttVfTDAdBkCL2AhB5AAMcckxN6tX+0Y8GN
HBkferfdin64mTPjw62+etEPB0CTIfQCEnoAAbRrlxN6n39e0qP/4x/xoY87
ruiHq6rK+VyR7GvBA5BoQi8goQdQav/7X07lbbBBqQfo2TM++oUXluKIG28c
H/GDD0pxRACaAKEXkNADKLVnn80JvUMPLfUAp58eH/2WW0pxxF12iY9Yn4vT
AZAIQi8goQdQaldfnRN6115b6gEOOig++mOPleKIRx8dH/GBB0pxRACaAKEX
kNADKLUDD8wJveeeK/UA220XH33MmFIcsUuX+Ig9e5biiAA0AUIvIKEHUGqD
B6e6do23OXNKPcDaa8fZNXVqKY54223xETt1KsURAWgChF5AQg+geVmwIG6u
Vq1SFRWlOOjQofFB99+/FEcEoAkQegEJPYDmZdKkuLk23LBEB3399figv/pV
iQ4KQGhCLyChB9C8vPhi3Fy//32JDuqa6QDNktALSOgBNC8PPhg311FHleig
VVWp5ZePj/vNNyU6LgBBCb2AhB5A85J9tfQuXUp33Hbt4uNOmFC64wIQjtAL
SOgBNC8dO8bBddttpTvuHnvEx3322dIdF4BwhF5AQg+gedl//zi4hg4t3XFP
PDE+7j33lO64AIQj9AISegDNy1ZbxcH1n/+U7rjdusXHvfzy0h0XgHCEXkBC
D6B5WXnlOLi+/LJ0x73rrvi4J59cuuMCEI7QC0joATQj//tfXFsrrVTSQ48Y
ER/6j38s6aEBCEToBST0AJqR//wnrq2ttirpod99Nz50u3YlPTQAgQi9gIQe
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
BZydOmk9gDIl9AISegBl7D//SW2ySU4WXX556JmW2XffpbbfPudB7b9/6n//
Cz0WAA0m9AISegBlacqU1BlnpJZbLieIDjssVVkZerJCiB7d+uvnPLRWrVLH
HZeaMyf0ZAA0gNALSOgBlI0ZM1IvvJDq1Su1xx45b2Sr3g48sIzfmrek99/P
b71oa9Eidcghqf79U2++mfr229AjAlAHoRfQMp38SZPSb52w2Wy2ZrIde2z6
3XDV2+9/35gVOnasYYv+HY62v/41tffeqV/8ItW+ffrVmP/3/6YvJPfnP6eb
bocd0ressEJ+9WRvZ52VWrSocN8cmoYpU9KPvZZHvcYa6U+e+d3vUnvtlTro
oNSRR6af9TvxxNQpp6ROPTV12mnps1p9epc87Xl/NFEmZ/5w//Snwv/lOfro
eP3oDzf4X2abzWZr0Na1a+P+IRd6AS3TyR89urbvvzabzWYrwdauXWr48MJ9
W2hiFi5M/eY34U+yzWazNfNtnXUa96+40AtI6NlsNlu5bjvskLr33tT33xfu
e0JT9eab6QfbunX4c26z2WzNcxN6ZUjo2Ww2W9lsq6yS2m679EsT77wz9dFH
hftWUCYqKlKvvJK6+urUwQenX+Cq+2w2m61km9ArQ8t08qdPT/+wYbPZbM1k
u+669Nv0qrdOnRq5yF135W/9+qW3u+9OXXFF6uST028ui/5l7tkzNWRI6qmn
Us8/nxo3LvXhhz5wMl9VVWrmzNSECalXX02NHJkaNiz16KOpgQNT99+fGjAg
/YEt99yTPqvVp3fJ057359KtW/yHe8EFhf/Lc+218fqnnx7+L7PNZrM1aIv+
aW0UoReQT90EAACKQegFJPQAAIBiEHoBCT0AAKAYhF5AQg8AACgGoReQ0AMA
AIpB6AUk9AAAgGIQegEJPQAAoBiEXkBCDwAAKAahF9DfAAAAiqOoLSP0AAAA
EkboAQAAJIzQAwAASBihBwAAkDBCDwAAIGGEHgAAQMIIPQAAgIQRegAAAAkj
9AAAABJG6AEAACSM0AMAAEgYoQcAAJAwQg8AACBhhB4AAEDCCD0AAICEEXoA
AAAJI/QAAAASRugBAAAkjNADAABIGKEHAACQMEIPAJZFv379br/99k8//fSu
u+7q2rVrjx49nn766crKytBzAdCsCT0AaLToO+PffnD22WdH/9u5c+fq3w4c
ODD0aAA0a0IPABot+jZaXXbXXXfd7Nmz582b9/DDD0e/7dix49dffx16OgCa
L6EHAI02ZMiQKOvOPffc+fPnV98SfaPs1KlTdON7770XdjYAmjOhBwCN1rt3
76jpnnzyyewbr7rqqujGsWPHhpoKAIQeADROZWXlWWedFTXdp59+mn17165d
oxunTJkSajAAEHoA0DjTpk2rfoPeokWLMjdOnz69+j1633//fcDZAGjmhB4A
NE70/a469KJvjpkbBw0aFN1y7bXXBhwMAIQeADTOwIEDq0Nv+PDh1be89dZb
HTt2jG758MMPw84GQDMn9ACgcXr27Fn9Ks3of2+44Yabbrqp+vM2H3744dCj
AdDcCT0AaITvv/+++vLoH374Ya9evTKXTX/++edDjwYAQg8AGmPy5MnVZVdV
VRX9dtasWVOnTq2srAw9FwCkCT0AaIRRo0ZFoXfTTTeFHgQAaiD0AKARBgwY
EIXekCFDQg8CADUQegDQCNddd13nzp3feOON0IMAQA2EHgAAQMIIPQAAgIQR
egAAAAkj9AAAABJG6AEAACSM0AMAAEgYoQcAAJAwQg8AACBhhB4AAEDCCD0A
AICEEXoAAAAJI/QAAAASRugBAAAkjNADAABIGKEHAACQMEIPAAAgYYQeAABA
wgg9AACAhBF6AAAACSP0AAAAEkboAQAAJIzQAwAASBihBwAAkDBCDwAAIGGE
HgAAQMIIPQAAgIQRegAAAAkj9AAAABJG6AEAACSM0AMAAEgYoQcAAJAwQg8A
ACBhhB4AAEDCCD0AAICEEXoAAAAJI/QAAAASRugBAAAkjNADAABIGKEHAACQ
MEIPAAAgYYQeAABAwgg9AACAhBF6AAAACSP0AAAAEkboAQAAJIzQAwAASBih
BwAAkDBCDwAAIGGEHgAAQMIIPQAAgIQRegAAAAlTpND7DwAAAOEUI/QAAAAI
q4ChB/D/27tjFYdhKIqC//+vwUYmNnJj7YUHYRfMNilih5lKqFJ70BMCAOAW
hB4AAMCXEXoAAABfpkJvWZbW2rZtnz4OAAAAb0nZpe9Seb33eZ7Xdf30iQAA
AHhLyi59l8obY0zTlOLTegAAAPeVpkvZpe+O40jo7fue6PNSDwAA4L7SdCm7
9N3rj/W64Mu+x3oAAAD3kqCrysti/FX7NcMp9wAAAK4v7VYTm3VzN87UDGe0
1p4AAABcW9qtIu73xOap3nt68AEAAMC11U8K/yceAAAAAAAAcDU/vX8WLw==

     "], {{0, 516.}, {593.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{593.5, 516.},
   PlotRange->{{0, 593.5}, {0, 516.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`p0 = 0, $CellContext`\[Sigma]0 = 
     1, $CellContext`t = 0}},
 CellID->943678134,ExpressionUUID->"7859d89d-7154-4782-adda-c0a42a364ed2"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Ql4U2XesHFayr7vIgiyyCi7gAgC6qjIIiC44MIqiuygbL7IIOALI4Iy
oCyCLAMqiigCI6IoIM5QBsqwtxQKlNKFLm/3KRRp8ftPn+H5jmmbpk3Sk5zc
v+uauZKTc57zJEKSm5OcNBox6alX/UuUKDGlrPzfUy+98cfJk1+a8XRVufLs
xCljRk0c+UqviVNHjho5udOIkrKwbECJEp/I//5z+bdcrl+/np6e/n8AAAAA
AM8m7SYFlzvrbBIvOUdqauq/AQAAAACeTdpNRVx+uZeRkSG3pqWlZeS4BgAA
AADwbCrfpOOk5uRCnpUnPXj16lWzZwoAAAAAKATpOKk5m9ZTn9ik8gAAAADA
S+nW05/hTEpKUp/YNHtqAAAAAIAiUp/hlL6TysvMzFQH+MyeFAAAAADAKepL
eVJ5Unypqal8aBMAAAAAvJ2UnfSdVN7//d///fvf/zZ7OgAAAAAAF5C+Uz+x
R+gBAAAAgDUQegAAAABgMYQeAAAAAFgMoQcAAAAAFkPoAQAAAIDFEHoAAAAA
YDGEHgAAAABYDKEHAAAAABZD6AEAAACAxRB6AAAAAGCuizkO59j9e2qhWsHx
AQk9AAAAADAXoQcAAAAAlhGc41vHqJUdGZbQAwAAAACzEHoAAAAAYBnq05i5
ay7l93Kv4MjHOAk9AAAAACh+hB4AAAAAWIw6y0oRQk9taH9wQg8AAAAAih+h
BwAAAAAWo349Ic+4y49aWW1of3BCDwAAAACKH6EHAAAAABZD6AEAAACAxRB6
AAAAAGAxhB4AAAAAWAxn3QQAAAAAiyH0AAAAAMBiLuYoQuipDe0PTugBAAAA
QPEj9AAAAADAkoJz5K65PKmVHRmW0AMAAAAAsxB6AAAAAGBJ6tOY6iwru39P
LXTk45pGhB4AAAAAmIvQAwAAAADYR+gBAAAAgMUQegAAAABgMYQeAAAAAFgM
oQcAAAAAFkPoAQAAAIDFEHoAAAAAYDGEHgAAAABYDKEHAAAAABZD6AHwTVft
Mnt2AAAATiH0APgUY81l5IPiAwAA3o7QA+AjbPpOnvTScqQaqCVyk03xmT13
AACAwiH0APgCnXiq71JSUhISEuLi4q5cuRIdHR2ZQy7IVVkoN8kKuvhoPQAA
4HUIPQCWZ0y8pKQkSbmoqKiYmBh56pMlmZmZ2TnkglyVhXKTrCCrycrG3DP7
fgAAADiK0ANgbbryUlJSpN0k4hISEmThb3bJCrKarCybyIa0HgAA8C6EHgAL
U5WXnp6enJws1RYbGytX7Seekawsm8iGsrkMQusBAABvQegBsCpdeYmJidHR
0QkJCY4nnpFsKJvLILQeAADwFoQeAEvSlZeUlBQVFSXPckWrPEU2l0FkKFoP
AAB4BUIPgPWo82Sq7+U5cywv93E99X09zsMJAAA8HKEHwHrU4by0tLTY2Ngr
V644X3mKDCUDyrAc1IOnOXv27K5du4KCgng1BwAohJ5VyX/Q3bt3Hz161OyJ
AMVNHW5TX82LioqSC64KPRlKBlRf1uOgHjxEamrqgAEDStzSrFmzI0eOmD0p
AID5CD2runz5srzi9+jRw+yJAMXNeDgvLi7OVZWnyIAc1IOTvnXMzhwFjvbG
G2/Is33Lli3nz5/fr18/f3//Fi1aSP0Vwx0BAHgyQs+qCD34LPXtvOTk5MjI
SLng2tCTAWVYGVx9U8/s+wqv5MLQCwwMlLJr2LBhSkqKWjJ27Fh58pf6c/vd
AAB4NkIvP+PHj7/nnnvkNbR79+4VKlRo1KjR6tWr09PTZ86c2aBBg/Lly3fp
0mXv3r3GTdasWdO3b9+qVas2bdr05ZdfPnz4sL7p1KlTMtr8+fPnzJkjt1as
WLFfv37h4eEHDx588MEHZTR5mR43bpzNf4X169f36dOnUqVKbdq0mTJlSnR0
dO4BFyxY0KpVqzJlyrRo0eKvf/2runXu3LmyF3mtl5Flteeee04tf/HFF9u2
bWvcxZ///GdZQUYr8r22/wCePn164MCB1atXv/3220eMGHHs2DEHH3875N11
bGzspUuXLt5yAbjlfI5z586dOHEiJCTEtZWnyLAyuOxC7cvsewwPop+U5AlK
nqby+6eA3E2Xekvum+w/H86aNUue6teuXauXREVFyXN18+bNnX+yBQB4NUIv
PxJi8upZv359yaiePXuWLl1arj7++ONly5bt0aNHp06d5GrlypUjIyPV+h98
8IEsKVeu3GOPPda6dWu5XKtWrTNnzqhbJfpkSb169STxnnjiibvuukuuduzY
sVq1anL5ySefrFGjhiyZPn26nsCqVatkiVSe7E6t361bt7S0NOOAd9xxh8zn
kUceUSuI3bt3q2179eolV2vXrj1gwAD9T7udO3eWO2K8mxMmTJDVDh06VLR7
XeAD2KRJE7nLsq1ckKtSi/ImxIn/LP8hb58u/p7Zb+7gQaS8wsLCQkNDjx49
Gh4e7o7Qk2FlcNmF7IjQg5HNU1NcXFyeT2IuDL3nn39enlr1a43Srl27MmXK
ZGRkOPlkCwDwaoReflSnDB48WF397LPP5Kqfn9+PP/6olrz44ouy5Ouvv5bL
wcHB/v7+NWvWlDd+6tYVK1bIrV26dFFXVZdVqFBBfUc+JSWlbdu2sqR79+7q
kT916pQMfu+996r15T1kqVKlJLjkLaVaMmzYMFn/nXfeMQ4oL+X6+Npbb70l
S4YMGaKu5vnRTQdDz8F77cgDKGWnD0SOHz/eOEOtsCeLMx7LI/RgQx3Ok/e9
8nckPj7eHaEnw8rgsgt1UM/sewwPYvPUJE9WeT6JGTvuuxxFDr327dvLU7T+
N0Clf//+8mQrryOOPKMCAKyK0MuP6hRdQJJm6tvueoX169fLkvfff18ur127
Vi4vXrzYOEKHDh2kqtTrr+qyvn376lunTp0qS7744gu9pEmTJtWqVTMOvnz5
cn1rTEyMLHnyySfVVTXgI488olc4efKkOuqnrjoTeg7ea/vUUJ988oleIg9F
5cqV77rrLr2kaCeLI/Rghwq9kJCQgwcPZmRkuCP0ZFgZXHZB6MFG8Yde3bp1
q1evbrNw5MiR8oy6Z8+eAp9OAQAWRujlR3WK8YM3cvXhhx/WV7ds2SJL3nvv
vWu3jlX99NNPxhFGjBghC+UN4bVbXSZVpW+dOXOmzSZt2rSpWrWqujxx4kTV
Pm0N1MdB1QpqwLFjxxr3KBHXqVMnddmZ0HPwXtunhjp9+rTNBPz8/BITE9XV
op0sjo9uwg4deoGBgVlZWe4IPRlWBif0kFuhPrqZWhBHQq9jx47yLGrztKme
fuXPZwFP0wAASyP08lOo5Hn55Zfl8j/+8Q/jCGPGjJGF6qOVhQ09FYmtWrV6
1qBJkybDhw9XK+QeUJQpU8bTQk9/llV56KGHZGFMTMw1J04Wx8lYYIcKveDg
4AMHDrgv9GRw2QWhBxuFOhmLS0Jv0KBB8rQpfxqNC+XVpFy5cpwVFgB8HKGX
n0Ilz/Lly+Xy6tWrjSNI1Pj5+clje63woffhhx/KrRs2bMhvekULva5du8pC
46eJ1Bf53Rd627dvNy6sU6dO/fr11WVOFgd3UL+tkJSUJO+65bI7Qk+GlcFl
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
D6wx9NRWNhGnHtjCnnXTwdD78MMPjZ8pVbp37166dGn9UVVt1qxZNmNGRUVJ
ZTdv3tz+XqxE/bZCUlKSvEWUy+4IPRlWBpdd8AsLgIcg9AAAxcDlP6/QsmXL
Ll26SCk0aNBArsrb+ypVqrz++uutW7eW5WodFRcNGzbUH2s5fvy4TeiJ+++/
/4477ggJCTF+y+zarZrYsGGDg1NSoafOf6LVqVOnfv36jkxm5cqVcnXFihXG
zWUrFYkq9KpVq5aQkHD33XeXyPkyms2O8vuMqOLgzys48sBey/XRzZo1a6r1
NZWKbgq90aNH23xKVh6lChUqPPHEE7lXfv7552XlM2fOGBe2a9euTJkyOuot
T4VeSkpKeHh4YmKiO0JPhpXBZReEHuAhXHjWTY3QAwDYcHnoSXqULl26Xr16
L7/8sloixSQZ5efnp09Icvjw4RI558nUW02YMCF36Klznqjja/pMKeLAgQOy
5L777ktKSlJLzp8/379//zfffDPPKanQ69ixoz49iBq5T58+jkwmKChIrjZq
1Cg2NlYt2blzpyzp1avXtd+fjOXkyZOVKlUqVarUzz//rEdTp7U0frvt3Xff
lSnpe6Q+r7hu3TrnH9hruULvsccek6uSaeqqvNtXnx3Voac+3tm4cWPjvooc
eosXL5bV/vznP+slMrdy5crp89gYtW/fXiZvc65U+e8oI+S5viXp0IuMjIyO
jnZH6MmwMjihB3gOQg8AUAxcHnoqgozfGvvoo4/UEv0CJO8269Spo3Jj3rx5
kkJlypTJHXryBlWiSX3BzWYv6shRixYtpk+fPmXKlNq1a9s5xqdCr3LlyjLO
tGnTnnnmGRlWikx9B82RyUyePFmWNG3adOrUqcOGDatataoUyg8//HAt1+/o
yb2Wq3Xr1tWpJfVXvXp1GfP555+fO3du7969ZYXmzZvrjzKqOLr99tslMNVP
JBT5gb2WK/SkUsuXLy+FKPdOJt+qVSv1s3069IRMT5bIxPRRyyKH3oULF0rk
/FSEurp582Z5nI0H+IzkUZJd2yxU71XUdzN9gfzxy8jIkHd3UtwXL150R+jJ
sDK47EJ2ROgBnoDQAwAUA5eHXkpKSrly5QICAhISEtQS9ea/Ro0axs/jHT58
WH3QUR1O+vrrr0sYTnSpqUZbuHChzXIZatKkSY0aNVIjNGjQwM4RMTXIrl27
JAzlgjTa/fffr39/3JHJyNtjKUr1A3wlcn6ST38QNCIiQpa88MILemV1Jknj
IcJ9+/b98Y9/LFu2rCz39/d/9tln9Q9DiMTERKkzabHcny8twgMrM5GFMiu9
5JtvvunQoYPca1nepk0beRzkglSnXmHTpk3qNxfuu+8+tUS9YTBW5+rVq0sY
fsfQjhkzZpQsWfKBBx7o2rWrPAh5/jKg0rFjRxnT5hyb6j/WuXPnCtyRZcif
rrS0NPnPKvdaHg3XVp4MKMPK4LILKg/wEO4IvVGjRsmTZ2BgoFtnDgDwIi4P
vUKJiorSP6lWNFJMkZGR9tdR7aC+gnfp0iX9a3pFmIxsnt/psgskpRYaGprf
r7rL67suOHeIiYkx1l9uycnJBf6ugYPknp46dUqfSzM/gwYNsslJISkqPetT
SSJ3Nj09PSkpSf4wy38j14aeDCjDyuCyC596VAFPlrvm7DB7sgAAb2Vu6BUP
Y+jBc8yePVv+u6xcuVIvkY4uW7Zsq1atzJuUCfSnN2NjY0NDQyXKXFV5MpQM
KMPyuU3AoxB6AIBiQOjBLEFBQQEBAfXr19fH/tQJSGfNmmXuxIqfPqh38eLF
8+fPuyr0ZCgZkMN5AAAAPsgXQk/e7h47dow3uh5o5syZ6qQ68+bNkx738/Nr
3bp1fp9utTDjQb2QkJDw8HDnK08GkaE4nAcAAOCbfCH04LGk6QYMGFDilmbN
mh05csTsSZlDHdRLTk6OiYmRQHPyy3qyuQwiQ8mAHM4DAADwQYQeTBcaGrpr
165Dhw7pn5zwTfoDnJGRkcHBwRcuXCha5cmGsrkMwoc2AQAAfBahB3gO+WuY
lpaWmJgomXby5MmQkBC57HjiycqyiWwom8tlGYq/1wAAAL6J0AM8imq9pKSk
mJiYM2fOHD9+/OzZswWeilNWkNVkZdlENpSrVB4AAIAvI/QATyN/GdVnOOPi
4sLDw4ODg4OCgk6cOBEWFhYbGysFl5VDLshVWSg3yQqymqwsm6hPbPI3GgAA
wJcReoAHysjIkL+SqampiYmJUnMRERFnz549deqUBF1gYOCBHHJBrspCuUlW
kNVkZdlENpTNzb4HAAAAMBOhB3imq1ev/juHtFtycnJCQoKkXExMTGRk5OUc
ckGuykK5SVZQiSc4+woAAAAIPcCT6dxLS0uTlEvJkZxDXZaF6ut4JB4AAAA0
Qg/wCurDnHnig5oAAACwQegBAAAAgMUQegAAAABgMYQeAAAAAFgMoQcAAAAA
FkPoAQAAAIDFEHoAAAAAYDGEHgAAAABYDKEHAAAAABZD6AEAAACAxRB6AAAA
AGAxhB4AAAAAWAyhBwAAAAAWQ+gBAAAAgMUQegAAAABgMYQeAAAAAFgMoQcA
AAAAFkPowfKu2mX27AAAAADXI/RgVcaay8gHxQcAAABLIvRgPTZ9J3+203Kk
GqglcpNN8Zk9dwAAAMAFCD1YjE481XcpKSkJCQlxcXFXrlyJjo6OzCEX5Kos
lJtkBV18tB4AAACsgdCDlRgTLykpSVIuKioqJiZG/oTLkszMzOwcckGuykK5
SVaQ1WRlY+6ZfT8AAAAApxB6sAxdeSkpKdJuEnEJCQmy8De7ZAVZTVaWTWRD
Wg8AAAAWQOjBGlTlpaenJycnS7XFxsbKVfuJZyQryyayoWwug9B6AAAA8GqE
HixAV15iYmJ0dHRCQoLjiWckG8rmMgitBwAAAK9G6MHb6cpLSkqKioqSP8xF
qzxFNpdBZChaDwAAAN6L0INXU+fJVN/Lc+ZYXu7jeur7epyHEwAAAN6I0IMz
IiIiBg8evHHjRrMmoA7npaWlxcbGXrlyxfnKU2QoGVCG5aAeAK9w9uzZXbt2
BQUF8WoOAFAIPThO/pDs3r376NGjesnatWtLlCjRvHlzU+ajDrepr+ZFRUXJ
BVeFngwlA6ov63FQD4AnS01NHTBgQIlbmjVrduTIEbMnBQAwH6EHx12+fFne
RfTo0UMviY+PnzVr1g8//GDKfIyH8+Li4lxVeYoMyEE9AO7wrWN25ihwtDfe
eEOemVu2bDl//vx+/fr5+/u3aNFC6q8Y7ggAwJMRenBc7tAzl/p2XnJycmRk
pFxwbejJgDKsDK6+qWf2fQVgHS4MvcDAQCm7hg0bpqSkqCVjx46VJ2qpP7ff
DQCAZyP04KC5c+c2bdpU3j+UL1/+nnvuee6552ThuXPn5PJbb72l1jl16pRc
nT9//pw5c2TlihUr9uvXLzw8/ODBgw8++KBsKO9Gxo0bZ/OHbf369X369KlU
qVKbNm2mTJkSHR1tfyaSXbGxsTLshQsXwsLCTp48GRIS4trKU2TYEydOyH08
n+MCANh18ZZLly7J01R+/0aUu+lSb8l9k/3nw1mzZsnT8tq1a/WSqKgoebI1
6xP1AADPQejBQatWrerVq5e8o6hdu/aAAQPUPxdL2cmSV155Ra1z+PBhuVqv
Xj1JvCeeeOKuu+6Sqx07dqxWrZpcfvLJJ2vUqCFLpk+fbhxWlkjl9ejRQ63f
rVu3tLQ0OzORt0/yPkreU0l8nT179tixYxJ97gg9Gfbo0aOhoaGSk4QegAJd
/L24uLg8n8RcGHrPP/+8PG2eOXPGuLBdu3ZlypTJyMgo+JkdAGBdhB4cl/uj
m3mGXoUKFdSpAFJSUtq2bStLunfvrv6Ayfp+fn733nuvWl8aqlSpUvXr15ek
UkuGDRsm67/zzjt2pnHp0iUVetJfMkJQUFB8fLw7Qk+GlXsk76DUQT2z30IC
8HQ2oSdPVnk+iRk77rscRQ699u3by5OqzT+O9e/fX55I5enR/rYAAGsj9OA4
B0Ovb9++eoWpU6fKki+++EIvadKkSbVq1dTl9evXy63Lly/Xt8bExMiSJ598
0s40jKEnFfbPf/4zIyPDHaEnwx48eDAkJITQA+CI4g+9unXrVq9e3WbhyJEj
5Yl0z5499rcFAFgboQfHORh6EyZM0CvMnDlTlvz00096SZs2bapWraouT5w4
UZ0PvK2BXK1Vq5adaeiPbqrQCwwMzMrKckfoybAyOKEHwEGF+uhmakEcCb2O
HTvKc6bNOTb79esnC+WJy/62AABrI/TgOJeH3ogRI+TWVq1aPWvQpEmT4cOH
25mGPhmLhJ5UmFtD78CBA8HBwYQeAEcU6mQsLgm9QYMGybOoPE0ZF8rTbLly
5ThdMAD4OEIPjnN56H344Ydy64YNG4owGfXbCklJSfLmSi67I/RkWBlcdsEv
LABwIReG3uzZs+VZdOXKlXqJNGbZsmVbtWrl3vsAAPB4hB4cp75A17hxY73E
ydA7cOCA3HrfffdJTKkl58+f79+//5tvvlngZFTopaSkhIeHJyYmuiP0ZFgZ
XHZB6AFwIReedTMoKCggIKB+/fr6d/ReffVVeV6dNWuW++8HAMCjEXoolOrV
q8tbiN69e69YseKa06EnRo8eLSu0aNFi+vTpU6ZMqV27toPH+HToRUZGRkdH
uyP0ZFgZnNAD4FouDL1rt55m5Vl03rx5/fr18/Pza926tf0fqQEA+AJCD4Wy
adOmunXrqsNwcjU4OFgujxw5Ut165MgRuTpx4kS9vnoHsnfvXr2kbdu2xnPE
ZWRkTJo0qVGjRuqsLA0aNFi3bp0jM5Hykm3lfVFMTMzFixfdEXoyrAwuu5Ad
EXoAXMW1oSdNN2DAgBK3NGvWTP3ADQDAxxF6KILk5GSbk7w5Lzw8PDIyslCb
SHzJO5yEhIRz587JfFxbeTKgDCuDyy6oPAAu5NrQU0JDQ3ft2nXo0KH09HS3
Th4A4C0IPXgv6S95S5OUlCSRGBER4drQkwFlWBlcdkHoAXCh3DVnh9mTBQB4
K0IP3kt/ejM2NjY0NFSizFWVJ0PJgDIsn9sE4HKEHgCgGBB68Gr6oN7FixfP
nz/vqtCToWRADucBAADASxF68GrGg3ohISHh4eHOV54MIkNxOA8AAADei9CD
t1MH9ZKTk2NiYiTQnPyynmwug8hQMiCH8wAAAOClCD1YgP4AZ2RkZHBw8IUL
F4pWebKhbC6D8KFNAAAAeDVCD9Ygf4DT0tISExMl006ePBkSEiKXHU88WVk2
kQ1lc7ksQ/E3AgAAAN6L0INlqNZLSkqKiYk5c+bM8ePHz549W+CpOGUFWU1W
lk1kQ7lK5QEAAMDbEXqwEvljrD7DGRcXFx4eHhwcHBQUdOLEibCwsNjYWCm4
rBxyQa7KQrlJVpDVZGXZRH1ik78LAAAA8HaEHiwmIyND/jCnpqYmJiZKzUVE
RJw9e/bUqVMSdIGBgQdyyAW5KgvlJllBVpOVZRPZUDY3+x4AAAAAziL0YD1X
r179dw5pt+Tk5ISEBEm5mJiYyMjIyznkglyVhXKTrKAST3D2FQAAAFgDoQer
0rmXlpYmKZeSIzmHuiwL1dfxSDwAAABYDKEHy1Mf5swTH9QEAACAJRF6AAAA
AGAxhB4AAAAAWAyhBwAAAAAWQ+gBAAAAgMUQegAAAABgMYQeAAAAAFgMoQcA
AAAAFkPoAQAAAIDFEHoAAAAAYDGEHgAAAABYDKEHAAAAABZD6AEAAACAxRB6
AAAAAGAxhB4AAAAAWIzjoXcAAAAAAOABCD0AAAAAsBiXh95vAAAAAACTHDly
hNADAAAAACsh9AAAAADAYgg9AAAAALAYQg8AAAAALIbQAwAAAACLIfQAAAAA
wGIIPQAAAACwGEIPAAAAACyG0AMAAAAAiyH0AAAAAMBiCD0AAAAAsBhCDwAA
AAAshtADAAAAAIsh9AAAAADAYgg9AAAAALAYQg8AAAAALIbQAwAAAACLIfQA
AAAAwGIIPQAAAACwGEIPAAAAACyG0AMAAAAAiyH0AAAAAMBiCD0AAAAAsBhC
DwAAAAAshtADAAAAAIsh9AAAAADAYgg9AAAAALAYQg8AAAAALIbQAwAAAACL
IfQAAAAAwGIIPQAAAACwGEIPAAAAACyG0AMAAAAAiyH0AAAAAMBiCD0AAAAA
sBhCDwAAAAAshtADAAAAAIsh9AAAAADAYgg9AAAAALAYQg8AAAAALIbQAwAA
AACLIfQAAAAAwGIIPQAAAACwGEIPAAAAACyG0AMAAAAAiyH0AAAAAMBiCD0A
AAAAsBhCDwAAAAAshtADAAAAAIsh9AAAAADAYgg9AAAAALAYQg8AAAAALIbQ
AwAAAACLIfTseBUAAAAA3MOtLUPo2eHuBx8AAACAbyL0TEToAQAAAHAHQs9E
hB4AAAAAdyD0TEToAQAAAHAHQs9EhB4AAAAAdyD0TEToAQAAAHAHQs9EhB4A
AAAAdyD0TEToAQAAAHAHQs9EhB4AAAAAdyD0TEToAQAAAHAHQs9EhB4AAAAA
dyD0TEToAQAAAHAHQs9EhB4AAAAAdyD0TEToAQAcceHChZdffvm2224rXbp0
ixYtFixYIC+IZk8KAODRCD0TEXoAgAJ99dVX5cuXL/F7knthYWFmTw0A4LkI
PRMRegAA+7Zt21ayZMkSeZHlhw8fNnuCAAAPReiZiNADANhx/vz5SpUq5Vl5
SpUqVX799VezpwkA8ESEnokIPQBAfm7evNm1a1fj8buPPvooLi6uQ4cOxtZ7
/PHHzZ4pAMATEXomIvQAAPnZtGmTMeiWL1+ulmdlZdWoUUMvL1euXEJCgrlT
BQB4IELPRIQeACBPN27caNKkia653r17G289deqUn5+fvnXy5MlmzRMA4LEI
PRMRegCAPK1fv153XOnSpc+fP2+zwvTp0/UK5cuXj4+PN2WeAACPReiZiNAD
AOSpRYsWuuNGjx6de4XMzMz69evrdWbPnl3scwQAeDRCz0SEHgAgt7179+qC
CwgIuHTpUp6rLVmyRK9Wp04dTr8JADAi9ExE6AEAcnv22Wd1wQ0cODC/1dLT
06tUqaLX3Lx5c3FOEgDg4Qg9ExF6AAAb8lJYunRpnW/79++3s/L48eP5nQUA
QJ4IPRMRegAAG8uXL9ft9oc//MH+yidPntQr+/v7R0dHF88kAQCej9AzEaEH
ALDRuXNn3W5//vOfC1y/ffv2ev3FixcXwwwBAF6B0DMRoQcAMIqIiNA/kCcX
8jsNi5HEnQ69+++/vxgmCQDwCoSeiQg9AIDR+++/r6utS5cujmwSHR1tbMOo
qCh3TxIA4BUIPRMRegAAo65du+rQW7JkiYNbGT/t+eGHH7p1hgAAb0HomYjQ
AwBocXFx/v7+OtkiIiIc3HDRokV6q0ceecStkwQAeAtCz0SEHgBAW7dune61
du3aOb7h+fPnjT+wnpSU5L5JAgC8BaFnIkIPAKA9/fTTutfmzJlTqG1btmyp
t/3888/dNEMAgBch9ExE6AEAlKysrCpVquhYk1fPQm3+P//zP3rboUOHummS
AAAvQuiZiNADACjy0qZLrVatWjdv3izU5r/88ove/Lbbbivs5gAA6yH0TETo
AQCU2bNn61J78cUXC7v5jRs3KleurEc4duyYOyYJAPAihJ6JCD0AgNKpUyed
aRs2bCjCCP3799cjLFq0yOUzBAB4F0LPRIQeAECkpKSULFlSZ9qVK1eKMMiy
Zcv0CL169XL5JAEA3oXQMxGhBwAQ27dv143WqlWrog0SEhKiB6lYseKNGzdc
O0kAgHch9ExE6AEAxKRJk3SjyeUij1O3bl09jmVeKwEARUPomYjQAwCI1q1b
60Dbvn17kcd58cUX9Tj/+7//68IZAgC8DqFnIkIPAJCYmOjn56fqzN/fPzk5
uchDrVmzRofeY4895sJJAgC8DqFnIkIPAGD8gt69997rzFBhYWF6qEqVKmVl
ZblqkgAAr0PomYjQAwBMmzbNJV/QU2rXrs2v6QEAfiP0TEXoAQA6d+6s02zL
li1Ojmb8Nb1ly5a5ZIYAAG9E6JmI0AMAHyeva6VLl9ZpFhMT4+SAixYt0qO9
+OKLLpkkAMAbEXomIvQAwMft379fd1njxo2dHzAwMFAP2LBhQ+cHBAB4KULP
RIQeAPi4+fPn6y4bOnSo8wNev369TJkyesyoqCjnxwQAeCNCz0SEHgD4uCee
eEJH2erVq10yZpcuXfSYX375pUvGBAB4HULPRIQeAPi4GjVq6Cg7deqUS8ac
Pn26C0/jCQDwUoSeiQg9APBlZ8+e1UVWpUqV7Oxslwy7bds2PWyHDh1cMiYA
wOsQeiYi9ADAl23YsEEXWffu3V01bHx8vB42ICAgIyPDVSMDALwIoWciQg8A
fNnYsWN1kc2aNcuFIzdr1kyPvG/fPheODADwFoSeiQg9APBl7du31zm2c+dO
F448fPhwPfI777zjwpEBAN6C0DMRoQcAPiszM7NUqVI6xxISElw4+EcffaRH
7t+/vwtHBgB4C0LPRIQeAPisf/7zn7rFGjVq5NrBjx49qgevV6+eawcHAHgF
Qs9EhB4A+KwPP/xQt9jAgQNdO/iNGzfKlSunx4+Ojnbt+AAAz0fomYjQAwCf
NXToUB1iixYtcvn4nTt31uNv27bN5eMDADwcoWciQg8AfNbdd9+tQ2z//v0u
H3/ixIl6/JkzZ7p8fACAhyP0TEToAYBvSk1N9fPzUxXm7++fnp7u8l188skn
OvR69Ojh8vEBAB6O0DMRoQcAvmnfvn26wlq0aOGOXZw5c0bvombNmu7YBQDA
kxF6JiL0AMA3vffee7rChg4d6o5dZGdnV6xYUe8lIiLCHXsBAHgsQs9EhB4A
+Kbnn39eJ9gHH3zgpr1069ZN72Xr1q1u2gsAwDMReiYi9ADANzVr1kwnmPte
1F577TXOxwIAPovQMxGhBwA+yHgmlpIlS2ZkZLhpR8bzsfTs2dNNewEAeCZC
z0SEHgD4oP3797v7TCxKSEiI3lGtWrXctyMAgAci9ExE6AGAD/rLX/6i+2vI
kCHu21F2dnaFChX0viIjI923LwCApyH0TEToAYAPGjp0qI6vxYsXu3VfXbp0
0fvasWOHW/cFAPAohJ6JCD0A8EGtWrXS8bVv3z637mvcuHF6X2+//bZb9wUA
8CiEnokIPQDwNfJCFhAQoOMrJSXFrbv7+OOP9b6eeuopt+4LAOBRCD0TEXoA
4GuCgoJ0eTVu3NhiuwMAeA5Cz0SEHgD4mtWrV+vyevrpp929O+MBRD8/v9TU
VHfvEQDgIQg9ExF6AOBrxowZo0Nv3rx5xbDHli1b6j3u37+/GPYIAPAEhJ6J
CD0A8DWdOnXS2bVz585i2OPgwYP1HpcuXVoMewQAeAJCz0SEHgD4FJsftouO
ji6Gnb733nt6jy+99FIx7BEA4AkIPRMRegDgU0JDQ3Vz1apVq3h2umfPHr3T
tm3bFs9OAQCmI/RMROgBgE/ZvHmzbq7u3bsXz07ltVXvtHTp0r/++mvx7BcA
YC5Cz0SEHgD4lBkzZujmmjp1arHt94477tD7PX78eLHtFwBgIkLPRIQeAPiU
3r176+D69NNPi22/ffv21fv961//Wmz7BQCYiNAzEaEHAD7l9ttv18F16tSp
YtvvW2+9pfc7adKkYtsvAMBEhJ6JCD0A8B3G78qVKVPmxo0bxbbrrVu36l0/
/PDDxbZfAICJCD0TEXoA4Dv27t2ra+vee+8tzl1fuHBB77patWrFuWsAgFkI
PRMRegDgO5YsWaJra9iwYcW565s3b1aqVEnv/fLly8W5dwCAKQg9ExF6AOA7
RowYoVPr/fffL+a9d+nSRe/9b3/7WzHvHQBQ/Ag9ExF6AOA72rdvr1Prxx9/
LOa9jxkzRu99/vz5xbx3AEDxI/RMROgBgI/IysoqV66cTq24uLhinsBHH32k
9/7cc88V894BAMWP0DMRoQcAPuLMmTO6s+rUqVP8EwgMDNQTuOeee4p/AgCA
YkbomYjQAwAfsXnzZt1Zjz/+ePFPID093c/PT02gZMmS8npa/HMAABQnQs9E
hB4A+IiZM2fq0Js6daopc2jcuLGeg7w6mzIHAECxIfRMROgBgI/o06ePjqyN
GzeaMof+/fvrOaxfv96UOQAAig2hZyJCDwB8RIMGDXRkHT9+3JQ5vPXWW3oO
r7/+uilzAAAUG0LPRIQeAPiC5ORkXVilSpW6fv26KdPYsmWLnsajjz5qyhwA
AMWG0DMRoQcAvuCXX37RhdWqVSuzpnH27Fk9jdq1a5s1DQBA8SD0TEToAYAv
WLZsmS6sQYMGmTWN7Oxs42/5xcbGmjUTAEAxIPRMROgBgC+QZ3udV++++66J
M+nQoYOeye7du02cCQDA3Qg9ExF6AOALOnfurPPqu+++M3EmI0aM0DN5//33
TZwJAMDdCD0TEXoAYHk3b96sVKmSzqvIyEgTJ7NkyRI9k+HDh5s4EwCAuxF6
JiL0AMDywsPDdVtVq1bN3Mns2bNHT6Zdu3bmTgYA4FaEnokIPQCwvO3bt+u2
evDBB82dTHx8vJ5M2bJls7KyzJ0PAMB9CD0TEXoAYHnz5s3TbTVu3Dizp/Nb
nTp19HxCQ0PNng4AwF0IPRuxsbHHjh2LiIjI/e+cYWFhBw8ezMzMdNW+CD0A
sLyBAwfqsFq1apXZ0/ntscce0/PZsmWL2dMBALgLoWe0evXqV2+ZOXPmuXPn
jLd+9NFHstyFPzxE6AGA5d1zzz06rAIDA82ezm+vv/66ns9bb71l9nQAAO5C
6BnJozFq1KiFCxdOnDhRXTa+KBN6AIBCyczMDAgIUFXl5+eXlpZm9ox+W7du
nQ69AQMGmD0dAIC7EHpGUnZXrlyRC9evX9+5c6dqvWPHjqlbCT0AQKHIK4iu
qjvvvNPs6fxHUFCQnlLTpk3Nng4AwF0IPaMlS5YYr/7973+Xx2fcuHEXL178
jdADABTSxo0bdVX17dvX7On8x9WrV/39/dWU5EJGRobZMwIAuAWhZzR37lyb
Jd9++608RFOmTImPjyf0AACFMm3aNB16b775ptnT+a9mzZrpWR06dMjs6QAA
3ILQM5JHY//+/devXzcu/Oyzz2T5jBkz/vSnPxF6AADH9ezZUyfV559/bvZ0
/uvpp5/Ws1qzZo3Z0wEAuAWhZ6TOtzlhwgSZhl6YnZ0tr4P6bJyEHgDAQfXq
1dNJdfr0abOn819z5szRs5o0aZLZ0wEAuAWhZ3Tw4MEZM2aMGjXK5kf05Or2
7dvHjh1L6AEAHJSUlKR7qnTp0jdu3DB7Rv/19ddf64k98sgjZk8HAOAWhF5u
KSkpeS6Pj4/fv3+/8WCfkwg9ALAwecnQPdWmTRuzp/P/nTt3Tk+sVq1aZk8H
AOAWhJ6JCD0AsLBly5bpnho8eLDZ0/n/srOzy5cvr+emflcIAGAxhJ6JCD0A
sDB5ktcx9e6775o9nd/p2LGjntsPP/xg9nQAAK5H6JmI0AMAC+vcubOOqe++
+87s6fzOK6+8oue2aNEis6cDAHA9Qs9EhB4AWNXNmzcrVaqkYyoyMtLsGf3O
0qVL9dyGDBli9nQAAK5H6NmXkpKyq6hCQ0PtD07oAYBVhYeH65KqVq2a2dOx
tW/fPj29tm3bmj0dAIDrEXr2Xbx48dWi2rJli/3BCT0AsKodO3bokurWrZvZ
07ElL7h6emXKlPGcn34AALgKoWffr7/+eqWo0tLS7A9O6AGAVc2fP1+X1Nix
Y82eTh4888fcAQCuQuiZiNADAKt6/vnndUZ99NFHZk8nDz179tQz3LRpk9nT
AQC4GKFnIkIPAKyqRYsWOqM882Vr+vTpeoYzZswwezoAABcj9ExE6AGAJV2/
fj0gIEBnVGpqqtkzysOnn36qZ/jEE0+YPR0AgIsReiYi9ADAko4fP64bqmHD
hmZPJ28nT57Uk7zjjjvMng4AwMUIPRMRegBgSZ988oluqD59+pg9nbz9+uuv
pUqV0vNMTk42e0YAAFci9ExE6AGAJXnL199atWql5/nLL7+YPR0AgCsReoWS
lpZ28ODBTZs2rVy5ctGiRe+///7atWu/+eab0NDQrKyswo5G6AGAJRlPaPn5
55+bPZ18DRo0SM9z2bJlZk8HAOBKhJ6DgoODJetGjRqV38+jT5o0afPmzUlJ
SY6PSegBgCXdfvvtXvETde+++66eJy9JAGAxhF6BoqKi3nnnHR10c+fO/fTT
T7/99tv9+/fv3bt3x44d69atmzFjhrp1zJgxW7ZsuX79uiMj86oKANaTmJio
66lMmTI3btwwe0b5+u677/RUO3XqZPZ0AACuROjZ9/PPP48dO1YepXnz5knZ
yfTyWzMhIWH79u3Tpk2Tlf/0pz9duXKlwMEJPQCwnn379ul6atu2rdnTsScq
KkpPtWLFijdv3jR7RgAAlyH07FuyZMk777xz9uxZuZydnV3g+llZWXv27Jk8
efLBgwcLXJnQAwDrWbp0qa6nIUOGmD2dAlSvXl3P9sKFC2ZPBwDgMoSefQkJ
Cfry1q1bd+zY4cg/eF69etXOsT+N0AMA63nllVd0Oi1atMjs6RTg4Ycf1rP9
5ptvzJ4OAMBlCD3HffXVV/JwrVq1Ks+v4EVHRzv41TyN0AMA6+nYsaNOpx9+
+MHs6RRgwoQJerZz5841ezoAAJch9Ap1X8aMGaO+r2c8u6YkntSfLJcLhRqQ
0AMAi8nOzi5fvrxOJ0e+r22ujz/+WM/2mWeeMXs6AACXIfQKJSwsTJ1uRf4/
PDw8NjZ2zZo1+jcXYmJiCjUaoQcAFnPu3DndTbVq1TJ7OgU7dOiQnnCzZs3M
ng4AwGUIvcJKSUlZuHChPG6jcqjEW7RoUUhISGGHIvQAwGK++uor3U2PPvqo
2dMpmLzs+vv7qwnLhatXr5o9o//Kzs5OzZGWlmb2XADAKxF6hRUbG7tx40b9
s3pjx44NCwsr2lCEHgB4tczMzMaNG9cyqF+/vg69119/3ewJOqRp06Z6zocP
HzZ7Ov81b948Pavz58+bPR0A8D6EnuOio6NXrlypj+LJa5C6sHz5cplYEQYk
9ADAq33++ecl8rd+/XqzJ+iQp556Ss957dq1Zk/nP4KDg8uUKaNnVYTPzAAA
CD3HqbNuisWLF6t/XfzXv/41btw4WTJ79uz4+PjCDkjoAYBX6969u53QO3r0
qNkTdMicOXP0nCdNmmT2dH5LTExs1aqV8ZEk9ACgCAg9x3399dfvvffeuXPn
jAvDw8OnTJkiD+Nrr72WkpJSqAEJPQDwXpcuXdLfbsstICAgMzPT7Dk6ZOvW
rXraf/zjH82djLyStm/f3ubBJPQAoAgIPcdlZWXluVymPWfOHH5eAQB8ivFA
WG6tW7c2e4KOCgsL09OuWbOmiTOJj4/v1KlT7geT0AOAIiD0XOLq1atLliyJ
jY0t1FaEHgB4qZs3b9555526RMqXL1+6dGljmwwdOtTsOTpK7kuFChX0zAv7
U0Gu8o9//KNevXp5VjOhBwBFQOjZl5CQUIStruYocDVCDwC81I8//mgskUGD
BvXq1cu4ZMyYMWbPsRDuv/9+PfPvv/++mPeelZW1cOHCgICA/A6PEnoAUASE
nn1LlixZsGDBhQsXHFxfXq327t07efLkgwcPFrgyoQcAXuqFF14wlsiGDRtW
rFhhXNKtWzez51gIr7zyip65NFdx7vrbb79t3rx5folH6AFAkRF69v38889j
x45VP4l++PDh69ev57fmlStXvv76a3VilpkzZzry0RdCDwC8UVJSUtmyZXWG
lCpVSpZcvnzZ2CYlS5Ys7Be3TfThhx8aj04Wz07lJfXRRx/NnXV+fn6EHgA4
j9ArkLxSv/vuu+qHFcaMGSOXv/zyy++///7vf//73r17t2/fvnr16mnTpqkV
Ro8evWnTJgfPtEboAYA3WrZsmTFD+vTpIwsPHz5skydz5851fMx9+/a9b1Dg
5yc3bNhgXH/lypXO3KNffvlFT7tFixbODOW4tLS03JVXo0aNbdu2jRgxgtAD
ACcReg6SV5nFixfrX0vPbcKECZ999lmhvtNH6AGAN2rXrp0xQz799FNZuGrV
KptmqV+/fn6na87tf/7nf4zb1qxZMyMjI7+VP/74Y5t9PfLII9nZ2UW+R6mp
qfo4WkBAgLzaFnkox+UOvYEDB8bFxclNhB4AOI/QK5T09PSDBw9K0K1YsWLB
ggXvvfeevNpu3bpVXoNu3LhR2NEIPQDwOsePHzc2SIUKFeSlQZaPHj069/Gp
bdu2OTisvAJWqlTJuO1f/vKXPNcMCgoqU6aMcc2mTZsmJiY6eb8aNWqkB5TX
bidHc4Qx9B577LH9+/frmwg9AHAeoee46Ojowv4kun2EHgB4nQkTJhgbZMiQ
IWq58cSVWo8ePRwf+c033zRuW69evdxfDJcXyoYNGxpXq1KlypkzZ5y/XwMG
DNBjrlmzxvkBCySB7Ofn16tXr8DAQJubCD0AcB6h57itW7eOHTt248aNhf29
vPwQegDgXTIzM6tXr25skB9//PG3nFMuly9fPnfoScg4ft7mxMTEypUrGzf/
+OOPjStkZ2c//vjjxhVKlizpql9DmDt3rh52/PjxLhmzQPHx8XkuJ/QAwHmE
nuN++ukn9XW8UaNGrVy5Mjw83MkBCT0A8C6bN282Bkj9+vXVN+OCg4ON8WVc
54033nB8/Lfeesu47R/+8IebN2/qW2fOnGkTkkuWLCnyfYmLi/uXweLFi/Ww
bdq0+Zdjrly5UuQJ2EHoAYDzCL1CiYyMXLNmzejRo1XxycuiM2fPJvQAwLv0
6NEjz4j79NNPjXVmXKdWrVp2fprHRnJyctWqVY2bf/vtt+qmHTt22PzuwMiR
I525L8OGDSvhtOeee86ZOeSH0AMA5xF6RZCQkLBp06bx48erH1zYuXNn0cYh
9ADAi1y+fNnf398YIMHBweqmKVOm6IUTJ04sVaqUcTV5yXB8L8aPUJbIOZ2m
LDx//rxNAD700EO//vqrM3dn6NChzofewIEDnZlDfgg9AHAeoeeg0NDQH374
4ZrhjNOpqany2i2hJ4/hd999V4QxCT0A8CJvv/22sT7at2+vb5Ic08u//PLL
/v37G9d88MEHHd+LvLhUq1bNuHlgYGDr1q2NSxo3biyvmE7eHUIPAKyN0HPQ
L7/8Io/VpEmTtm7dKq/CenlYWNhrr70mNxXhpGeEHgB4i5s3bxp/gEAsXbpU
32o8Q4u8Lmzfvt0miPSxP0fMnz/fTltVqlTp9OnTzt8jQg8ArI3Qc9Dly5fl
lVd9NW/s2LGffPKJ+lFXIS+4srAI34gn9ADAW+zZs8eYHqVKldJnjLx06ZKx
wiQJb9y4UadOHeP6EyZMcHxfaWlpNWrUyDOs/P399bf2nHT27Nlvf2/q1Kl6
R+3atfvWAS75ZYfcCD0AcB6hVyihoaESdPrcm6tWrZLXd1m+YMECWZKUlFSo
0Qg9APAWgwYNMqZH37599U3ffPONXt6tWze10PitPVG1atWMjAzHdycvK3mG
3qJFi1x8xwykp/SOateu7b4dFYjQAwDnEXpFcPny5dWrV0vo6XNvvv3220X4
9CahBwBeISUlpVy5csb0+Oqrr/Sts2fP1ssnTpyoFp4+fdqm0Qr1K+Tyamjz
TT0xfPhwF9+x38vOzq5QoYLeXWRkpFt3ZwehBwDOI/Qcl5qampWVpa/Gx8d/
9tln48aNe/WWrVu3qh9UchChBwBeYcWKFcbukATLzMzUt/br10/ftH79er38
vvvuM27VoUMHx/d46tSp0qVLGzf39/e/ZjghmJt06dJF73Hbtm3u3l1+CD0A
cB6h5zjpuOnTp//444/Xfn/uzW+++WbSpEmq9WbOnLl//34HT3lN6AGAV5BG
M3bH6NGjjbfecccd+qbjx4/r5StXrrQ5JBcUFOTI7mJjYxs2bFgiF+NhRDeZ
OHGi3t2sWbPcvbv8EHoA4DxCz3Hbt29XNffaa69t27YtLS1N37Rly5ZXDaZM
mZKcnFzggIQeAHi+kydP2gRXYGCgvlVeufTy0qVLG/+hT14IypYta9zw5Zdf
LnB3V69e7dixY+7KEy1btizU50aKYMOGDXp3vXv3duu+7CD0AMB5hJ7j5OVV
7s68efNUzY0bN27jxo3nzp27ePHi5MmTZcnhw4fl1X/27NlyOTY2tsABCT0A
8HyTJk0yRsddd91lvPXHH3/UN7Vr185m2xdeeMG4bYUKFVJSUuzs6+bNm089
9VSelad8/vnnrrpfS5cu/WMuxsYsVapU7hVsuOnkMIQeADiP0CsCecVZvHjx
q783atSohISE33Jepk+dOnXNgW9SEHoA4OGuX79es2ZNY3S8/fbbxhUWLlxo
54Dd7t27bUrtgw8+sLO7adOm2azfvHlz49W7777b+G1xZ/A7egBgbYRekV26
dGn16tVjxoxRoff1118XdgRCDwA83JYtW4zF4efnFx4eblzBeMxu2bJlNptn
Z2c3aNDAOEKLFi3y29eqVatsMkoGl9KsV6+eceHGjRtdctcIPQCwNkLPSZmZ
mZcvX05MTCzCtoQeAHi4nj17GovjwQcftFnh7rvv1rfm+fI0a9Ysmzjav39/
7tV2794dEBBgXK19+/ZXr179Lddv6jVt2vTGjRvO3zVCDwCsjdAzEaEHAJ4s
MjLS39/fWBw2v4Unr1l6BbmQnp6ee5Dz58/7+fkZB3nhhRds1jl9+nSVKlWM
69SpU0f/jF1ycnLFihXtTKNolixZ8nBejOlavXr1PNfRFi5c6PxMciP0AMB5
hJ6JCD0A8GTz5s2zOYDVr1+/IQbG432VKlUakg+bQUqXLh0fH6/3kvvHFGQF
m1c6m+/u3XnnnQ7+jk8RnDp1Su/otttuc9Ne7CP0AMB5hJ6JCD0A8Fg3b95s
0qRJCfdYsGCB2kueP6awdu1am8nExcWVK1fOuM7KlSvddMezsrKM+4qOjnbT
juwg9ADAeYSefUePHl1WJKmpqQUOTugBgMfat2+fmypPNG7c+GaOp59+2uam
iRMn5jmf1157zbha/fr1MzMz3XTfO3furHe0Y8cON+3FDkIPAJxH6Nm3c+fO
V4uE39EDAK+W+yOXrvX999/n/jGFRx99NL8TrcTExNj8/Lr9X2pwxvjx4/Ve
Zs+e7aa92EHoAYDzCD37MjIyooskOzu7wMEJPQDwWDY/i+ByuUOycePG9s/h
PG7cOOP6999/v5vu+1//+le9l969e7tpL3YYS9PPz+/ixYvFPwcA8HaEnokI
PQDwXsYfQ2/durXZ03Gl4OBgfddq1apl9nQAAEVB6JmI0AMA72U8J+fIkSPN
no4rZWdnV6pUSd87m9+IBwB4BULPRIQeAHivfv366RT6+OOPzZ6Oiz388MP6
3n3xxRdmTwcAUGiEnokIPQDwXrfddptOoRMnTpg9HRebPn26vneTJ082ezoA
gEIj9ExE6AGAl4qIiNAdVKFChaysLLNn5GJfffWVvoNdunQxezoAgEIj9ExE
6AGAl9qyZYvuoG7dupk9HdeLiorSd7BcuXK//vqr2TMCABQOoWciQg8AvJTx
J/CmTp1q9nTcol69evo+yqu52dMBABQOoWciQg8AvNRDDz2kI+jLL780ezpu
8fTTT+v7uGzZMrOnAwAoHELPRIQeAHijrKysChUq6Ai6dOmS2TNyi0WLFun7
OHjwYLOnAwAoHELPRIQeAHij48eP6wKq/f/YuxN4K+c88ONTKdkZjP0/KMNg
jG3MjL+xDGMb+76NJWYqO5ElkiUi60REMpYikgnFZGTJS8oQfyIjEaVipKSU
7r3n/xw35znndLtb55zfPc99v1/Pa1517nN+z/c8pXs/c5bnZz8LPU6xjB49
OvMw27dvH3ocABpG6AUk9ADKUd++fTMFdPDBB4cep1jmz5/funXrzCOdOXNm
6IkAaAChF5DQAyhHJ5xwQiZ/rr/++tDjFNFOO+2UeaRDhw4NPQ4ADSD0AhJ6
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
g5deemnJp/aqtWzZcosttthll12uuOKKKOFDTwpQloReQEIPoHZRzX399dcf
ffTR2LFjn3zyybvuuuvSSy895phjtt9++xVXXLHGRsjYa6+9XnvttdCPgNpU
VFT0799/k002qf2PcqWVVtptt92ior/mmmuitB85cuRbb701derUefPmhX4E
AE2X0AtoWU7+pEmTOgFl7je/+c2WPzrhhBOKd6Btttkmc6Dop+UG3bdjvf0t
yy677LLFFlts/oODDjqoQ4cOp5xyysknn3zSSSf95S9/Of7444899tijjjrq
8MMPP+SQQw444IB99tnnj3/8Y3Sv6Jz86le/at++/XrrrbfKKqss+eq+OrVt
2zY6xBtvvFHAf64pqij3Bg0atPPOOzf0z/onP1x+fY011thoo42iv2nbbrvt
b3/721133TVq/P322+/AAw889NBDjzjiiKOPPvq4446L/hM78cQTo7+B0d/D
Dj849dRTo/8c/vqjzN/e6r/P0c6//NH2229f49/5Av5HGh0i8x9pNGQBV84W
neTMUY455pgiHQUorK5duzbuX1ehF9CynPzRo0c34hsiQFJFfbf//vv379//
66+/LuA/1JTSxIkTe/ToseTHpQI0Z+uss07j/lEVegEJPYBlsfbaa++9997d
u3d/7rnnvvOJmgnyySefdOzYceutt15xxRUb8awuQJIIvXIk9ABqF/2Qv8oq
q/z85z/fYYcd9ttvvw4dOkRZd++997700kuuiNdMLFq0aNKkScOHD+/Tp88F
F1xw7LHH7rHHHlEDrrfeem3btg39NxSg6IReOVqWkz99+vQ7gTL317/+9dgf
9e7du3gH+stf/pI5UPTTcuMWuase+v3ovPPOiw564g+uu+66KM0GDBhw3333
/eMf/3jggQceeuihQYMGDR48+LHHHnviiSeeeuqpZ5555vnnnx89evS4cePe
fvvt//73v9OmTZszZ05lZWUB/9UleRYuXPjVV19NmTLl/fffHz9+/JgxY158
8cXnnntuxIgRw4YNGzp06KOPPvrII48MHDjwwQcfvP/++6O/gdHfw+gvZP8f
3HPPPXf/oF+W6r/Mt9xyy3E/6tChQ/bf88L+51ntlFNOyfxHGh26GIeIdO7c
OXOU6D/MIh0FKKzo367G/Qsp9ALyqZsAAEAxCL2AhB4AAFAMQi8goQcAABSD
0AtI6AEAAMUg9AISegAAQDEIvYCEHgAAUAxCLyChBwAAFIPQC0joAQAAxSD0
AvobAABAcRS1ZYQeAABAwgg9AACAhBF6AAAACSP0AAAAEkboAQAAJIzQAwAA
SBihBwAAkDBCDwAAIGGEHgAAQMIIPQAAgIQRegAAAAkj9AAAABJG6AEAACSM
0AMAAEgYoQcAAJAwQg8AACBhhB4AAEDCCD0AAICEEXoAAAAJI/QAAAASRugB
QKMNHz68T58+0f9mbvnggw/6/ODjjz8ONxcAzZ3QA4BGi76N/u1vf+vcufOs
WbOi33799dddunSJbunbt29VVVXo6QBovoQeADRaVHNXXnllVHaPPvpoRUVF
r169ol9Ht0TfEEOPBkCzJvQAYFm8+eabUdydffbZ9913X/SLLl26RN8uQw8F
QHMn9ABgWVRVVV199dV/+0Hnzp0nTZoUeiIAEHoAsKxGjBhRHXr//ve/Q88C
AGlCDwCWxdSpU88666zq0Hv00UdDjwMAaUIPABpt9uzZF198cZR4l1xySfS/
Z5xxRnRL6KEAQOgBQCMtXLiwZ8+eUd917959/vz5V111VfTrhx9+OPRcACD0
AKAxKisr+/btG5XdueeeO2PGjOiWcePGRb89/fTTq6+pBwABCT0AaITqD2Dp
2LHjhAkTqm+J0q979+7RjUOGDAk7GwAIPQAAgIQRegAAAAkj9AAAABJG6AEA
ACSM0AMAAEgYoQcAAJAwQg8AACBhhB4AAEDCCD0AAICEEXoAAAAJI/QAAAAS
RugBAAAkjNADAABIGKEHAACQMEIPAAAgYYQeAABAwgg9AACAhBF6AAAACSP0
AAAAEkboAQAAJIzQAwAASBihBwAAkDBCDwAAIGGEHgAAQMIIPQAAgIQRegAA
AAkj9AAAABJG6AEAACSM0AMAAEgYoQcAAJAwQg8AACBhhB4AAEDCCD0AAICE
EXoAAAAJI/QAAAASRugBAAAkjNADAABIGKEHAACQMEIPAAAgYYQeAABAwgg9
AACAhBF6AAAACSP0AAAAEkboAQAAJIzQAwAASBihBwAAkDBCDwAAIGGEHgAA
QMIIPQAAgIQRegAAAAkj9AAAABJG6AEAACSM0AMAAEgYoQcAAJAwQg8AACBh
hB4AAEDCCD0AAICEEXoAAAAJI/QAAAASRugBAAAkjNADAABIGKEHAACQMEIP
AAAgYYQeAABAwgg9AACAhBF6AAAACSP0AAAAEkboAQAAJIzQAwAASBihBwAA
kDBCDwAAIGGEHgAAQMIIPQAAgIQRegAAAAkj9AAAABJG6AEAACSM0AMAAEgY
oQcAAJAwQg8AACBhhB4AAEDCCD0AAICEEXoAAAAJI/QAAAASRugBAAAkjNAD
AABIGKEHAACQMEIPAAAgYYQeAABAwgg9AACAhBF6AAAACSP0AAAAEkboAQAA
JIzQAwAASBihBwAAkDBCDwAAIGGEHgAAQMIIPQAAgIQRegAAAAkj9AAAABJG
6AEAACSM0AMAAEgYoQcAAJAwQg8AACBhhB4AAEDCCD0AAICEEXq1+BsAAEBx
FLVlhF4tin3yAQCA5knoBST0AACAYhB6AQk9AACgGIReQEIPAAAoBqEXkNAD
AACKQegFJPQAAIBiEHoBCT0AAKAYhF5AQg8AACgGoReQ0AMAAIpB6AUk9AAA
gGIQegEJPQAAoBiEXkBCDwAAKAahF5DQAwAAikHoBST0AKivESNSm2+eatMm
tf/+qc8+Cz0NAE2d0AtI6AFQL6+8klpuudRPfrJ4i4pv3rzQMwHQpAm9gIQe
AHWrqkr9+tdx5VVvV18deiwAmjShF5DQA6BuI0fmV160/exnqe+/Dz0ZAE2X
0AtI6AFQt5NPriH0om348NCTAdB0Cb2AhB4AdaisTK25Zhx3W28d//qvfw09
HABNl9ALSOgBUIexY+Oy++lPU888E/92o41CDwdA0yX0AhJ6ANShV6+47I46
KrVgQWqFFeJbJk0KPR8ATZTQC0joAVCHAw6Is+7OO9O37LlnfMs//hF6PgCa
KKEXkNADoA5rrRVn3TvvpG+54or4lk6dQs8HQBMl9AISegDU5uOP46ZbZZX0
B7NERoyIb9xhh9AjAtBECb2AhB4AtXn88bjpdttt8Y1ffhnf2KaNq+kBUCOh
F5DQA6A2l18eN92558a3b7RRfPvbb4ebD4CmS+gFJPQAqM3BB9f8uSvZn9Dy
4IPh5gOg6RJ6AQk9AGrTrl0cdG+8Ed9+ySXx7RdfHG4+AJouoReQ0ANgqebP
T7Vsubjmol9Ev8148ME49A46KNyIADRdQi8goQfAUo0fH9dcu3Y5X3rjjfhL
7dsHmg+AJk3oBST0AFiqhx+Oa+6AA3K+NG9eqkWL+Mm+BQsCjQhA0yX0AhJ6
ACxVjx5x6HXpkv/VjTeOv/ruuyHmA6BJE3oBCT0Aluq44+KUu/vu/K/uvXf8
1aFDQ8wHQJMm9AISegAs1W9+E6fciy/mf/XMM+OvXn99iPkAaNKEXkBCD4Cl
WmONOOWmTs3/6q23xl897bQQ8wHQpAm9gIQeADWbNSvuuBVWSFVV5e/w9NPx
DnvsEWJEAJo0oReQ0AOgZv/5T9xxW25Zww7vvRfv8POfl3o8AJo8oReQ0AOg
ZoMHxx134IE17PDdd/EVFlq1Sn3/fclHBKBJE3oBCT0AanbddXHonXNOzfus
v368z6RJpZ0PgKZO6AUk9ACoWfQNIhNxt91W8z677BLvM3JkaecDoKkTegEJ
PQBqln2ZvGHDat7nL3+J97nnntLOB0BTJ/QCEnoA1OwXv4gj7u23a96nW7d4
n8svL+18ADR1Qi8goQdADaqqUm3bxhE3Z07Nu/XrF+9z0kklnRCAJk/oBST0
AKjBjBlxwa2++lJ3e+YZl9IDYGmEXkBCD4AajBsXF9w22yx1twkT4t023bSE
8wFQBoReQEIPgBo8/nhccAccsNTd5s6Nd2vTJv2CTwD4kdALSOgBUIOLLooL
rnPn2vb86U/jPT//vFTzAVAGhF5AQg+AGmy3XZxvf/5zbXtuu22852uvlWo+
AMqA0AtI6AFQgw02iPPt9NNr2/Ogg+I9H320VPMBUAaEXkBCD4AarLRSnG99
+tS255lnxnveeGOp5gOgDAi9gIQeADXIDr3Ro2vb84Yb4j3PPrtU8wFQBoRe
QEIPgHyLFqVatozzbeHC2nYeNCje87DDSjUiAGVA6AUk9ADI99lncbv97Gd1
7Pzyy/HOO+1UkvkAKA9CLyChB0C+MWPidtt++zp2njw53nmDDUoyHwDlQegF
JPQAyDdkSNxuBx5Yx84LFqRatFi8c6tWqYqKkowIQBkQegEJPQDy/f3vceh1
6lT3/muvHe8/bVrx5wOgPAi9gIQeAPkuvjgOt6uuqnv/7GumjxtX/PkAKA9C
LyChB0C+E0+Mw61//7r333//eP9//rP48wFQHoReQEIPgHx77RWH24gRde9/
2mnx/n37Fn8+AMqD0AtI6AGQb8st43B766269+/ePd6/W7fizwdAeRB6AQk9
APKtvnocbl98Uff+d90V73/KKcWfD4DyIPQCEnoA5Jg/P6621q1TVVV13+Wp
p+K77LNP8UcEoDwIvYCEHgA5Jk2Kq22jjep1lzfeiO/yq18VeT4AyobQC0jo
AZDj5Zfjavvtb+t1l88/j++y9tpFng+AsiH0AhJ6AOR45JG42g49tF53qahI
tWy5+C4tWqS+/77IIwJQHoReQEIPgBw33xyH3hln1Pde66wT3+uzz4o5HwBl
Q+gFJPQAyHHhhXGy9exZ33ttu218r3HjijkfAGVD6AUk9ADIccIJcbINGFDf
e+27b3yvJ58s5nwAlA2hF5DQAyDHnnvGyfbMM/W91ymnxPfq16+Y8wFQNoRe
QEIPgBxbbRUn2/jx9b3XpZfG9+rRo5jzAVA2hF5AQg+AHD/9aZxsM2bU9159
+sT36tSpmPMBUDaEXkBCD4DYwoVxr7VqlaqsrO8dH3ssvuPBBxdzRADKhtAL
SOgBEJsyJe619dZrwB1feSW+4047FW0+AMqJ0AtI6AEQGzs27rXttmvAHT/6
KL7j//k/RZsPgHIi9AISegDEhg2Le22//Rpwx3nz4ju2aVO0+QAoJ0IvIKEH
QKxfv7jXTjmlYfddddX4vl99VZz5ACgnQi8goQdA7Mor41i75JKG3XezzeL7
TphQnPkAKCdCLyChB0Csc+c41m67rWH3/cMf4vs+/3xx5gOgnAi9gIQeALHD
DotjbfDght33yCPj+w4aVJz5ACgnQi8goQdAbOed41h78cWG3fess+L73nxz
ceYDoJwIvYCEHgCxTTeNY+2DDxp232uuie970UXFmQ+AciL0AhJ6AMRWWimO
ta+/bth9+/eP73vSSUUZD4CyIvQCEnoALLaM18J76qn47vvuW4T5ACgzQi8g
oQfAYpMnx6W20UYNvvu4cfHdt9uuCPMBUGaEXkBCD4DFxoyJS23HHRt89ylT
4ruvt14R5gOgzAi9gIQeAIv9859xqf35zw2++4IF8d2XWy5VVVWEEQEoJ0Iv
IKEHwGL9+sWl1qFDY1ZYffV4hS+/LPR8AJQZoReQ0ANgsauvjjPt4osbs8Lm
m8crvPtuoecDoMwIvYCEHgCLnXlmnGm33NKYFXbdNV7h+ecLPR8AZUboBST0
AFjsyCPjTBs0aFlXGDiw0PMBUGaEXkBCD4DFlv35uLPOile4+eZCzwdAmRF6
AQk9ABZb9nfYLfu7/ABIEKEXkNADYLE11ogz7YsvGrPC3XfHK5xySqHnA6DM
CL2AhB4AaQsXxo3WqlWqsrIxi2RfiW///Qs9IgBlRugFJPQASPvss7jR1l23
kYuMGRMvsuOOBZ0PgPIj9AISegCk/ec/caP9+teNXGTy5HiRjTYq6HwAlB+h
F5DQAyBt+PC40fbeu5GLfPttvMjyyxd0PgDKj9ALSOgBkDZgQNxoJ5zQ+HVW
WileZ/bsws0HQPkRegEJPQDSevWKA61Ll8avs+mm8ToffFC4+QAoP0IvIKEH
QNp558WBdsMNjV/nd7+L1xk9unDzAVB+hF6eGTNmjB8/fsqUKRUVFXlf+vDD
D8eMGbNgwYJCHUvoAZB23HFxoN1/f+PXOfjgeJ0hQwo3HwDlR+hlu/vuu//2
o27duv33v//N/updd90V3R6VYKEOJ/QASNtzzzjQnn228ev89a/xOnfcUbj5
ACg/Qi9bdDY6dux4ww03nH322dW/fvXVVzNfFXoAFMXWW8eBNn5849e57LJ4
nSuuKNh4AJQhoZctKrvp06dHv1i4cOHw4cOrW2/8j99zhR4ARfGzn8WBNm1a
49fp0ydep1Onws0HQPkRetluvfXW7N+OHj06Oj9nnHHG5MmTU0IPgGKoqEi1
bLm4zlq0SC1a1PilBg+OQ+/QQws3IgDlR+hlu/LKK/Nuefrpp6NT1KVLly++
+ELoAVB40beVTJ2tueYyLfXSS/FSO+9coPkAKEtCL1t0Nl566aWFCxdm3zhw
4MDo9ksuueSyyy4TegAU2Ntvx3W25ZbLtNTEifFS7doVaD4AypLQy1b9eZtn
nXVWNEbmxsrKyv79+2c+jVPoAVBII0fGdbbHHsu01KxZ8VKrrFKg+QAoS0Iv
25gxYy655JKOHTvmXUQv+u2wYcNOP/10oQdAgT30UFxnRx+9rKu1bh2vNn9+
IeYDoCwJvSXNnj27xtu/+OKLl156KfvJvmUk9ABI3XRTnGZnn72sq224Ybza
xx8XYDwAypPQC0joAZDq2jVOs549l3W17bePVxs7thDzAVCWhF5AQg+A1Mkn
x2l2zz3Lutp++8WrPflkIeYDoCwJvYCEHgAFTrPCZiMAZUvoBST0AEjtsEOc
Zq+9tqyrFfaFoACULaFXu4ULF37SWLNmzap9caEHQIE/PqWwH+0CQNkSerWb
PHny3xrrscceq31xoQdAqk2bOM3mzVvW1Qp7sQYAypbQq92cOXNGNdakSZNq
X1zoATR3X38dd9nKKxdgwezLr+++ewEWBKA8Cb2AhB5Ac/fBB3GXbbppARZ8
++14wS23LMCCAJQnoReQ0ANo7l5+Oe6y3/++AAvOmBEvuOaaBVgQgPIk9AIS
egDN3WOPxV12yCEFWLCiItWy5eIFW7RILVpUgDUBKENCLyChB9Dc3XFHHHqF
+qaw9trxmp9/Xpg1ASg3Qi8goQfQ3HXvHkfZ5ZcXZs2tt47XHD++MGsCUG6E
XkBCD6C569gxjrI+fQqz5p57xms++2xh1gSg3Ai9Bvnmm2/GjBkzaNCgO++8
s3fv3jfddNO99977xBNPTJw4saKioqGrCT2A5u7QQ+Moe/TRwqx57LHxmg88
UJg1ASg3Qq+eJkyYEGVdx44dl3Z59HPOOWfw4MGzZs2q/5pCD6C523nnOMpe
eqkwa557brxm796FWROAciP06jR16tTrrrsuE3RXXnnlQw899PTTT7/00kuj
Ro168sknBwwYcMkll1R/tXPnzo899tjChQvrs7LQA2ju2rWLo2zixMKsed11
8ZoXXFCYNQEoN0Kvdi+++OLpp58enaVrrrkmKrtovKXt+eWXXw4bNuzCCy+M
dr7sssumT59e5+JCD6C5W3nlOMq+/rowa957b7zmiScWZk0Ayo3Qq92tt956
3XXXffDBB/Xcv6Ki4vnnnz///PPHjBlT585CD6BZmzcvLrI2bQq27NNPx8vu
s0/BlgWgrAi92n355Zc13l77R6/Mnz+/luf+MoQeQLP28cdxkW24YcGWff31
eNltty3YsgCUFaHXIFOnTr399tu7dOkSnbcLL7zwtttuGzZs2Ny5cxu3mtAD
aNZeey0ush12KNiyU6bEy66/fsGWBaCsCL36+/zzz88888wlP2/z/PPPf/XV
VxuxoNADaNaGDYuLbP/9C7bsggXxssstl6qqKtjKAJQPoVd/Dz74YHS6Lrnk
kueeey6Kvk8++WTUqFE9evSozr1x48Y1dEGhB9Cs3X13XGSnnFLIlVdbLV75
f/8r5MoAlAmhV3833HBDdLqiR5R3+9NPPx3dftZZZ0XjNWhBoQfQrF19dZxj
F19cyJU32yxeecKEet3l229TM2emKisLOUbpFfxRJOO0AM2S0Ku/gQMHRqfr
888/X/JLd955Z/SlCfX8ZvojoQfQYN98k1prrdSKK8bbVluV66sTzzgjzrFb
binkyrvsEq/8wgtL3e2zz9JXV9999/Rb+TIv9dxoo9QRR6Seeiq1aFEhR4p8
9FHqqqsavP2//1fHsgV/FCU+LQDFIfTqb/LkyZ07d+7Xr1/lEv/P3tChQ6Mz
OXbs2AYtKPQAGqx//zhhMtu//hV6rEaJwiHzEB5+uJArH354vPIjj9Sww+zZ
qYsuSq2wQg0nM7P98pep8eMLOdUdd9R2uKVtvXsvdcGCP4ogpwWgOIRe/b36
6qvVb8e78cYbs6+sN2vWrG7dukW3R79o0IJCD6DBdt65hp+9Dz009FiN8oc/
xA9h1KhCrnz66fHKt92W/9W5c9Mf8lmfyGrTppAFetpphQy9gj+KUKcFoDiE
Xv0NGTIk+8M2L7rooptvvvm2224777zzot824oM3hR5Aw7z3Xs0/eC+3XGra
tNDDNVwj3klXT1deGa986aU5X1q0KLXvvg3orOWXT40ZU5ipdtyxYKFX8EcR
8LQAFIfQq7+ZM2eOGjVqwIAB3bt3X/IiC926dbvnnnuee+65Dz/8cOHChfVZ
UOgBNMyFFy71B+8ePUIP13ArrxzP38DXhNShX7945Q4dcr7UtWv+qfvFL1I3
3pi+qN/bb6dfXbnnnvk7bLBBav78ZR0pKqm2bRsTejffXMNqBX8UoU4LQNEI
vcaZP3/++++//8wzz9x5550XXXRRXvR17Njxyy+/rHMRoQfQAFEprLtu/GN2
q1apli3j3264YaqiIvSIDfHttzlPDxXWP/8ZL/7nP8e3R9+bVlwxp1Z+97v8
6y9UVaXOPDM/am64YVlHevfdnAX33z/14Yf12pb8ROuCP4qApwWgaIReQcye
Pfutt9765z//eeutt5577rnRWZ05c2ad9xJ6AA2QfXnxaDvyyPwnWaK6KSOT
JsWT//znBV58zJh48R12iG+//PKcM7b99ql582pe4eKLc/Zcc81lffbqwQdz
FrzuusYvVfBHEfC0ABSN0KtdfZ6YW9Jnn30WPZA6dxN6AA1w8ME5P2P375/+
mJHsW/bZJ/SIDTF6dDz5b39b4MU//jjnuc5qUZKssUbOGXvmmaWuUFGRfu1i
9s5Dhy7TSF265Kw2cmQj1yn4owh7WgCKRujV7tZbb+3Vq9dHH31Uz/0rKipG
jRp1/vnnj6nHe7SFHkB9TZ+e/sSVzE/X0a+/+CL1+efpF3BmbmzRIlXvf64b
oKoqVY//767BHnssnvyQQwq8eBQvmcVbt158ncGXX84plK22qmORe+7J2f/Y
Y5dppLynX7/6qpHrFPxRhD0tAEUj9Gr34osvnn766dFZ6t2797hx42r5lJXp
06c//vjjXbp0qf5glhqvq55H6AHU1w035Px0vffei2+PfpF9e9eujVn88cfj
y3M/8MDiG99/P/0k1Gabpd9AF6283nrpN7t1756+mnZB/P3v8didOhVmzWyr
rhqvX/12s7xzeP75dawwdWrO/quttkzzrLlmvNTGGzd+nYI/irCnBaBohF6d
pk2bdv3111d/ykrnzp2jXz/66KPPPvvs6NGjR40aNWzYsLvvvvvCCy+s3qFT
p06DBg1asGBBfVYWegD1tcUWOT9dDxiw+PaHHsq5fe21U/X73OMc222X84RO
tMLll+c8gZi9RcEybFgBHtGll8ZrFuMjQ7NfYfjuu+lbDjss54GMGFH3Iu3b
59zl008bOUx0x+x1jjiikeukivAoAp4WgGISevX03nvv3XzzzR07dlzywgrV
zjrrrIEDBzboPX1CD6BeXn015+fqFVZIzZ69+Evz5qVWWSXnq4MGNWzx+fNz
mu6QQ1K77FJz4mVvUQkuow4d4tX69VvW1Za0667x+v/+d/qW9dfPeQj1eOVJ
6vDDc+7y7LONHObJJ3PWyXwSS9TU77yTfhXrww+nf7FoUd1LFfxRBDwtAMUk
9Bpk7ty5Y8aMiYKub9++vXr1uvHGG++5556hQ4dGGbioPt+ecgk9gHo59dSc
n6uPPjrnq6edlvPVP/yhYYvnVWQ9t5YtU+PHL9OD2m+/eLWCPEWY56ij4vUf
eiidVNnzt227+I17tTvvvJx71XhJu/q46qr8Mop6fNttc95iWT3VjjumD5oJ
+TwFfxRhTwtAMQm9gIQeQN3mzs1/zm748Jwdom8KeRU2YUID1r/11ppTbsst
U/fdl35D1uefp5+Q2mmn/B3++MdlelzZrxcdO3aZlqrR2WfH6994Y/qza7KH
/8Uv6rXILbfk3Ouiixo5TN7LI7Ovh1jjtuGGNX8sZ8EfRdjTAlBMQi8goQdQ
t6i28hphyQujb755zj5nndWA9Y8/vobQOPnkVN67rRcuzH/q8CeNes3ep5+m
P+Yx2rI/nOSxxxbfWM/tk0/qPtC118brX3BBzmX7om233eo17cCBjT+x2TbZ
pI6yq3Hr3Dn/xZwFfxRhTwtAMQm9BnnnnXfuvPPOPn36PPLIIxMnTqyqzws8
lk7oAdTtD3/I+aG6xg9F7NUrZ5/VVlvqBa+XtNlm+X1xzDE17xml38Yb5+x5
2WUNfjjHHtuY5MnbDj207gMNGBDvf8IJqTfeyFlh333rNe3QoTn36tChwY83
Mnt24x9pz545SxX8UQQ8LQBFJvRqN3369FmzZlX/+oMPPsj7MJarrrrq448/
bvTiQg+gDh98kP+T/1tv1bDbtGn57/bq379e60f/wrdokXPHdu3SH8+yNPff
n7NzI66hVrLQGzEi3n+vvVIvvNDgFfIW+ckS746sp5dequEhrLtu+loV776b
PtszZqSeey7ddFGh5+22/PLp61xkFPxRBDwtAEUm9Go3fPjwzp0733fffZ9/
/vnAgQOj03XOOef079//lltuiW6Pfhul3+jRoxu3uNADqMPFF+f8RL3NNkvd
c//9c/bcccd6rR/1RV5Z1P4BmJ99lrPzTjs17OGkShh648fH+2+1VfptgNkr
1PMNhs8/n3Ovgw5q8OON3HZb/vy//nU67pYUnd59983feeedU5WVi3co+KMI
eFoAikzo1e7FF1/MPH/XqVOn6H/f+vH/TI5GfeKJJ6pz75VXXmnE4kIPoDYV
FfkffX/jjUvd+bHH8gPh9dfrPkTPnjl3WW+9/Lfm5amqWnz99OptzTUb/KBK
FnpRSWX2/+lP85+EOuqoek07cmTOvQ4/vMGPN/XDR5dEf46ZZ06jcPv669r2
j2or7/E+8cTiLxX8UQQ8LQBFJvTqNGXKlH79+mVetHnDDTe88847ma9+9NFH
55577hlnnDFt2rSGriz0AGrz9NM5P063alXbNc4WLsz5eJNoO/XUug9xyCE5
d7n++rrvkn2U1q0b8HCqffBB6qmnUuecEy+y++7pWxq0Zb+acWkqK3OuD/jv
fzfmSai8698ty5vRvvsuNXFieow63z4Z7damTc5xM1ctfPnlAj+Kgi8I0GQI
vXr64osvunfvnnl278orr3z11Vcrfvjkt/fffz+6pW/fvg1dU+gB1ObQQ3N+
nK7zgzKyLygQbSuuuNTLsWVkP2PYtm3qm2/q2H/+/Jz39K27bgMeTra8j8Qs
kuxHl1fNe+9drxUefTTnXueeW6xR8+T9UWaewXzzzQI/ioIvCNBkCL36u//+
+6sT75xzzqnOva5du44cOTKaqk+fPh07dvzqq68atKDQA1iqmTPTz5dl/zg9
aFAdd8l+V1r19ve/17b/1Kk5O++wQ91TTZiQc5da3jNYu7yL3BVJ9IgyR8lr
k9//vl4r9O+fc68rrijWqHnyrl/Qvv3i2//73wI/ioIvCNBkCL36q36/3uDB
g6Mxor6LKq8696LuO//886NfjI9+xmgIoQewVDfdlPOz9Kqr1vZhmBnbbptz
r622qm3nJ57I2fmUU+pe/6mncu6y1171fTh5jjoqXiSKmiI54ID4KNlXW/jJ
D1ckr48ePXLuFf2hlEbeVQ9atky/8jP1Q/4X9lEUfEGAJkPo1d/8+fPP/MGX
X36ZSn9IQEU0yRVXXJF5PWefPn2++OKL+i8o9ACWKmq07J+l6/k2qCU/4PGl
l5a686WX5ux5yy11r3/ZZTl36dSpvg8nT/bFAZ9/vpGL1Omvf42PcscdqdVX
j3/bqlX+tchrFJ327Md7//3FGjXPtGn5f47ffrv4SwV/FGV0WgAaQug1yNNP
Px2dsV69en3743ecqqqqt956K/P2vY4dO959991Tpkypz2pCD6Bmr72W/3P+
iy/W647/+1/+53jUcqm7vfbK2bPOZ9aiBMj7FNDMp0E2VPZV2t97r5GL1Kl7
9/goUaLuvHPO8JMm1b3Cbrvl3CXrs8iKK+8vwAYbxF8q+KMoo9MC0BBCr0Eq
KytvvPHG6KRdcskl77zzTuWPV/bp27dvdOOFF16YeXav+lm/2gk9gJpF/zxm
/yC98cbp6xrU0+GH59w36r4aX2sRLZj9VE60vfBCHSsPHZq/8ty5DXpYab16
pa++17JlvM7226dvadB25ZX1Otadd8ZHOfXU1Gmn5cz/j3/UcfeFC1MrrBDv
v8oq8fXs6u/zz1NHHJEuo1/+Mv2BpVtsUa975V2Yfs894y8V/FEEOS0AxSf0
GmrhwoW33nprdc1dfPHFDzzwQJ8+fap/G6XftGnT7rvvvs6dO8+cObPOpYQe
QA3mzUu/Iy/7Z+/LLmvA3YcPz382MGqrJeV9Cke0DRtWx8p7752z/5/+1ICp
Mkp2Hb3IP/8Z32X//XO6L9pOOqmOu+ddeqCeFxPP8847+cNHZ75OeZ+6ecYZ
8ZcK/iiCnBaA4hN6jVBZWTlq1KjMZ29W69at24IfL7M7Z86cynr8/3tCD6AG
DzzQmDTIqKhIX/c8++6bblrDE4IPPZR/lJ49a1t2/PicCytE28iRDX5oqdKG
3tix8V222y41fXrOM4lRTdd+4fKTT8456KWXNubxRvL+OOp8L+THH6cvdZF9
l6jFMgr+KEKdFoAiE3qNtnDhwjFjxtx777033XTTfffdN2PGjIauIPQAapD3
Bqjf/a7BK1x0UX4ZPfNM/j7Zlyyv3tq3X+p1977/PvXrX+fsXM/P4V9SKUPv
00/ju1Rf8m/33XPWueSSpd73/fdzrrcepVCDcjvbiSfmHPRnP0vV/h0z7yr2
66yT/xLZgj+KIKcFoMiEXkBCDyDfhx/mP3HWt2+DF5k4Mb+MDj44f5+o1JYM
qGi3JZ/7q6jIT5VowlGjGvkAb745teWW8VJrrpmujIZuNb4YdUlRn2ZOZpQk
0QO59978h1zj82tRzmywQc5uRx1V8yEGD07ddVe8RX98S1ryydN99qn5fW3R
jVdckb9ztGyegj+Kgi8I0AQIvYCEHkC+bt3yf+SOuuawwxq85S3SqlXqs8/i
o0QFlP15GtnbeefFn+Sf+uGtfPvvn7/PMr5a79Zb46U6d16mpeq09trxsaZN
S7de3qUGo61Hj5xrFL7ySs69qrc336x5/dVWy9nt+utr2Cc627/7Xf6CO+4Y
/YiQs1v0B5T3zFq0bbFFeuY8BX8UBV8QoAkQegEJPYAc0c/bG25Yc38t+9a9
e3yg6OfzWvZca63UkUemP4xxzz3ThZj31ejGJdOjQbp2jVe75pplPGd1yH7F
6euvp2+JvofmPWcabcsvn9pjj/QHlua9n656O/fcpa5fn9BL/fAi0uis5i3b
smX6E0f/8pf0y1k337yGqdq0Weozp4V9FMVYECA0oVe7N9988/ZGmTNnTp2L
Cz2AHCNGFKvyfvLDtdgy18Lu1y/nS+edl34xYX0WOeCA9IeCLqPjj48XvO++
ZV2tdvvtFx8r87Gi2U8p1rkdcURtlw+oZ+hFnn025zNP6txat67jc1AL+CiK
tCBAUEKvdsOHD/9bo9Tns1mEHkCO6Ifn4oVetD3++OID5V067eGH0x+0uOuu
td23VatUly7L+lxetewXKP7rXwVYsBannhofK/uzK++4I/+TLZeWM999V9v6
9Q+91A+fArrkazhr3Nq3r9e7IAv1KIq3IEA4Qq928+bNm9YoLq8A0GDrr1/c
0Dv77MUH2mabnNsnTUrfuGBB6sIL09e/zrtXy5bpK+gV8N1Ym20WL/7uuwVb
tkbdu8fHyrscYfSoDzss/fLIGs/V73+fGj267vXz/shuv72O/auq0pfP2Gij
pf4Z/eIX6Zez1j+jCvIoirogQCBCLyChBxDAt9/mvPNuzTVzvjp7durRR9Mf
a3neeeniePDB9HXWCmulleKj137JtmV3113xsU45pYYd5sxJDRmS6t07/Xxl
FMK33JK+4nyNH55ZWDNnpq88fvfdqQsuSF/q4tpr069ifeedRq5W8EcR6rQA
FI7QC0joAQQwenTOczT77FPSo0chmTn0iisW/XBPPRXskQIQlNALSOgBBHDz
zTmhl/eCxmKbMCHnnWjFlv35olttVfTDAdBkCL2AhB5AAMcckxN6tX+0Y8GN
HBkferfdin64mTPjw62+etEPB0CTIfQCEnoAAbRrlxN6n39e0qP/4x/xoY87
ruiHq6rK+VyR7GvBA5BoQi8goQdQav/7X07lbbBBqQfo2TM++oUXluKIG28c
H/GDD0pxRACaAKEXkNADKLVnn80JvUMPLfUAp58eH/2WW0pxxF12iY9Yn4vT
AZAIQi8goQdQaldfnRN6115b6gEOOig++mOPleKIRx8dH/GBB0pxRACaAKEX
kNADKLUDD8wJveeeK/UA220XH33MmFIcsUuX+Ig9e5biiAA0AUIvIKEHUGqD
B6e6do23OXNKPcDaa8fZNXVqKY54223xETt1KsURAWgChF5AQg+geVmwIG6u
Vq1SFRWlOOjQofFB99+/FEcEoAkQegEJPYDmZdKkuLk23LBEB3399figv/pV
iQ4KQGhCLyChB9C8vPhi3Fy//32JDuqa6QDNktALSOgBNC8PPhg311FHleig
VVWp5ZePj/vNNyU6LgBBCb2AhB5A85J9tfQuXUp33Hbt4uNOmFC64wIQjtAL
SOgBNC8dO8bBddttpTvuHnvEx3322dIdF4BwhF5AQg+gedl//zi4hg4t3XFP
PDE+7j33lO64AIQj9AISegDNy1ZbxcH1n/+U7rjdusXHvfzy0h0XgHCEXkBC
D6B5WXnlOLi+/LJ0x73rrvi4J59cuuMCEI7QC0joATQj//tfXFsrrVTSQ48Y
ER/6j38s6aEBCEToBST0AJqR//wnrq2ttirpod99Nz50u3YlPTQAgQi9gIQe
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
BZydOmk9gDIl9AISegBl7D//SW2ySU4WXX556JmW2XffpbbfPudB7b9/6n//
Cz0WAA0m9AISegBlacqU1BlnpJZbLieIDjssVVkZerJCiB7d+uvnPLRWrVLH
HZeaMyf0ZAA0gNALSOgBlI0ZM1IvvJDq1Su1xx45b2Sr3g48sIzfmrek99/P
b71oa9Eidcghqf79U2++mfr229AjAlAHoRfQMp38SZPSb52w2Wy2ZrIde2z6
3XDV2+9/35gVOnasYYv+HY62v/41tffeqV/8ItW+ffrVmP/3/6YvJPfnP6eb
bocd0ressEJ+9WRvZ52VWrSocN8cmoYpU9KPvZZHvcYa6U+e+d3vUnvtlTro
oNSRR6af9TvxxNQpp6ROPTV12mnps1p9epc87Xl/NFEmZ/5w//Snwv/lOfro
eP3oDzf4X2abzWZr0Na1a+P+IRd6AS3TyR89urbvvzabzWYrwdauXWr48MJ9
W2hiFi5M/eY34U+yzWazNfNtnXUa96+40AtI6NlsNlu5bjvskLr33tT33xfu
e0JT9eab6QfbunX4c26z2WzNcxN6ZUjo2Ww2W9lsq6yS2m679EsT77wz9dFH
hftWUCYqKlKvvJK6+urUwQenX+Cq+2w2m61km9ArQ8t08qdPT/+wYbPZbM1k
u+669Nv0qrdOnRq5yF135W/9+qW3u+9OXXFF6uST028ui/5l7tkzNWRI6qmn
Us8/nxo3LvXhhz5wMl9VVWrmzNSECalXX02NHJkaNiz16KOpgQNT99+fGjAg
/YEt99yTPqvVp3fJ057359KtW/yHe8EFhf/Lc+218fqnnx7+L7PNZrM1aIv+
aW0UoReQT90EAACKQegFJPQAAIBiEHoBCT0AAKAYhF5AQg8AACgGoReQ0AMA
AIpB6AUk9AAAgGIQegEJPQAAoBiEXkBCDwAAKAahF9DfAAAAiqOoLSP0AAAA
EkboAQAAJIzQAwAASBihBwAAkDBCDwAAIGGEHgAAQMIIPQAAgIQRegAAAAkj
9AAAABJG6AEAACSM0AMAAEgYoQcAAJAwQg8AACBhhB4AAEDCCD0AAICEEXoA
AAAJI/QAAAASRugBAAAkjNADAABIGKEHAACQMEIPAJZFv379br/99k8//fSu
u+7q2rVrjx49nn766crKytBzAdCsCT0AaLToO+PffnD22WdH/9u5c+fq3w4c
ODD0aAA0a0IPABot+jZaXXbXXXfd7Nmz582b9/DDD0e/7dix49dffx16OgCa
L6EHAI02ZMiQKOvOPffc+fPnV98SfaPs1KlTdON7770XdjYAmjOhBwCN1rt3
76jpnnzyyewbr7rqqujGsWPHhpoKAIQeADROZWXlWWedFTXdp59+mn17165d
oxunTJkSajAAEHoA0DjTpk2rfoPeokWLMjdOnz69+j1633//fcDZAGjmhB4A
NE70/a469KJvjpkbBw0aFN1y7bXXBhwMAIQeADTOwIEDq0Nv+PDh1be89dZb
HTt2jG758MMPw84GQDMn9ACgcXr27Fn9Ks3of2+44Yabbrqp+vM2H3744dCj
AdDcCT0AaITvv/+++vLoH374Ya9evTKXTX/++edDjwYAQg8AGmPy5MnVZVdV
VRX9dtasWVOnTq2srAw9FwCkCT0AaIRRo0ZFoXfTTTeFHgQAaiD0AKARBgwY
EIXekCFDQg8CADUQegDQCNddd13nzp3feOON0IMAQA2EHgAAQMIIPQAAgIQR
egAAAAkj9AAAABJG6AEAACSM0AMAAEgYoQcAAJAwQg8AACBhhB4AAEDCCD0A
AICEEXoAAAAJI/QAAAASRugBAAAkjNADAABIGKEHAACQMEIPAAAgYYQeAABA
wgg9AACAhBF6AAAACSP0AAAAEkboAQAAJIzQAwAASBihBwAAkDBCDwAAIGGE
HgAAQMIIPQAAgIQRegAAAAkj9AAAABJG6AEAACSM0AMAAEgYoQcAAJAwQg8A
ACBhhB4AAEDCCD0AAICEEXoAAAAJI/QAAAASRugBAAAkjNADAABIGKEHAACQ
MEIPAAAgYYQeAABAwgg9AACAhBF6AAAACSP0AAAAEkboAQAAJIzQAwAASBih
BwAAkDBCDwAAIGGEHgAAQMIIPQAAgIQRegAAAAlTpND7DwAAAOEUI/QAAAAI
q4ChB/D/27tjFYdhKIqC//+vwUYmNnJj7YUHYRfMNilih5lKqFJ70BMCAOAW
hB4AAMCXEXoAAABfpkJvWZbW2rZtnz4OAAAAb0nZpe9Seb33eZ7Xdf30iQAA
AHhLyi59l8obY0zTlOLTegAAAPeVpkvZpe+O40jo7fue6PNSDwAA4L7SdCm7
9N3rj/W64Mu+x3oAAAD3kqCrysti/FX7NcMp9wAAAK4v7VYTm3VzN87UDGe0
1p4AAABcW9qtIu73xOap3nt68AEAAMC11U8K/yceAAAAAAAAcDU/vX8WLw==

     "], {{0, 516.}, {593.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{593.5, 516.},
   PlotRange->{{0, 593.5}, {0, 516.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`p0 = 0, $CellContext`\[Sigma]0 = 
     1, $CellContext`t = 0}},
 CellTags->"Snapshot",
 CellID->1679203637,ExpressionUUID->"9fa1efb2-f7b2-42eb-8a6a-48da298842e8"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd8FVXe/3ESiKEHkGKhSLHQBEUBFcVVsSAosCIWmrgKUhUQFlkEFAS7
4h9QpCgqoCy4CIoFKSskSpBQTAgQCJCePOmbEBDi/7c5D+cZb5Kbm+TenJu5
n/frpa+Zc8+cOTMJc+ebmTnTcsSEAU/7V6lSZVJ1+d+AJ6b+ZeLEJ6b9tZ7M
DBw/6ZmR45/6233jJz818qmJ3UdUlcLq1apU+UT+++/0H4WcOXMmOzv7fwAA
AAAA3k2ymyS4wrHOIeKlF8jMzPwPAAAAAMC7SXZTIa64uJeTkyOfZmVl5RQ4
DQAAAADwbiq+SY6TNCcTRaY8yYO5ubmmewoAAAAAKAXJcZLmHLKeumOTlAcA
AAAAlZTOevoezrS0NHXHpumuAQAAAADKSN3DKflOUl5eXp66wGe6UwAAAACA
clEP5UnKk8SXmZnJTZsAAAAAUNlJspN8Jynvf/7nf/7zn/+Y7g4AAAAAwA0k
36lX7BH0AAAAAMAeCHoAAAAAYDMEPQAAAACwGYIeAAAAANgMQQ8AAAAAbIag
BwAAAAA2Q9ADAAAAAJsh6AEAAACAzRD0AAAAAMBmCHoAAAAAYNbxArsLfP9n
qlBVcL1Bgh4AAAAAmEXQAwAAAADbCC+wyTWqsivNEvQAAAAAwBSCHgAAAADY
hrobs3Cay/izwhVcuY2ToAcAAAAAFY+gBwAAAAA2o0ZZKUPQUws6b5ygBwAA
AAAVj6AHAAAAADaj3p5QZLgrjqqsFnTeOEEPAAAAACoeQQ8AAAAAbIagBwAA
AAA2Q9ADAAAAAJsh6AEAAACAzTDqJgAAAADYDEEPAAAAAGzmeIEyBD21oPPG
CXoAAAAAUPEIegAAAABgS+EFCqe5IqnKrjRL0AMAAAAAUwh6AAAAAGBL6m5M
NcrK93+mCl25XdOKoAcAAAAAZhH0AAAAAADOEfQAAAAAwGYIegAAAABgMwQ9
AAAAALAZgh4AAAAA2AxBDwAAAABshqAHAAAAADZD0AMAAAAAmyHoAQAAAIDN
EPQA+KZcp0z3DgAAoFwIegB8ijXN5RSDxAcAACo7gh4AH+GQ7+Sgl1Ug00KV
yEcOic903wEAAEqHoAfAF+iIp/JdRkZGSkpKUlJSQkJCXFxcTAGZkFkplI+k
gk58ZD0AAFDpEPQA2J414qWlpUmUi42NjY+Pl0OflOTl5Z0vIBMyK4XykVSQ
alLZGvdMbwcAAICrCHoA7E2nvIyMDMluEuJSUlKk8A+npIJUk8qyiCxI1gMA
AJULQQ+AjamUl52dnZ6eLqktMTFRZp1HPCupLIvIgrK4NELWAwAAlQVBD4Bd
6ZSXmpoaFxeXkpLiesSzkgVlcWmErAcAACoLgh4AW9IpLy0tLTY2Vo5yZUt5
iiwujUhTZD0AAFApEPQA2I8aJ1M9l1eea3mFr+up5/UYhxMAAHg5gh4A+1GX
87KyshITExMSEsqf8hRpShqUZrmoB29z+PDhzZs3h4aG8m0OAFAIenYlP9Dv
v/9+7969pjsCVDR1uU09mhcbGysT7gp60pQ0qB7W46IevERmZmb//v2rXHDV
VVft2bPHdKcAAOYR9Ozq1KlT8o1/zz33mO4IUNGsl/OSkpLclfIUaZCLeiin
Ta75ukCJrU2dOlWO9h06dJg7d+4DDzzg7+/fvn17SX8VsCEAAG9G0LMrgh58
lno6Lz09PSYmRibcG/SkQWlWGldP6pneVlRKbgx6wcHBkuxatGiRkZGhSkaP
Hi0Hf0l/Ht8MAIB3I+gVZ+zYsW3btpXv0F69etWqVatly5ZLlizJzs6ePn16
8+bNa9asecstt2zdutW6yNKlS/v27VuvXr02bdo8+eSTu3fv1h8dPHhQWps7
d+6sWbPk09q1az/wwAPR0dEhISG33XabtCZf02PGjHH4KaxYsaJPnz516tTp
1KnTpEmT4uLiCjc4f/78jh07BgYGtm/f/qOPPlKfzp49W9Yi3/XSslQbNGiQ
Kn/sscc6d+5sXcUrr7wiFaS1Mm+18x3422+/Pfzwww0aNLjssstGjBgRFhbm
4v53Qs6uExMTT5w4cfyCY8AFUQWOHDmyf//+iIgI96Y8RZqVxmUVal2mtxhe
RB+U5AAlh6ni/hRQONNlXlD4I+fHwxkzZsihftmyZbokNjZWjtXt2rUr/8EW
AFCpEfSKI0FMvj2bNm0qMeree++96KKLZPbuu++uXr36Pffc0717d5mtW7du
TEyMqr9gwQIpqVGjxl133XXttdfKdKNGjQ4dOqQ+ldAnJZdffrlEvPvvv//K
K6+U2a5du9avX1+mH3zwwYsvvlhKpkyZojvwwQcfSImkPFmdqn/rrbdmZWVZ
G2zWrJn054477lAVxPfff6+Wve+++2S2cePG/fv313/avemmm2RDrJs5btw4
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
Gly5cmVQUJAct4ODgz3deQBAZUHQK6fyB72nn35aWvjpp5/c0h85K5g5c2Zq
ampxFRyC3qlTp2T2nnvusdYh6FUk9XReenp6TEyMTLg36EmD0qw0rp7UM72t
AP7LjUEvOTl58ODBVS7YuXNnxWwCAMD7EfTKyduCXolsEPQksCQmJsqeP37B
sUorqsCRI0f2798fERHh3pSnSLPSuKxCrcv0FgN2pg9KcoCSw1Rxf10pnOky
Lyj8kfPj4dVXXy2H6/79+w8cOJCgBwCwcmPQW758edu2bTdu3Khbvv7662++
+WZdYc2aNVJh7dq1alYmbrnllqCgoEaNGt11113btm3TNXv06HHjjTdau7R3
715Zdvz48bpkxYoVffr0qVOnTqdOnSZNmuTkgbKxY8fKsr/99pukmwYNGlx2
2WUjRowICwuz1nHSGb11ffv2rVevXvPmzQcMGKBDkEPQy8nJkcZldQsWLNDL
yjn2hAkTpLB+/frydaz3gJwGSKG630aalemtW7eWc8fKrpBp694IDQ0dNmzY
JZdc0rBhw0cfffSXX37RQW/27Nlt2rSR2Zo1a8pSeitU0Pvxxx9lS2WHyB6T
UwiJhMXt4SLJqY506Y2ifPvtt6VqyoHst+N/ZvrkruwkeR09ejQyMlJ+w6Oj
oz0R9KRZaVxWISsi6AEe5XBoSkpKKvIg5sag17hx48WLF8vEU089RdADAFi5
MegFBwfLt4zOYtu3b1d3kvz666+q5IknnpDZ8PDw0wXhRabr1q17zz33SGyR
6erVq0sGUTUlK0mJNQ5Mnz5dSiTcqdkPPvhAZiXlyeJXXnmlTN96661ZWVlF
duyBBx6QCq1bt65du7bUlwkVrGJjY1UF550RCxculMLAwMA777xT/flUEt+e
PXtO/zno5ebmDh06VGYlKOk/5CYnJ7dr104KO3ToIIvXqFHD399/w4YNpwsG
cpHc16JFC/n0tttuk2nrSsu2Y6UnMi29Uh/JhMQ0KZG9dPfdd0ugu+KKK3TQ
k9143333yaycKsjap06dqpZSQa9ZgXvvvVeWktnrrrvOxXv/JIhJMOzSpcuM
GTO6d+9epZB58+ZZ6x8+fHjz5s0SSF38JbRey7NB0Dty5MihQ4d2794tvyqe
CHrSrDQuq1AX9UxvMWBnDocmfSh2YM1x3xQoc9CTlaoJgh4AwIEbg56kgIYN
G0pQUrP/+Mc/qlatKt87r776qiqRrNGyZUs1PXz48BtuuEGPAfLaa69JTVlE
zf74448yO3LkSN24ZKVatWqpR88iIyMDAgKaNm0aHR2tPh02bFjh+KCpoCfJ
Tl/nGjt2rJQMGTLElc5ERETIhtSvX1/Wq0reffddqTB48ODTfw566nt21KhR
1rWrFDZz5kw1K+lM8mlQUFB2drYqKfHWzVLtWIegp27mmTRpkpo9efLkpZde
6uKtmz169MjIyJDZlJQUdeHPlZs5pUHZ1X369NG5WyXxBQsWLL1Azn/UR3JW
IwFTB8CrrrpKxWfn7Bf05HcsJCQkJyfHE0FPmpXGZRUEPcDTKj7oaQQ9AIAD
9z6jJynD398/OTlZprt3737HHXd06tSpV69epy8EIgk1RS4o55/y6UMPPaRm
JdpcccUVl1xyibqEdODAAR2sThfctCmzCxcu1IvHx8dLyYMPPlhk4yroffLJ
J7pEMkjdunUlgLjSmWXLlsns66+/ritIr9asWfPVV1+dtgS9MWPGyIRESIfW
WrduLdnKWqJqhoaGqllXntFzfcc6BD3JXI0aNbL+cD/88EMXg97nn3/u0Gcn
g3lqEi0DAwOt93k+9thjxZ1+TJ06VV3rnDt3rvyYZBvbt28vpzrOV2GzWzdV
0AsODj537pwngp40K40T9IAKUKpbNzNLQtADAJSHe4OeChGSgORUXE7a58+f
P2XKlOrVq2dkZHz22Wfy0RdffKErS4nEkx49esi5vbo5cMCAAfrTF154QT0m
JtOzZs2S6c2bN6uPxo8fry4AdbaQWUk0RfZKBb3ffvvNWnjTTTf5+fnp0Smd
dEZlnC1bthTZuMpZWnp6uvVT+ZYvsqtC9pWq40rQc33HWoOeyr+33367tak9
e/a4GPT27dunS9S9spJ5nXTy9IW7THUkV9Tph77R1FpZtqVFixbquqEYPXq0
1NR3kBbHZoOxSP4KDw/ftWuX54KeNC6rIOgBnlaqwVgIegAAj3Jv0JNvN3Wi
vmbNGpkICwuTfCQTX3/99TPPPFO1alV1Ter0hZstq1WrdvPNNz/00EOSqhyC
nuQyfYFMwtHll1+ek5OjPlJP8HXs2HGgRevWrYcPH15kr1TQO3r0qLWwZ8+e
UihRqMTOqG/PHTt2FNm4Q9AbOnRo4R0irF2Vzbn33nvVBcHTrgU913esNeip
pRxCnNqxpR1108Wg995771nvKVV69ep10UUX6VtVtRkzZji0GRsbKym7Xbt2
ztdiJ+rdCmlpaXKKKNOeCHrSrDQuq+ANC4CXIOgBACqA21+v0KFDh1tuuUWS
QvPmzWVWTu+DgoKee+65a6+9VspVHRUuWrRooW9r2bdvn0PQE926dWvWrFlE
RIT1KbPTF9LExx9/7GKXVNBT459oTZo0adq0qSudWbx4scwuWrTIurgspUKi
Cnr169dPSUm55pprqhQ8jOawouLuEVVcfL2CKzv2dKFbNxs2bKjqayoqeijo
jRo1yuEuWdlLtWrVuv/++wtXfuSRR6TyoUOHrIXXX399YGCgDvW2p4JeRkZG
dHR0amqqJ4KeNCuNyyoIeoCXcOOomxpBDwDgwO1BT6LHRRdddPnllz/55JOq
RBKTxCg/Pz89IMnu3burFIyTqZcaN25c4aCnxjxR19f0SCli165dUnLjjTem
paWpkqioqH79+r3wwgtFdkkFva5du+rhQVTLffr0caUzoaGhMtuyZcvExERV
8vXXX0vJfffdd/rPg7EcOHCgTp06AQEB27dv162pYS2tT7e9+uqr0iW9Rep+
xeXLl5d/x54uFPTuuusumZWYpmblbF/dO6qDnrq9s1WrVtZ1lTnovfXWW1Lt
lVde0SXStxo1auhxbKy6dOkinXcYK1V+jtJCkfVtSQe9mJiYuLg4TwQ9aVYa
J+gB3oOgBwCoAG4PeioEWZ8ae//991WJ/gKSs80mTZqouDFnzhyJQoGBgYWD
npygSmhSD7g5rEVdOWrfvv2UKVMmTZrUuHFjJ9f4VNCrW7eutPP8888/9NBD
0qwkMvUMmiudmThxopS0adNm8uTJw4YNq1evniSU77777nSh9+jJVsvspZde
qqOWpL8GDRpIm4888sjs2bN79+4tFdq1a6dvZVTh6LLLLpOAqV6RUOYde7pQ
0JOUWrNmTUmIsnXS+Y4dO6rX9umgJ6R7UiId01ctyxz0jh07VqXgVRFq9vPP
P5f9bL3AZyV7SVbtUKjOVdSzmb5Afv1ycnLk7E4S9/Hjxz0R9KRZaVxWISsi
6AHegKAHAKgAbg96GRkZNWrUqFatWkpKiipRJ/8XX3yx9X683bt3qxsd1eWk
devWVbEMdKmpjPbaa685lEtTEyZMaNmypWqhefPmTq6IqUY2b94swVAmJKN1
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
xx8vWrTIWmK9bMcwLA7efvtt67565JFHnNePjY21XnSrVq1aXl6eG9drvbG2
atWqsjoX17t06VJrg3fffbeTtUdFRVkrN2rUqMhqDvd5vvTSS07a/PXXX62V
5berFLsDACoQQc+57du3jx49Wr0Sfffu3WfOnCmuZkJCwrp169TALNOnT3fl
YRCCHgC4KC0tzXr+HxAQICXJyckSBKyhQD8rzTAsDvr162eNJ668DM7hLQOh
oaHuXe+1116ry2fOnOnieu+55x7rpx988IHzDtStW9daPzMz06HCyZMnrWOw
XHbZZTk5Oc7bbNmypa4vKTU9Pd2VXQEAFYygVyI5bXj11VfVixWeeeYZmf7i
iy++/fbbn376Sb6wNmzYsGTJkueff15VGDVq1KpVq1z8sydBDwBc5DBsY58+
fVS5TFjLZ8+e/YfLw7Bs27btTYsSR8v/+OOPrfUXL17s3m30nPz8fP3ib8WV
h8qtDzmKjz76yL3rtV6Qvfzyy/W4K87X+/777z/22GMS5NUNnBLTnHfAIegV
fheSw6N88pMtcbu2b9++Zs2aLVu27Nu3LzY2luvFALwTQc9FERERb731ln5b
emHjxo377LPPSvVMH0EPAFx0/fXXW8/G9WNZn3/+ubW8adOmkhdcHIbl73//
u3XZhg0bOrmU8+GHH1b5szvuuKOynOHLPnnppZfkK6xv375dunSRlOTKUg7X
zlatWuXe9WZlZdWuXVu3r0dKcXG9Z8+eVe+0deLw4cPWpmrVqlW4jvyGWOsc
PHiwtJsJAN6JoFcq2dnZISEhEugWLVo0f/78N954Q776169fLzHw999/L21r
BD0AcMW+ffscTtflaKw+ku+F+vXrWz+VQ3TNmjX1rJNhWORLx2GU/rfffrvI
mqGhoQ4vCGjTpk1qaqpHttY75OfnS/K1brKL7xwvFcmAun3Jd25f7/Tp061N
devWrXAd+VHqCo0bNy77xgCAlyHouS4uLq60r0R3jqAHAK4YN26c9XR9yJAh
1k9Hjx5t/dQ6mH+Jw7C88MIL1mUvv/zyws9iy3dTixYtrNWCgoIOHTrk/u30
Jp9++ql1k6tVq5aWlub2tVjH5PTz8zt27Jgb1+swbEuVggF8HOrk5OT4+/vr
CgMHDtQfnThxYu7cuYMGDerevXv79u0feuihV1555bvvvvPEfgAATyDouW79
+vVyOrFy5crSvi+vOAQ9AChRXl6ew3NeP/zwg7VCaGholWKUOAxLamqqwzNc
H374obWC5MS7777bWqFq1aolPs1X2eXm5jZr1sy61XfccYeH1tWtWze9luee
e84t6z148OCwYcMcXoDeoUOHwi83l7MUa53Jkyf/UTA8S+/eva0jtFjVrl17
xYoV5d9wAPA0gp7rtmzZoh7HGzly5OLFi6Ojo8vZIEEPAEpU+Cm8whfp5By+
8Al5YGCgK3+Xe/HFF61LXX311dYXrzvc+yfeeeedMm9LUlLSr+WWkJBQ5g64
aNq0aQ5b/c9//tND65LQpNdiffVhadcr8f/5558fNGjQ9ddfXzijSX6MiYkp
vNTmzZut1V555ZW1a9cGBQUVGfGsHnroIS7tAfByBL1Ska+JpUuXjho1SiW+
t956Sw/lXQYEPQAokcPQHFOnTi1c58033yx8Kj5ixAhX2k9PT69Xr551wU2b
NqmPvvrqK4fI8NRTT5VnW4YNG1ZigiiRZJny9KFEknQctrp79+6eW11ubq7D
U5ZlW6/8aIrbY3379i1ucM4vvvjCWvOvf/2r9YUdzl1xxRWFX9YAAN6DoFcG
KSkpq1atGjt2rHrhwtdff122dgh6AODcqVOnrI9QifDw8MLVkpKS1GD7VgcO
HHBxLbNnz7YuqG4XjIqKcgiAPXv2LHzvX6kMHTrUxRDhxMMPP1yePjj33Xff
Wd9XWKXgKtv+/fs9t0bx3HPPFd7M0q63V69exe2xe++9d/369fr1DVbLly93
squbNWvWr18/6Z783+GeUmXMmDHu2w0A4GYEPRdFRkbK1590QJdkZmZK3JOg
J/vwm2++KUObBD0AcO6ll16ynld36dKluJoOL+aWjOb6WuR47nBRKTg42Po6
b9GqVSv5kirn5nh50Pvhhx8K3zxZeAATt/voo48Kb2Zp12sdPLNIDz74oPVL
XHn33XeLrFy7dm2HpzX/KHjxn8P+8ff3/+WXX8q18QDgMQQ9F/373/+WfTVh
woT169dbb9U4evTos88+Kx+VYQQ2gh4AOJGfn9+yZUvrebWclhdXufClmSKv
/RVn7ty5TjJCnTp1fvvtt/JvkTcHvbVr1zq8QqJKMTfKeud6p02bNnLkyLff
fnvFihUy7XDHr9KjRw/9Yg5l3rx5hau1aNGiuDf0yS+Vw9sfOnXqVFlepwjA
1xD0XHTq1Ck5DVCP5o0ePfqTTz5JSkpSH8m3vxSW4fF8gh4AOPHjjz9az6gD
AgKSk5OLqyzRwOF0fdy4ca6vKysr6+KLLy4yWPn7++un9srp8OHDm8rNE292
WLRokcMtslUuDEHpUUWuV0ri4+PL3/iWLVsc/lAgXn75ZWudt956q/BP3PkT
Ge+//75D/aNHj5a/twDgdgS9UomMjJRAp8fe/OCDD06cOCHl8+fPl5LSDsBF
0AMAJx5//HHr6XTfvn2Lq5mTk+PwCoYqBXdvSrnrq5MjeZFB7/XXX3fH1nip
8+fPP/vss4W32tMpr7j1Ki+++KJb1iL5vVWrVg6/FdZX4n744YcOqy7xgqn0
vHPnztZFNmzY4JbeAoB7EfTK4NSpU0uWLJGgp8fefOmll8pw9yZBDwCKI2fj
Ds9DORlpf/HixUXmhaVLl7q+RvkCKjz84/Dhw92xNV4qOzu7T58+Dpvs5+c3
b968il+vVePGjfPy8tyyru3btzsMIirf4PrT1atXO6zalRc6vPzyy9ZFXnnl
Fbd0FQDci6DnuszMTOuYXcnJyZ999tmYMWOevmD9+vWlulGfoAcAxVm0aJH1
XFoiWHFn/vn5+VdffXWReeGGG25wfY0HDx686KKLrIv7+/ufLjR8h23Ex8df
d911DntM9sCnn35qZL2Syq0vsFu2bJm71ti3b1/ruqwXKzdt2uTQk4iIiBIb
dHi34+DBg93VVQBwI4Ke6yTHTZky5Ycffjj957E3v/zyywkTJqisN3369B07
drg4/jZBDwCKIxnNei49atSo4mpaz9ULP/AVGhrqyuoSExNbtGhROCp67kXh
Zkmqbd68ucPGSs7aunWrwfVOmjRJF3bs2NFdK501a5Z1df369dMfhYWFOXTm
999/L7FB+aWyLtKjRw93dRUA3Iig57oNGzaoNPfss8/+61//ysrK0h+tXbv2
aQv5qkpPTy+xQYIeABTpwIEDDqffwcHBxVW+8847dbVBgwY5vAbuySefLHF1
ubm5Xbt2LZzyRIcOHew3puK///1v67UzRfKXpDCz6z1x4kTVqlX1R1u2bCmu
qXPnzkVHR8fFxbmy3s8++8y6RvlZ64/y8vIc3pDuyte3bIh1ESdPjwKAQQQ9
18l3vWzOnDlzVJobM2bMypUrjxw5cvz48YkTJ0rJ7t275VRk5syZMp2YmFhi
gwQ9ACjShAkTrCfSV155ZXE19+/fb625d+/eRx991FpSq1Yt6+AbheXn5w8Y
MKDIlKesXr3aXdv17rvv/qXcyjk4zM8//1ynTh2HbbzhhhsSEhLctZnlWe/A
gQP1p3369HFoRL5be/Xq1bp1a5XO7rrrLldW7TC0psNS7dq1s34qX+UlNujw
Lo/Ro0e70g0AqGAEvTKIiIiQb42n/2zkyJEpKSl/FJwzHDx48LQLj3UQ9ACg
sDNnzvx/9u4DvKlyDeC4baHIUJCtgCJDVFwIKnJVQBQQmaKAelUQka0M2Rtl
iEwRsAyVKRuRaVVk+FiEq4iAFEGGbJAt2ELb3C8U8yWnaZqkJ3mT0//v6XMf
TE++8yaU9vxvmnMMlyobPHhwehs3b97csVnVqlXVLbGxsYaa+PDDDz3srlu3
bobtDUf+d955p/MbtDND/Dp6KoTz5ctnWLBhw4Y+nZ40oPtVP+IdG0REROza
tcv5s4cOHXJeQeWeN+e7fu2115zvZXhLnfpP58/26tUrwwUN1/LgZCwAQhOh
57f9+/dPnjy5bdu2qaG3aNEiX1cg9AAgrQULFjgfRauj/X379rnd8tixY87X
2k49y31ycrLhXWDly5dPb18xMTGG+njxxRdVaRYrVsz5xhkzZpjy0GRD79Sp
U8WLFzespn4SBfp3U33dr/Ov0bZu3drwWUOGT58+3fPez5w5U7RoUee7jBkz
xnkD9WXj/NnbbrvN8wk/1YHKLbfc4nyXEDksAQADQi+T1I+DP//8U/0U8+O+
hB4ApFW7dm3no+gnnngivS379+/v2KxMmTKOcOjXr58hK9atW5f27rGxsYb3
Z1WsWPHSpUu2NNfUU4t7c46ODMmGXsOGDQ1Lde7cOfMPyvT9Ol/y4Prrrz9+
/LjzZw1X37v99tvPnTvnYTXDy3nK3r17nTe4fPlygQIFnDfwfBU/w1dX6dKl
vXgOAEAAoSeI0AMAg4MHDxrOnJnetfDUT4RChQo5Nhs/frzjU3v27DFcOu3F
F1803H379u2GE4MUKVJE7T31s2fOnMmTJ483Y/hk7Nix1TJtxIgRfux67ty5
ht6pU6dOSkpKJh/R8uXLZzrZv39/5veblJRUsmRJx/Z9+vRx/uzq1asNC778
8svpLTV58mTDxm5PnGL49d3o6OglS5a4XXDdunWGyzsOGDDAw2MBAEGEniBC
DwAM3nvvPcORef369V9xp3Llyo5tsmfP3qxZM+fPGhZRh+4nTpxw7CXtxRTU
BoYfLoaDf5UeXl46JwSpsCpfvrzhOWnUqFFLX3z//fdpVza8m3L06NGm7Nf5
L/eGG25QxwbOy6oVDGs+++yzhtfpjh8/nnYz9XUSHx+f9lFcuHDB8PUQGRmp
Cs75tUL1WN5//33nk4IqJUqU8Px6IgAIIvQEEXoA4EwdS5cuXfq6wBg+fHjq
XtxeTCHt5blVKRheu5k0aVLQnxJzrFixIvNPoCHiUnkOPVP2e12ad9WdPXu2
VKlShm3UX1aNGjU6dOigfrY+8sgjhr+7VB7e0PfVV18ZIk658cYbmzVr9s47
76hmvPnmm9MuGBsba9bfEQCYjtDz7Oeff/7IL978X3yEHgA4++6770zpArdU
GqRc1bhxY8On3nrrLbfzGN4OVrx4cc+n6QhZffv2zfwT6EfombLf665ea8/w
HsmffvrJcMFEz3LkyDFu3DjPz9L8+fOzZ8/u5YIRERHDhg3L/F8NAAQOoefZ
ihUr3vQL19EDAF+l/ZVLc61evTrtxRRq1KiR3olWjhw5YqgJz1dqCFl169bN
/LPnR+iZst9UM2fONOx6165dNWvW9Oa+1apVM1ymIT2xsbGG3+F0K3fu3H6c
ahsAgozQ8+zixYuH/eLN2aoJPQBwZrgsgunShmSpUqU8nza5ffv2zts/8sgj
QXs2THTPPfdk/tn7+OOP065s+CszbGPKflPdd999bh/awoULnc/cYnD77bdP
mzbNp3POqJ/7AwYMSO9LMV++fF26dDG8HxAAQhOhJ4jQAwA/tGrVynHg/Z//
/Ed6HATKH3/84fy+uVWrVqW35dGjR7/99tuPPvqoY8eOnTt3njp1alxc3Pnz
5zOzd3UAM3ny5EGDBnXo0KFXr14xMTGxsbGG08IAQCgj9AQRegDgq+PHjzv/
OuXChQulJ0IANW3a1PF3Xb16delxACCcEHqCCD0A8FX37t0dR/4lS5ZMSkqS
nggBpI4inH9zcvPmzdITAUDYIPQEEXoA4JNTp045X8c8TE+NAp/UqFHD8Tf+
/PPPS48DAGGD0BNE6AGAT5xP11+0aFH1Q0F6IgTcV1995fhLj4yMdHvFcwBA
WoSeIEIPALx35syZvHnzOo75R40aJT0RgqRChQqOv/dXX31VehwACA+EniBC
DwC8N2jQIMfRfqFChS5evCg9EYJkwYIFjr/6bNmycXUDAPAGoSeI0AMAL50/
fz5//vyOo/1hw4ZJT4TgSU5Ovuuuuxx/+2+88Yb0RAAQBgg9QYQeAHhJlZ3j
OF8VXyYvkYawM2vWLMcXQPbs2Q8cOCA9EQCEOkJPEKEHAN5QPxoKFizoOM4f
PHiw9EQItqSkpLJlyzq+BvgBCgAZIvQE8XMKALwxcuRIxxF+3rx5z549Kz0R
BHz66afOL+rt27dPeiIACGmEniBCDwAydOnSpaJFizqO8Pv16yc9EWRcuXKl
TJkyjq+Eli1bSk8EACGN0BNE6AFAhsaOHes4ts+TJ8+pU6ekJ4KYGTNmOJ9+
848//pCeCABCF6EniNADAM/UD4XChQs7ju179OghPREkJSUllStXzvH10Lx5
c+mJACB0EXqCCD0A8GzIkCHOL+edOHFCeiIImz17tuNLIioqaufOndITAUCI
IvQEEXoA4MGZM2duuukmx1F93759pSeCPMM19Ro2bCg9EQCEKEJPEKEHAB70
6dPHcTyvio+TbSLVokWLrnNimaMCADAXoSeI0AOA9Bw/fjxPnjyOg/lhw4ZJ
T4QQUrlyZcfXxmOPPSY9DgCEIkJPEKEHAOlp376940i+SJEiFy9elJ4IIWT9
+vXOL+otXbpUeiIACDmEniBCDwDc2rNnT/bs2R2H8ePHj5eeCCGnXr16jq+Q
u+66KykpSXoiAAgthJ4gQg8A3GrSpInjGL5UqVKXL1+WngghZ/v27VFRUY6v
kylTpkhPBAChhdATROgBQFobN250/q28OXPmSE+EEPX66687vk6KFSt26dIl
6YkAIIQQeoIIPQBIq0qVKo6j94oVK6akpEhPhBB18ODBnDlzOr5ahg4dKj0R
AIQQQk8QoQcABjNnznR+Oe+7776TngghrUePHo6vlrx586oDCemJACBUEHqC
CD0AcHbhwoWbb77ZcdzeoEED6YkQ6s6cOZM/f37H10zHjh2lJwKAUEHoCSL0
AMBZ9+7dHUfsOXLk+OOPP6QnQhgYOXKk48smW7Zsv/32m/REABASCD1BhB4A
OPz+++/R0dGOI/a+fftKT4TwkJCQUKpUKcdXztNPPy09EQCEBEJPEKEHAA51
6tRxHKuXKFGCK6TDe4sXL3Z+a+eSJUukJwIAeYSeIEIPAFItW7bM+UB97ty5
0hMhzNSoUcPx9VOyZEkutQAAhJ4gQg8AlMTExDJlyjiO0qtWrSo9EcLPjh07
smXL5vgq6t27t/REACCM0BNE6AGAMmzYMMfxeVRU1K+//io9EcJSly5dHF9I
0dHR8fHx0hMBgCRCTxChBwAHDx7MnTu34/i8Q4cO0hMhXJ0/f75YsWKOr6Un
n3xSeiIAkEToCSL0AKB+/fqOI/OCBQuePn1aeiKEsfnz5zu/2XPGjBnSEwGA
GEJPEKEHIIszHJbHxMRIT4SwV7NmTcdXVP78+Y8ePSo9EQDIIPQEEXoAsrIz
Z84ULVrUcUz+n//8JyUlRXoohL3du3fnzJnT8XXVqFEj6YkAQAahJ4jQA5CV
tWzZ0vnUGb/99pv0RLCIUaNGcbUOACD0BBF6ALKs2NhY50PxgQMHSk8E60hO
Tq5cubLzez9PnDghPRQABBuhJ4jQA5A1nT9//tZbb3Uch999992JiYnSQ8FS
du7cmSNHDsfXWJMmTaQnAoBgI/QEEXoAsibnX9qMiorauHGj9ESwIOfrMyqL
Fi2SnggAgorQE0ToAciCvvzyS+fD727duklPBGtKSkqqVKmS4yutSJEi6jBD
eigACB5CTxChByCrOXr0aKFChZx/aVN9Y5ceCpa1bdu26Ohox9db48aNpScC
gOAh9AQRegCylJSUlKefftpx1J09e3b1M0J6KFjc4MGDnV9BnjZtmvREABAk
hJ4gQg9AljJy5EjnQ+6hQ4dKTwTru3LlykMPPeT4qsudO3d8fLz0UAAQDISe
IEIPQNahfhw4/xJdtWrVkpOTpYdClvD777+rvnN87d1///3/8AvDALIAQk8Q
oQcgizh79mypUqUcR9r58+c/dOiQ9FDIQj755BPnV5NbtmwpPREABByhJ4jQ
A5BFNGrUyPkwe/HixdITIct56aWXnL8Ip0+fLj0RAAQWoSeI0AOQFbz//vvO
B9gdOnSQnghZ0YULF+68807H12GuXLm2bNkiPRQABBChJ4jQA2B5q1evjoqK
chxdV6pUKTExUXooZFHbtm1Tfef4aixRosSxY8ekhwKAQCH0BBF6AKxt165d
+fLlc35r3v79+6WHQpb22WefOb++XLly5YSEBOmhACAgCD1BhB4ACzt79my5
cuUcR9RRUVFfffWV9FCArVOnTs6t9/LLL0tPBAABQegJIvQAWNWVK1dq1qzp
fDg9evRo6aEAu6SkpNq1azt/cQ4ZMkR6KAAwH6EniNADYFVvvPGG84F08+bN
pScCtHPnzt11112Or8+IiAjOBAvAegg9QYQeAEsaPHiwc+U9+uijvA0KoWbP
nj0FChRwfJXmzp1706ZN0kMBgJkIPUGEHgDrmTBhgnPllSpV6sSJE9JDAW6s
Xbs2e/bsjq/VQoUK7dq1S3ooADANoSeI0ANgMVOmTImIiHA+zWZ8fLz0UEC6
Jk+e7Pz/S5QoUeLAgQPSQwGAOQg9QYQeACv57LPPIiMjHcfMOXPmtMy3a1hY
7969nVuvTJkyhw4dkh4KAExA6Aki9ABYxuzZs50rL0eOHKtXr5YeCvBKq1at
nFuvbNmyhw8flh4KADKL0BNE6AGwhvnz50dFRTmOk6Ojo5ctWyY9FOCt5OTk
pk2bOrfeHXfcQesBCHeEniBCD4AFzJ07N1u2bI4jZPXnJUuWSA8F+ObKlSuN
Gzd2br3SpUvv379fei4A8B+hJ4jQAxDuJkyY4Pwbm1FRUfPnz5ceCvDH5cuX
GzVq5Nx6xYoV2759u/RcAOAnQk8QoQcgrA0cOND5qFgV3+zZs6WHAvyXtvVu
uummtWvXSs8FAP4g9AQRegDClDoebt68ufPxcPbs2efMmSM9F5BZV65ceeml
l5y/tqOjo2fOnCk9FwD4jNATROgBCEcnT56sWrWq85Fwrly5Vq1aJT0XYI7k
5OQOHTpc56p///4pKSnSowGADwg9QYQegLCzefPmW2+91fkAuECBAnFxcdJz
ASYbOnRoRESE85d6w4YNz507Jz0XAHiL0BNE6AEIL1OmTMmRI4fzoW+ZMmV+
//136bmAgJg7d+7111/v/AV/xx13bN26VXouAPAKoSeI0AMQLs6fP//yyy8b
fpmtevXqp06dkh4NCCB1yFG4cGHnL3uVfh999JH0XACQMUJPEKEHICysX7++
VKlShsrr0qXLlStXpEcDAu7AgQMVK1Y0fP3Xr1//xIkT0qMBgCeEniBCD0CI
u3TpUqdOnQzvVMqdO/fnn38uPRoQPAkJCa1atTK0XqFChbhqJIBQRugJIvQA
hLKvv/66dOnShoPb++67b+fOndKjAQLmzp2bN29ew7+IBg0aHDhwQHo0AHCD
0BNE6AEITX/++WezZs0MB7QRERFvv/12QkKC9HSAmL179z766KOGfxq5cuUa
NmxYYmKi9HQA4ILQE0ToAQg1Fy5c6Nu3b86cOQ2HsqVKlVq7dq30dIC8pKSk
IUOGREdHG/6NlClTZtGiRdLTAYBG6Aki9ACEjoSEhA8//LBIkSKGw9fIyMiO
HTuqb87SAwIhZMeOHVWqVLkujcqVK8fGxkpPBwB2hJ4gQg9AKFDfeMeOHVu8
ePG0R60VK1b88ccfpQcEQlFKSsq0adMKFiyY9h/O448/Tu4BEEfoCSL0AMg6
duxY//79CxQokPZI9eabb1YHscnJydIzAiHt1KlT7dq1i4qKSvuP6MEHH5w1
axbv3QMghdATROgBkLJ+/fqXX3457fuMlDx58vTr1+/ChQvSMwJhY+fOnQ0b
Nkz7r0kpUqRI3759OTMngOAj9AQRegCCbP/+/UOGDClTpozbI9KcOXN27tz5
+PHj0mMCYUkd89SpU8ftP67IyMiaNWvOmjWL/wsFQNAQeoIIPQDBsXfv3jFj
xlSpUsVw6XOH/Pnz9+vX78SJE9KTAmFv06ZNzz33nCq79P7vlCZNmsyfP5/i
AxBohJ4gQg9A4Fy+fHndunW9e/e+99573R5wpipbtuyHH37IMSdgrt27d3fq
1CntBdYdcuTIUatWrbFjx8bHx0sPC8CaCD1BhB4AcyUkJHz//fdDhw5VB5B5
8uTx0HfqILNp06axsbEpKSnSUwOWpY5qYmJiKlWq5OEfo1KiRIlXXnllypQp
v/32G/8kAZiF0BNE6AHIJFV2P/3009SpU9u2bfvQQw+5PbmKs4iIiCpVqkyY
MOH06dPSswNZyLZt23r27FmyZEnP/0Kvu/p71LVq1erTp8/ChQv37NlD9wHw
G6EniNAD4JNjx4798MMP06dP7927d6NGje688063J3VPK1u2bNWqVRszZgyn
/gNkqX/CXbt2Te+ESGnlyZPn4Ycffu2114YOHarSb+vWrfyiNQAvEXqCCD0A
BmfPnlUttnnz5mXLlsXExAwcOLBVq1a1a9e+6667cuXK5eWRocPNN9/86quv
zpkz59SpU9KPDICL+Pj4sWPH1qpVy49/2gULFqxYseIDDzxw//33P/PMM23a
tPn8889//fXXY8eOJSUlST8yAKGC0BNE6AHWk5KSor5TqV5TR1z79+9Xx3Jb
tmxR37W+/vrrL774Yvbs2SrfRo4cOWDAgE6dOr3++uvPPffck08+mSdPHi9f
m8vQ7bff/vLLL6u9cIYHICwkJiauX7/+vffeU8mWL1++TH4HiIiIuOmmm8qU
KfPwww+rimzWrFnr1q27d+/+7rvvjhs3btq0afPmzVu+fPmaNWs2btyo2nD3
7t0HDx48efLk+fPnL1++LP1kADAToScoM0/+nj172qBNm6effvruf9WrV096
HBf169d3zFajRg3pcVw88cQTjtkaN27s031bB96baTz11FN3/qtOnTqtrnrD
Sct/vX5Vi6uaX/XaVa+++uorr7zy36tUB7300ksvvvhi06ZNmzRp8sILLzz/
/PMquBo1atSgQQP1hfTss8+qIy51jKS+wFSFVatW7fHHH69SpcojjzxSqVKl
Bx544J577lGTqEOpkiVLFitWrHDhwurwLHfu3NmzZzej1Xw7qFNl17Bhw8GD
B69YsYJL4AFhLSUlZefOnTNnzuzcuXP16tXz588f/G8pOXLkuOGGG9SuixQp
Urx4cfUd5o477lA/LO67774KFSo89NBDlStX/s9//qN+jqgJ1U+3mjVr1q5d
W31nrlu3rvrBp74dqe+l6ieL+r6qvruqb7MqNtX3W/VdV33vVd+BX7lKfU9O
/easvkunfsd+/V/qm/AdV5UrV+6xxx5T3+FbuUr7MyJVoH82ZfjzUT1Mx8/W
Rx991N8f0QGkfoo5JlR/HdLjaOpnrmOw1Bepw476unU8BHXwYO7i3bt39+9b
CqEnKDNP/oYNG4L8zR+AuBtvvFFlpjqC6tWr1/Tp0zdt2sS7dQBrO3z48Ndf
fz1+/PiOHTuqnipTpkzw/w8lALKKFCni3zcQQk8QoQcgrfz586uaq1WrVosW
LXr37v3RRx998cUXP//8M+fJBKAkJycfPHhQHQt16NDh2WefrVChQokSJZ54
4om77rqrQIECERER0t/DAJiM0AtHhB5gPam/+HTjjTcWLlz41ltvLVeunKq2
Rx99tEaNGvXr13/xxRdbtWrVuXPnAQMGjBo1aurUqQsWLEh9+97atWvVwZuJ
32EAZEFJSUknT56Mj4+Pi4tbsWLF7NmzJ06cOHz48N69e3fs2LFFixYvvPBC
nTp1qlWr9vDDD997771lypQpVqyYKsQ8efLwWiEQmgi9cJSZJ//o0aOTMGlS
t27dXvxXnz59pMdx0b9/f8dsXbp0kR7Hhfpx75ht8ODBmV/wY7PFuOrevfvL
V73yyivqiZ38ryn/mvqvaVd9ctWnV3121fTp02fMmDHzqlmzZqmDnzlz5nz+
+efz5s2bP3++qq1FixYtXrxYBdeXX365fPnylStXrl69OjY29ptvvvnuu+/W
r1+vvvNs3Lhx8+bNW7Zs+fXXX3fu3Ll79+59+/YdOnTo+PHjp0+fVt++OJUB
gLCWkpKSkJBw/vz5U6dOqSONP//8c+/evbt27dqxY8fWrVt/+umnTZs2qYT8
/vvv161bt2bNGvUd8quvvlq1apWKymXLli1dunTJkiXqe+nChQvV91X1DXbu
3LnqO636fqu+66rvveo78Iyr1Pfk1G/O6rt06nfs1O/e6tv4sGHDUt9YrXTt
2lV9h5/sKsYdc38G+fejUAW142drmzZtMv+z1XStWrVyTDhixAjpcbRevXo5
BuvRo4f0OP7o27ev4yG888475i6u/r349y+a0BPEWTcBAAAABAKhJ4jQAwAA
ABAIhJ4gQg8AAABAIBB6ggg9AAAAAIFA6Aki9AAAAAAEAqEniNADAAAAEAiE
niBCDwAAAEAgEHqCCD0AAAAAgUDoCXoTAAAAAAIjoC1D6AEAAACAxRB6AAAA
AGAxhB4AAAAAWAyhBwAAAAAWQ+gBAAAAgMUQegAAAABgMYQeAAAAAFgMoQcA
AAAAFkPoAQAAAIDFEHoAAAAAYDGEHgAAAABYDKEHAAAAABZD6AEAAACAxRB6
AAAAAGAxhB4AAAAAWAyhBwAAAAAWQ+gBAAAAgMUQegAAAABgMYQeAAAAAFgM
oQcAAAAAFkPoAQDgtxUrVowfP179r+OWXbt2jb9q3759cnMBALI6Qg8AAL+p
H6Nvvvlm27ZtT58+rf7zzJkzXbt2VbdMnDgxJSVFejoAQNZF6AEA4DdVc4MG
DVJlN3/+/KSkpOHDh6s/q1vUD0Tp0QAAWRqhBwBAZvz8888q7t56661PP/1U
/aFr167qx6X0UACArI7QAwAgM1JSUt599903r2rbtu2ePXukJwIAgNADACCz
Vq5cmRp633zzjfQsAADYEXoAAGTGoUOHOnbsmBp68+fPlx4HAAA7Qg8AAL+d
PXu2Z8+eKvF69eql/rd9+/bqFumhAAAg9AAA8FNiYuKQIUNU3/Xv3//SpUuD
Bw9Wf/7888+l5wIAgNADAMAfycnJEydOVGXXqVOnY8eOqVs2bdqk/rNdu3ap
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
n8sLiM4fKliWLjXhEfXurdcMxClDnX/DcPt2+y3PPefyQFauzHiRMmVc7vLn
n34Oo+7ovM7zz/u5ji0Aj0LwaQGAQCL0vPTbb7+NHj26devWaS+skKpjx46z
Z8/26T19hB4AeOWHH1yOq3PmtJ09e+1TFy/abrjB5bNz5vi2+KVLLk3XsKHt
scfcJ57zhyrBTHr9db1aTExmV0vriSf0+t98Y7/llltcHoIXv3lia9zY5S6r
V/s5zJdfuqzjOBOLaupt2+y/xfr55/Y/XLmS8VKmPwrBpwUAAonQ88mFCxfi
4uJU0E2cOHH48OEjR46cMmXK4sWLVQZe8ebHkytCDwC80rKly3F106Yun33j
DZfPPv64b4sbKtLLj8hI25YtmXpQzzyjVzPlJUKDJk30+rNm2ZPKef7rr7/2
xj3POnd2uZfbS9p5Y/BgYxmpHn/gAZe3WKZOVamSfaeOkDcw/VHIPi0AEEiE
niBCDwAyduGC8TW7FStcNlA/FAwVtmOHD+uPHes+5e6+2/bpp/Y3ZB05Yn9B
6uGHjRs8+WSmHpfz74v++GOmlnLrrbf0+iNH2s9d4zz8HXd4tciYMS736tHD
z2EMvx7pfD1Etx/Fi7s/Lafpj0L2aQGAQCL0BBF6AJAxVVuGRkh7YfRy5Vy2
6djRh/VfftlNaDRvbjO82zox0fjS4XV+/c7en3/aT/OoPpxPTrJgwbUbvfzY
vz/jHQ0dqtd/5x2Xy/apj6pVvZp29mz/n1hnt9+eQdm5/Wjb1vjLnKY/Ctmn
BQACidDzybZt2yZNmjR+/Pi5c+fGx8enePMLHukj9AAgY48/7nJQ7fakiMOH
u2yTN2+6F7xOq2xZY180a+Z+S5V+JUu6bNm3r88P58UX/Ukew0ejRhnv6JNP
9Pb//a/tp59cVqhd26tpFy92udfrr/v8eJWzZ/1/pEOGuCxl+qMQfFoAIMAI
Pc+OHj16+vTp1D/v2rXLcDKWwYMH79u3z+/FCT0AyMCuXcYj/19+cbPZ4cPG
d3tNnerV+uo7fESEyx1Ll7afniU906e7bOzHNdSCFnorV+rtn3rK9t13Pq9g
WOS6NO+O9NK6dW4eQtGi9mtVbN9uf7aPHbN9/bW96VShGzbLkcN+nQsH0x+F
4NMCAAFG6Hm2YsWKtm3bfvrpp0eOHJk9e7Z6ut5+++2pU6eOGTNG3a7+U6Xf
hg0b/Fuc0AOADPTs6XJEfd996W5Zp47LlpUqebW+6gtDWXg+AebBgy4bP/yw
bw/HFsTQ27JFb1++vP1tgM4rePkGw2+/dblX/fo+P15l3Djj/Pffb4+7tNTT
W7u2ceMqVWzJydc2MP1RCD4tABBghJ5na9eudbx+16ZNG/W/v/z7fyarUZcs
WZKae99//70fixN6AOBJUpLx1PcjR6a78YIFxkDYvDnjXQwZ4nKXm282vjXP
ICXl2vXTUz8KFPD5QQUt9FRJObbPn9/4IlSTJl5NGxvrcq/GjX1+vLarpy5R
f4+OV05VuJ0542l7VVuGx7tkybVPmf4oBJ8WAAgwQi9DBw4ciImJcfzS5ogR
I7Zt2+b47B9//NGpU6f27dsfPnzY15UJPQDwZPlyl8PpqChP1zhLTHQ5vYn6
aNky4100bOhyl/ffz/guznvJnt2Hh5Nq1y7bsmW2t9/Wi1SrZr/Fpw/n32ZM
T3Kyy/UBv/nGnxehDNe/y8yb0f75xxYfbx8jw7dPqs2io13267hq4fr1Jj8K
0xcEgJBB6HnpxIkT/fv3d7y6N2jQoB9++CHp6pnfdu7cqW6ZOHGir2sSegDg
SaNGLofTGZ4ow/mCAuojV650L8fm4PyK4fXX286fz2D7S5dc3tNXtKgPD8eZ
4ZSYAeL86AzVXLOmVyvMn+9yr06dAjWqgeGv0vEK5s8/m/woTF8QAEIGoee9
6dOnpybe22+/nZp73bt3j42NVVONHz++devWp06d8mlBQg8A0nX8uP31MufD
6TlzMriL87vSUj8+/NDT9ocOuWxcsWLGU+3Y4XIXD+8Z9MxwkbsAUY/IsRdD
mzz6qFcrTJ3qcq8BAwI1qoHh+gVlyly7/fffTX4Upi8IACGD0PNe6vv15s2b
p8ZQfacqLzX3VPd16dJF/WGLOsbwBaEHAOkaNcrlWPrGGz2dDNPhgQdc7lW+
vKeNlyxx2bhFi4zXX7bM5S5PPeXtwzFo0kQvoqImQOrW1XtxvtrCdVevSO6N
gQNd7qX+UoLDcNWDyEj7b37arua/uY/C9AUBIGQQet67dOlSh6tOnjxps58k
IElNMmDAAMfvc44fP/7EiRPeL0joAUC6VKM5H0t7+TaotCd4XLcu3Y1793bZ
csyYjNfv29flLm3aePtwDJwvDvjtt34ukqFWrfReJkyw5cun/zMqyngtcrfU
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
     "], {{0, 516.}, {593.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{593.5, 516.},
   PlotRange->{{0, 593.5}, {0, 516.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`p0 = 0, $CellContext`\[Sigma]0 = 
     1, $CellContext`t = 4.}},
 CellTags->"Snapshot",
 CellID->145438185,ExpressionUUID->"4870c65d-b0fd-45bd-8982-42ce012cf647"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd8FVXe/3ESOkhvUiwU6U0UREVdFZau4oqiIiCIIHUXFBYREQVRBAsu
oDQFhQVZ2EXR0IVVghTpCaElQAop//RNACHZ/8+cx7PjTXIzubn3zs3cz/v1
ep7XzLlnzvzmEufOd6c1HDr+8RcDS5QoMbGc/L/Hn5/84IQJz0/5U1WZ6T9u
4ksjxg1/oee4l4ePGD6h89CS0liuVIkSX8j//Tr931yuXr2anp7+/wAAAAAA
vk2ymyS43LHOIeIl50hNTf0PAAAAAMC3SXZTIS6/uJeRkSGfpqWlZeS4DAAA
AADwbSq+SY6TNCcTeaY8yYOZmZlWVwoAAAAAKATJcZLmHLKeumKTlAcAAAAA
xZTOevoazqSkJHXFptWlAQAAAABcpK7hlHwnKe/KlSvqBJ/VRQEAAAAAikTd
lCcpTxJfamoqF20CAAAAQHEnyU7ynaS8//f//t9//vMfq8sBAAAAALiB5Dv1
ij2CHgAAAADYA0EPAAAAAGyGoAcAAAAANkPQAwAAAACbIegBAAAAgM0Q9AAA
AADAZgh6AAAAAGAzBD0AAAAAsBmCHgAAAADYDEEPAAAAAKwVnmN/jq2/pxpV
B/MDEvQAAAAAwFoEPQAAAACwjZAcm8xRnc0MS9ADAAAAAKsQ9AAAAADANtTV
mLnTXMrv5e5g5jJOgh4AAAAAeB9BDwAAAABsRj1lxYWgpxZ0PjhBDwAAAAC8
j6AHAAAAADaj3p6QZ7jLj+qsFnQ+OEEPAAAAALyPoAcAAAAANkPQAwAAAACb
IegBAAAAgM0Q9AAAAADAZnjqJgAAAADYDEEPAAAAAGwmPIcLQU8t6Hxwgh4A
AAAAeB9BDwAAAABsKSRH7jSXJ9XZzLAEPQAAAACwCkEPAAAAAGxJXY2pnrKy
9fdUo5nLNY0IegAAAABgLYIeAAAAAMA5gh4AAAAA2AxBDwAAAABshqAHAAAA
ADZD0AMAAAAAmyHoAQAAAIDNEPQAAAAAwGYIegAAAABgMwQ9AAAAALAZgh4A
AFqmU1ZXBwCAWQQ9AACMaS4jHyQ+AEAxQtADAPgzh3wnv4ZpOVINVIt85JD4
rK4dAIB8EfQAAH5LRzyV71JSUhISEuLi4i5duhQdHR2ZQyZkVhrlI+mgEx9Z
DwDgywh6AAD/ZIx4SUlJEuWioqJiYmLkN1Farly5kpVDJmRWGuUj6SDdpLMx
7lm9HQAA5IGgBwDwQzrlpaSkSHaTEJeQkCCN/3VKOkg36SyLyIJkPQCAzyLo
AQD8jUp56enpycnJktpiY2Nl1nnEM5LOsogsKIvLIGQ9AIAPIugBAPyKTnmJ
iYnR0dEJCQnmI56RLCiLyyBkPQCADyLoAQD8h055SUlJUVFR8vPnWspTZHEZ
RIYi6wEAfA1BDwDgJ9RzMtV9eUU5l5f7vJ66X4/ncAIAfAdBDwDgJ9TpvLS0
tNjY2EuXLhU95SkylAwow3JSDwDgOwh6diX/oFu3bj106JDVhQCAT1Cn29St
eVFRUTLhrqAnQ8mA6mY975/Uq1mzZolcFi1a5M0aAAA+iKBnVxcvXpTf+u7d
u1tdCAD4BOPpvLi4OHelPEUGNH9Sb5M53+ZwPpRES9nVN2vWbODvbdu2zX3f
HACgWCLo2RVBDwCM1N15ycnJkZGRMuHeoCcDyrAyuLpTz3klbgx64eHhsquf
OnWq+74nAIBNEPTyM2bMmBYtWgQHB3fr1q1ixYoNGzZcvHhxenq6/J7efPPN
FSpUuPfee3fu3GlcZOnSpX379q1atWqTJk2GDRu2f/9+/dHx48dltFmzZr3x
xhvy6Q033PDII49ERETs3bv3/vvvl9FuueWW0aNHO/wrfPbZZ3369KlUqVK7
du0mTpwYHR2de8B33nmnTZs2ZcuWbdWq1eeff64+nTFjhqxFfv1lZOn21FNP
qfZnnnmmffv2xlW8/fbb0kFGc3mrnX+BJ06cePLJJ6tXr16vXr2hQ4cePnzY
5PfvhBxExcbGnj9/Pvw35wDAqbM5Tp8+ffTo0dDQUPemPEWGPXbs2JkzZ2R1
snuX3VR+iS93pkv9Te6PnO8P5UdEdvULFiwo+q4VAGAzBL38SBCTX88GDRpI
jOrRo0eZMmVk9o9//GO5cuW6d+/euXNnma1cuXJkZKTqP3/+fGkpX758165d
27ZtK9O1atU6efKk+lRCn7TUr19fIl7v3r1vu+02me3UqVO1atVk+tFHH61R
o4a0TJo0SRfw6aefSoukPFmd6n/fffelpaUZB7zpppuknoceekh1EFu3blXL
9uzZU2Zr167dr1+/yZMnq6Xuvvtu2RDjZo4dO1a67du3z7WtLvALbNy4sWyy
LCsTMitpMSoqqgj/LL+Sw6fw37P6EBKAr5OUJxEsLCzs0KFDksI8EfRk2MOH
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
HvTCw8Olw9SpU929NQAAH0XQg0kzZsxo0qSJHCdUqFChRYsWTz31lDSePn1a
pl9//XXV5/jx4zI7a9asN954QzrfcMMNjzzySERExN69e++//35Z8JZbbhk9
erTDH9tnn33Wp0+fSpUqtWvXbuLEidHR0c4rkYP82NjY8+fPh//mHHzA2Rzy
J3H06NHQ0FD3pjxFhpXBZRVqXVZvMeBI75RkByW7qfz+F4ncmS71N7k/cr4/
rF27trr2cvjw4c6DnuyHpcOCBQucDwgAsA2CHkz69NNPe/bsKccJclzRr1+/
yZMnX85JdtLywgsvqD779++X2fr160vE692792233SaznTp1qlatmkw/+uij
NWrUkJZJkyYZh5UWSXndu3dX/e+77760tDQnlcjhU/jvWX1wh19J8jpz5kxY
WNihQ4ck3Xsi6MmwMrisQlZE0IMPctg1xcXF5bkTc2PQk5WqiQKD3saNG6XD
2rVrly1bJp2nTp26fft2fvoBwMYIejAv96WbeQa9ihUrHjx4UGZTUlLat28v
Ld26dVN/YNI/ICDg9ttvV/3liL106dINGjSQA3jVMnjwYOk/e/ZsJ2UYz+UR
9HyHOp138uRJ+TOIj4/3RNCTYWVwWYU6qWf1FgOOHHZNsrPKcydmzHHf5XA5
6GkFBr3FixdLh1tvvdX4JJb+/ftnZGSYXAUAoHgh6ME8k0Gvb9++usPLL78s
LWvWrNEtjRs3rlatmpr+7LPPHC4liomJkZZHH33USRkEPd+kgl5oaOjevXvl
0NETQU+GlcFlFQQ9+CZfDnpvvfWWdGjatOnmzZsTEhJ27tzZpk0baXn11VdN
rgIAULwQ9GCeyaA3duxY3WHq1KnSsn37dt3Srl27qlWrqulx48ap/1W5vYHM
1qpVy0kZXLrpm3TQCw4Ovn79uieCngwrgxP04LMKdelmakHcG/RkqIkTJ8p/
O7pFdullypRp3bq1yVUAAIoXgh7Mc3vQGzp0qHzapk2b/gaNGzceMmSIkzJ4
GItvUkEvJCRkz549ngt6MrisgqAH31Soh7F4Oejl6e677w4ICIiPjy/UUgCA
YoGgB/PcHvQ+/vhj+XTFihVeKR+epd6tkJSUJIe7Mu2JoCfDyuCyCt6wgGLN
kqA3b9486ZOYmGhsbNasWeXKlblNDwBsiaAH89QNdI0aNdItRQx6e/bskU87
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
2EItRdADAPPk2P7WW2/VR48VKlQoU6aM8ai76E/J8DeSsOrXr59nIHJX0MvK
ymrevLlx5Nq1a//zn//M3TMlJWXYsGEOZcyaNSvPYc+cOWPs9uijj54x53Je
99SnpqY63Jd37733Gl+Y+9+cP78JEyY4lCcBsLBfyEcffaQXf+KJJwq7eHEh
Rzh6M19//XWrywH8FEHPOdeuBcrMUWA3gh4AmLdt2zbjMfazzz7bs2dPY8vW
rVutrrHYuH79+pw5c0qVKpVnynNj0Dt8+LDDyN99911+nSVMOTytpW3btnn2
XLdunbHb3Llzi1Lk7NmzjaN16tQpvx9x42NGSuSckivsSb2nnnpKL/7+++8X
pWxftmLFCr2ZDz/8sNXlAH6KoOfchx9++M477zi/TcBIfjp37tw5YcKEvXv3
FtiZoAcA5j399NPGY2w5kly4cKGxpV+/flbXWDxs2rSpZcuW+UU89wa9Dz74
wDjsgAEDnPePiooqV66c7i9R9MqVK7m7TZ061Tjs999/73KFktTq1KljHG3H
jh35dc7KynL46oKCggq1uptuukkv+9NPP7lcto87e/as3swbbrghv0twAXgU
Qc+5Xbt2jRo1Sr0Sff/+/VevXs2v56VLl9avX68ezCI/QDExMQUOTtADAJOS
kpKMx/+lS5eWlvj4eOM5KZku7L3S/kZ+xYzvONP0+7vdHvQee+wx47A7d+4s
cBGHewYPHDiQu0+vXr2MxRflcR/y425cXfv27Z33//zzz439hw4dan5dkZGR
ekH5e3bhFr9i5MYbb9Qb+/PPP1tdDuCPCHoFksOGd999V71Y4aWXXpLpr776
avPmzT/88IP8YG3cuHHx4sWvvPKK6jBy5MjVq1fn+T8/5kbQAwCTHB7b2KdP
H9UuE8b2GTNmmB/z+++/N75KW3bszvuvWLHC2H/RokWub49F0tLScqe8GjVq
/Otf/5LA4vagl52dXb16deOwZm5mHzJkiHERCVa5+9SrV093aNq0aVGKnD9/
vnF1f/3rX533l00w9q9du7b5da1du1Yv2KVLl6KU7fv+9Kc/6Y2VL9nqcgB/
RNAzSX7y3n//ff229NzGjh27atWqQt3TR9ADAJM6dOhgPLr+8ssvVbvxyFk0
aNDA/EVickhvXLZmzZoZGRn5dV6yZIlDPnrooYeysrLcsG1elDvoPfnkk3Fx
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
n376yVITH330kYftu3fvbtne/KJUV7FiRfMvaGdHjr2O3tq1awsXLmx5Ik2a
NPHrtKjav9ensCyyd+9er4/q2bOn+SGWq7l99tln5o96/SHh1atXm7dv2LCh
5+3HjBnj+8ZO1aFDB+MgdO3aVXocIKcg9AK2e/fusWPHxsfHZ4TezJkz/V2B
0AOAzCznSIyKitq1a5fvD09LS7P8FljlypUvt7H5RXiGli1b6qVZsmRJ852f
f/65DU8sp4be8ePHS5UqZXkW+r+Agf1MrOWT+8knn3je/uDBg5Z3EvWyM29w
7Nix2NhY46NFixbVX4p4WLB9+/bm1d5++23PAzzzzDPGxu+9956PT9NhZs2a
ZRyEqlWrSo8D5BSEXjadO3du7969+r9iATyW0AOAzB566CHzC+natWv7u8Kb
b75pyYply5Zl3uynn34yv8K/4t8LOmdcgNtyTb1y5crZ8hN3OTP0mjRpYnkK
Xbp0CXi1l156ybxU6dKlPV/EtlWrVubt9YTPfI31Bg0amLfxkGO7d+/OkyeP
saX+9eP1/4UoUaKEsb2Pv2rqPPrLpOjo6IyDEBUVpb/ek54IyBEIPUGEHgBY
7Nu3z3hBmMGva+Fl2LFjh3GN5gwtW7a0bLNp0ybLiUGKFStmnIjjxIkTBQoU
yOYYmQ0bNqxutgXptI2Bhd6cOXO+MNE7yLKB5ffjdI0aNcrOheSmTZtmWbBZ
s2aX23jo0KGWjS1v52WwXBcvJiZmwoQJmTfTn93NN99s3vLZZ5/1PK35Z03z
58/v40m5HalatWrGocg5J7MFZBF6ggg9ALB49913La/MH3vssef8Z1kkd+7c
R48eNfaS+WIK+gaWf1wsv7t34403OvtVemChZ/ltyiFDhpg/qgdd5cqVLZ+L
pk2bvuSPFStWmNe8cOHCfffdZ1lT79+tW7eaN9NfUTz66KOWzW6//fYsf15U
v9NyBcaoqCg9Es2/m7lhw4bSpUtbttHv9Hx8PvnkE2P7Bg0a+HJIner11183
DkW7du2kxwFyBEJPEKEHAGZ6F1jeMbHRwIEDM/aS5cUUMr/Rc+TIkbx585q3
GT16dMgPSegEI/Tmzp2b/U+cZU3dgQMHrrvuOstmeqrXrl074xfnq1evrv/V
skGePHl+/vnnyz2R1atXW95K1l111VV6Lb7wwgvlypXLPFiPHj28Hp+nnnrK
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
7rjjjsyv6jPUqlVrzZo10pMi1LZs2ZLlG7sZypcv37Vr13nz5p0+fVp6UsBm
hJ4gQg8AgMCcOHEiMTHx008/bd++fY0aNXLnzn25V/K6e++9V38lLz0yJC1f
vrxBgwYevkhiYmKqVq36yiuvjBo1St/42LFj0iMD2UXoCSL0AADILC0t7dCh
Q+vWrfvll1/0f/S///778ePHDxw4sFOnTs2aNdOzrkiRIh5esRvy5MnTsmVL
x7xsQPbpX1QvvfRSgQIFfPn6KVy48H/+858mTZp06NChf//+48aNmz179ooV
KzZv3rx///7Tp0/zi34Ic4SeoOwc/B07drQFAARH1apVb73kxRdfDPbubjUJ
9r4yxF2iv46tdEnr1q3jPHrV3Sv/evkS/fVzm3/pR+yFF17QV3vuuedatWr1
zDPPPP300y1atHjyySebNm362GOPPfLIIw0bNqxfv36dOnVq1qxZvXr122+/
vXz58mXKlLn22mtz5crly4twD2JiYurVqzd69Ojjx4/b+K82HOPMmTMTJ058
+OGHPb8R7IvY2NioqCj9S07/ui1VqtSdd96pf0nXrl1b//LWv8j1L3X9C17/
ste/+PVvAf0bQf920L8p9G8N/RtE/zbRv1kyvmv0b5+M76NXLrF8u3n+3syg
N6nx7Vy3bt3Q/Mckw/3332/8R0wfI6j7atSokbGvhx56KKj7ChM9evQI7Eud
0BOUnYO/fPnybP6nCQAAJ7n55pv1F8xffvklfQcfnT59etasWfHx8XoZ6b0m
/SUMZK1YsWKBfYUTeoIIPQAAApMnT57KlSs3b968X79+33///ZEjR2z8Bxo5
0PHjx3/88ccBAwa0bNmySpUq+fLlk/4aBy4i9CIRoQcAwOVER0dfffXVd999
98MPP/zcc89169Zt0KBBU6dO1f8F3LdvH78ehaBKT08/ePDgypUrv/rqqyFD
hnTv3r1169aPPPJIzZo1K1asWLx48QIFCvAmIEKD0ItE2Tn4hw4dGg0ACA79
FV3LS4YPHx7s3bU0Cfa+LPRn+swlw4YN+8SjMe7GXvLpv8aNG/fZv8aPHz9h
woSJEyd+/vnnX3zxxZQpU/Q6mzZt2vTp02fOnPntt9/OmTPnhx9+WLBgwdKl
S/V/09esWbNhw4bt27fv2bPn6NGjJ0+ePH/+vI3/2gJBoseg/hW7ZcsWvQf1
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
1KqV3eMGAIEi9AKTnJy8devWH374YfTo0T179rREX1xc3LFjx7wuQugBgB/0
Urj+evUSOiZGi45Wfy1VSktNlR4x7On/NuXL51Yr99yj/fWX2zbp6VqHDtao
+eCD7O560ya3BRs10v74w6db5jNa2/IszFe7W7vWzsNift/5lluye9wAIFCE
ni1Onjy5fv36b7/9dtiwYZ07d9aP6pEjR7w+itADAD/Mnu32Grt5c+ubLN9+
Kz1i2HvzTbcjVq2advZs1luazyii34oUye6bel984bbggAGBL5X9Z6FXW65c
6v6EBDsPS1KS2qBgwcCfJgBkD6HnmS9vzGW2b98+/Yl43YzQAwA/PP6422vs
ceO04cPd7mnYUHrE8KYnydVXux2xH3647Mapqa6fXTRvPGtWtvberZvbaj/9
FOA6tjyLv/5yazHbD0vu3GqDyzUjAAQZoefZsGHDBg4c+Oeff/q4fWpq6uLF
i7t27Zrow6+uE3oA4KtDh1xnXDFePOt/PnpUO3jQ9QOcxp1RUZrP/7n2Q3q6
5sP/dxcBfv7ZrVAqV/ay/aefum3fsmW29m55+/X48QDXseVZmH+OtHRp+w+L
ec2dOwN6ngCQXYSeZ0uXLm3Xrp1+lAYNGrR69WoPZ1k5dOjQzJkzu3XrlnFi
liyvq25B6AGArz74wO3VdYMGF+/X/2C+v0ePQBafOVNdnvvzzy/euXWr602o
W25xnV9RX7l4ce2RR7Q+fVxX045QlmPYtauX7ffvd9u+UKFs7b1IEbXUjTcG
vo4tz2LhQnVP2bL2Hxbz+UXtOmcpAPiJ0PPqwIED77//fsZZVuLj4/U/f/31
1/Pnz1++fPnixYtnz549duzY7t27Z2zQtm3bqVOnnjt3zpeVCT0A8FXFim6v
rsePv3j/5Mlu9197rebbeY/dmE/AWLmya4U333R7A9F804Nl9mx7n1yIPPGE
2xOZN8/7Q8qVc3vI3r0B7lp/oHmd7Fx0wJZnYf6yMZ+Vxa7D0rix+ug33wTy
NAEg2wg9H23ZsmXIkCFxcXGZL6yQ4bXXXpsyZYpfv9NH6AGAT1audHtdnTev
dvLkxQ+dPev6HSvzR6dO9W/x5GS3pmvSxHVK/CwTz3zTSzDilCjh9hR8+MkT
rVkzt4fMnx/grr/7zm0d40wselNv3KhNn+669pz+hwsXQvQsBg9Wf82f3/7D
8tJL6qOffOJ9QQAIAkLPL2fOnElMTNSDbtSoUQMHDhw8ePCnn346a9YsPQMv
+PLPkztCDwB8Yn7ZrN+eesrtoy+/7PbR++7zb3FLRfp4i47W1q2z8SkGnZ5U
5vmvvNL1u4dedeni9qgsL2nni379rGWk93jVqm6/YpkxVfXqrp0aIR+kZ/H6
61l/Wu06LL17q49yhUcAQgg9QYQeAHh35oz1Pbu5c9020P9RsLxc37zZj/WH
Dcv6Nf+tt2oTJrh+IevgQdcbUnfdZd3g/vvtfaLBdfSo2/Dly/v0qKFD3R7V
s2eAe7f8vKX5eohZ3kqVyvq0nHY9i1atst6vXYdlxAj10bg4n9YEALsReoII
PQDwTq8tSyNkvjB6hQpu27z2mh/rP/tsFi/4X3hBs/y2dUqK9a3DKwL6Uca9
e13njczmbfduv/e7Y4fb5HXq+PSoKVMCP7BmN93kpeyyvMXHW3+Y065n8cAD
We/RrsMyY4b66KOP+rQmANiN0PPLxo0bR48ePWLEiK+++mrbtm3pvvyAx+UR
egDg3X33ub2ozvKkiAMHum1TqJAfFy+75Rbrq/2nn856Sz39brzRbcs33vD7
6bRsGUjyWG5Nm/q9319/dVvhoYd8etSsWW6PatPG7/3qTp4M/Jn27x+UZ1G5
cta7s+uwmH8euHp1n9YEALsRep4dOnQoKSkp48/bt2+3nIylX79+u3btCnhx
Qg8AvNi+3fpSfP36LDY7cMD6217jxvm0vv5f+KgotwfefLPr9CyXM2mS28YB
XFpOKvSWLAlkhXnz3B5l+e1IHy1blsVTuP5617UqNm1yHe3Dh7UFC1xNpxe6
ZbM8eVzXubD9WZiv9RCMw6K/NjA+WrKkb4cJAGxG6Hk2d+7c+Pj4CRMmHDx4
cMqUKfrh6tSp07hx44YOHarfr/9VT7/ly5cHtjihBwBe9Orl9or6jjsuu2Wj
Rm5b+vg2it4Xlpf6Y8Z42n7fPreN77rLv6ejyYXeL7+4reDjLxguWuT2qMce
83u/uuHDrfNXqeKKu8z0w/vQQ9aN771XS0uz81k0bqzq3pL5dh2Wc+fUR2Nj
1fwAEEKEnmdLly413r9r27at/r/rL/2fyfqo33zzTUburVixIoDFCT0A8CQ1
1Xou/cGDL7vx9OnWQFizxvsu+vd3e0jx4tZfzbNIT794/fSMW5Eifj8pqdCz
vAnVooVPj/rpJ7dHNWvm9361f09don8ejaTSw+3ECU/b67Vleb7GpehseRbm
X9ArUCBYh+Waa9QGWVYtAAQZoefVnj17xowZY/zQ5gcffLBx40bjo3/++Wfn
zp3bt29/4MABf1cm9ADAkzlz3F5Ox8R4usZZSor15/Feesn7Lpo0cXvI++97
f4h5L7ly+fF0Mmzfrn3/fXZv5p9m9NHPPwfy3pzl+neB/Y5ehn/+0bZt0xYu
9P7rk/pmuXO77de4aqEtz6J2bfVny45sPCzmXwOMrCtxAHAKQs9HR48e7dOn
j/HuXt++fVeuXJn675nftm7dqt8zatQof9ck9ADAk6ZN3V5Oez1RRseObtvn
y3fZy7EZzO8YXnmldvq0l+2Tk91+2O/66/14OrLWrnU7OA0a+PSor792e1Tn
zkGe8hLLp9J4B9OWZ2G+UobltwJtPCwPPqg2sFwQBABCgtDz3aRJkzISr1On
Thm516NHj59++kmfasSIEXFxccePH/drQUIPAC7ryBHX+2Xml9NTp3p5yLp1
1h/5++gjT9vv3++28Z13ep9q82a3h3j4ncFw8/vvbpPXrOnTo8aNc3vUW28F
d0iD5foF5cpdvN+WZ6F/1ow/ly4drMPy/PNqAx9PDQQAtiL0fJfx+3rTpk3T
x9D7Tq+8jNzTu69r1676H9b5+bMZhB4AXNaHH7q9lr7qKk8nwzRUrer2qMqV
PW38zTduG7/4ovf1v//e7SEPPODr0xGnh7N58lKlfHrU22+7PUr/pISG5TIK
0dGun/zUbHoW99yj/ly3brAOS8+eaoN+/Xx+5gBgG0LPd8nJyR3+dezYMc11
koBUfZK33nrL+HnOESNGHD161PcFCT0AuCzLlc58/O2wzCd4XLbsshv/739u
Ww4d6n39N95we0jbtr4+nXBQuLCaPCbGei3yLOmH3fx8J00K/pT/OnDA+nn8
+++LH8r+s6hXT/35o4+CdVjMX4rx8f48eQCwB6Hnlzlz5uhHbODAgX9f+hcn
PT19/fr1xq/vxcXFjR07ds+ePb6sRugBQNZWrbK+zl+61KcH/vWX9fQaHi51
Zz77on6bMsXL4noCWM4CapwNMiLce6/b8Dt2eH9InTpuDzGdiyy4LF8A5kvR
Zf9ZmENv+vRgHRbz7/E1aeLzMwcA2xB6fklLSxs8eLB+0BISEjZu3Jh26co4
o0aN0u/s3r278e5exrt+nhF6AJA1/T+P5hfSN97ouq6Bj5o1c3us3n1Z/qyF
vqD5rRz9tmSJl5VnzbKufOaMX0/LZeBA18lAsnnr29fv/epeftlt/okTvWyf
kqLlzau2L1gwkOvBHTyoPfmkq4wqVXKdsLRiRZ8eZbkwff36dj6LGjXUX1es
CNZh0Vc2tgngeosAkG2Enr9SUlKGDRuWUXO9evX6/PPPR4wYkfFXPf0OHDgw
YcKE+Pj4I0eOeF2K0AOALJw96/qNPPNr7zfe8OPhc+da3w3U2yozy2k99Nvs
2V5WbtDAbfsHH/RjKoPUdfR0o0e7LdK6tZftLdcy8PFi4hYbN1qH14+8V5az
brZvb+ezMJ+A5c8/g3VY9JWNbfQ9AkDIEXoBSEtLW7x4sXHuzQy9e/c+d+ky
u6dOnUrz4f/2JPQAIAuffx5IGhhSU13XPTc/vGzZLN4QnDzZupf+/T0tu26d
24UV9NtPP/n91DTR0Dt0yHVWE2MRvaY9X7j8hRfcdvq//wWyU53l0+H1dyF3
7XJd6sL8EL3F7HoWCQluZ3NNTg7WYdFXNrbR9+j7W9IAYBNCL2ApKSmJiYmf
ffbZhx9+OGHChMOHD/u7AqEHAFmw/ALUPff4vYL5hIcZtx9+sG7TqZN1m3Ll
LnvdvfPntSpV3Db28Tz8mQmGns5ykkm9ei5n61YtNlZtqaeQX7ltZr7QgH67
7jrN87+YlqvYFytm/RHZ7DyLxET118KFbVjQw2Ex/2ywP+dqAwBbEHqCCD0A
sPrjD+sbZ6NG+b3Itm3WMnr8ces2eqllDih9s8zvvKSmWlNFn3Dx4gCf4JAh
rqzI5i3LH0b1xWefWZ9ylu+v6TlTsqTbZi1aZL3gtGnaJ5+om/7pyyzzm6cN
G2b9e236nW+9Zd1YX9bGZ7F+vfrrrbcG67BkqFRJbfnbb562BIAgIPQEEXoA
YNW7t/Ult941Tzzh982ySEyMtm+f2sv5827n0zDfunRRZ/LX/v1VvkaNrNsE
/EOM4vRotVxqUL+9/bbbNQpXrNCuvda6zdq1WS9YqJDbZu+/n8U2+tE2X7ou
41a9uv4SwW0z/RNkeWdNv1Ws6JrZxmcxb576q3EZRNsPS4b771dbZn5PGQCC
jNATROgBgBv99XapUln3V/ZvffqoHemvzz1sWbSo1ry562SM9eu7CtHyUf3O
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
EwAAAHtb9U0K/554AAAAAAAAwF7zJxvv3dM=
     "], {{0, 516.}, {593.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{593.5, 516.},
   PlotRange->{{0, 593.5}, {0, 516.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`p0 = 5., $CellContext`\[Sigma]0 = 
     1, $CellContext`t = 1.5}},
 CellTags->"Snapshot",
 CellID->543185009,ExpressionUUID->"14da9dbb-e60d-4846-a794-5b7551723823"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"43cbc6a2-b584-4405-9f33-caaf44f7dbd8"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c45b03fa-fe2e-4978-974d-279cfae2935a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"1cb1b053-49e3-4a0d-a8e7-261d8858d165"],

Cell["S. M. Blinder", "Text",
 TaggingRules->{},
 CellID->102131259,ExpressionUUID->"034b27bf-b2b8-4d22-8955-9488f87c4462"],

Cell["Stefano Rigolin", "Text",
 TaggingRules->{},
 CellID->905603573,ExpressionUUID->"2f5f3cd0-7452-4114-8736-10dbf41e2f18"],

Cell["Michael Trott", "Text",
 TaggingRules->{},
 CellID->210222468,ExpressionUUID->"74a1dc43-efdd-4d6b-94b3-d1d2b0fb0297"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0304eb6b-9541-45f9-890c-987766e5a380"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"b6651014-bd11-472e-804c-f9fbff7c4fcc"],

Cell[TextData[{
 "Snapshot 1-3: the position probability distribution broadens with \
increasing ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath",ExpressionUUID->
  "4c7bee74-115e-48a5-afaf-3233c8ec0c27"],
 ", while the momentum distribution moves with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "0"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "a1071aba-dab4-4339-80a9-dfc1170b41b1"],
 " but retains its original width"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.427638158181184*^9, 3.427638257499255*^9}, {
   3.437519110612564*^9, 3.437519203462024*^9}, {3.437523837362693*^9, 
   3.437523870659468*^9}},
 CellID->1070589927,ExpressionUUID->"c678d494-6e73-4a97-a583-5632926e7808"],

Cell[TextData[{
 "Reference: S. M. Blinder, \"Evolution of a Gaussian Wavepacket,\" ",
 StyleBox["Am J Phys",
  FontSlant->"Italic"],
 " ",
 StyleBox["36",
  FontWeight->"Bold"],
 "(6), 1968 pp. 525\[Dash]526."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.4277233385782976`*^9, 3.427723349392379*^9}},
 CellID->16370893,ExpressionUUID->"d2d54301-121d-423d-aa95-5f3a1be444cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ab7c73a9-25bb-4f0f-b1ed-d16730cdb047"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"eac68fe4-4415-4790-8356-a5bb3458937c"],

Cell["References for demonstration.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343,ExpressionUUID->"fbe84f08-dfc9-4988-920e-76918bed1dfd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "51bc4520-d72c-4a8a-a0ff-7627e32d464c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"de5accbb-4ef0-4796-b9b0-6c4861844a6c"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"19ccf7df-a084-4f6c-89c4-be9f81bd20e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9a2eef27-941e-4e72-9729-fe4661fe0e11"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"89013c4d-2e68-4d39-b0cb-224c541243ed"],

Cell["keyword 1", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->12473014,ExpressionUUID->"1f012dfe-8411-4ae8-b73c-bf25f81e5ac3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5137711e-dc49-450f-ad8d-42a06e5b6e99"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"32f91634-85a2-4d37-ac9c-936f8026d5ce"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox[
                    "\"Ecology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox["\"Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox["\"For Kids\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox["\"High School Computer Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox["\"Business\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Microeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox["\"Classic Science Experiments\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "3D Graphics"}], "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Physics", {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    "College Physics", {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Particle Physics"}], "\" \"", 
                    
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    "Quantum Mechanics", {False, "Quantum Mechanics"}], 
                    "\" \"", 
                    StyleBox["\"Quantum Mechanics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Thermodynamics"}], "\" \"", 
                    StyleBox[
                    "\"Thermodynamics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> 
                    {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Game Theory"}], "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetv47gRby+\
b2HnYeWyyj7vrQYuid0BxwRU9FAX6Tesku8bm4Ua5PaDfGImxeUuJKkV51/\
vXd4aSrJEoO9sP7ac4HHI4HM785jeUv3sabAZmIXmwdZObNDenQW804+EHHj1sZE8uRWaC/ZGSkk+\
5N5ktMhFmQa/6cfjPnCUmj70rHs5YAkOgbmx4nPmgePeKmRmPmYFxf+\
80OArCmVLSo8MvToNX55LHPDFML7xyxrvTv9JZD78rLOmc+/Pp37rnvrwSUSS55+5az3n+\
VkxnHTP8/mlwQmW+nPJ7zbxxvfaYyt9wFXOjF7X4h87lY48lkXenxVQl7RUNYyaah0yGucyJuX+\
mM0al2Gr0EyYXYHmHIX9pGBLNWRLyqLn6UiSc6crKeul3dOmFSITh3X58RicGBqRZc8ITX3OiePv83\
zlMUgmZcnL+\
KVUJXK5gsFmehC35i0pe2qymTAszizN6JYuU63slwREdGnbGEao3gpPBvXHCwRjZGu6PEwMxr8nQ0V\
hrazTYd53H9w3hXjHivWYZVXM8YZrhhYBFHWfennAtQMx1PfbVRNT/\
7E6UXECkgE8yOqr5qXNbgwnqck07uF1t9S3vGn5OArTblVvvlcxjXg/0SnP87ccz53+RGgBScSr5J/\
cww1XR3e3bfcC0CO8Zzq00ja6jpR87HDJ8z0OjOnZ56qepFJBxFF564CQY1+\
qTiK1SQFAzU9GXmH0EJ4SoARcUWZ8JsurpDSRAEWXeLc9AQTgj132TGhGLz3ZCPXwYpDxckXX9X9mc\
S27oHkvs+H5pgb///0en/siJgoMqClzP7J6B0+\
Zw8jnNz2dn4uGB6xJ1OjL08C3TsYLS1qFy22KEboTPs6tcwh4ATeweio9r4sCmnKsMxiUzcHaIMt7I\
XgFRkyRekOsHFlLRVgBHogPrLnJQBuiF4JLG2fGZyELNm8iO9e+\
LwX8wUpFIpt7djCt6tTAe34uEwa6N+XtvNEtnzvT+\
NTcflf5AHRwANPOkeeg7IWG3emDzTnM6AeuERVWgCSvKfr+KQ//k0Tp+\
UMYdRMAo143gOapF7joidG/ucE1GDEc23ALuYG57/5NG8Lqa+udSirRRj16Ws2CDO81AO0BcO+S/\
QYdwfXqGPswKxHOVPyW11pXuX/\
MMg3nCDBS3BlBOJEt4l7UIx9NWeYShGY8aeDrR6jf0zbxLye4tf5CO54YBmBl17elezTZUIJZMZQMl\
3sIfVWAuzZIncJPneQi6f8i8kpqSZV9fqDyJSjRWD92xePgGwvfDCtkvSabkHP2oFcAJrUaDknAUae\
RvrKQgq2jB17c81VAiElNb6HKHSa6byLD9SNyvgeDH4vXF2SJhsfVysMiwjXBAArBD5akzvPsuUcYZ\
PartBpVAGEVIItTO5jG6dt4AlP6dSpVUU2rZLQeMrMo/dQf6/\
Y2SQCw9Sw8IsJJpHfe37m53agqNMfYoux6cMcO6ah6qZvcAmIbe0C1UVWUPDpHfiJVdvLy8CAjceQd\
uWhUsGy/+qZ8bZU8E5IJlgFPUb6vqwDOitPPeD4oJvKPGHy5Ftmg068hIL1Kjpiig2qwzcB1Ed9YgO\
gfjmGEfWxy8YfxaVlUbGIQC6xESuG8bdKc14b84/\
boj7tuzBEbnoYFEpLlUVmQMB0zQcAYsicIYRGyum8c/\
KW4GE50Y1XnMIv3I0ut3gfeT96uSD9DPLN2wieZzKXOJBK0IDsrQLjQLTZNerywM3wYCgcNr+\
sux5DjI7yH8TW5psyM+LN4mcGVhY+ZvgTf8zGhsKxb+V+3+\
pJKQwIJywSonEJeOIJ3hF6DtVkvJUkKvFcfQkHdwM23M5wnQ9M51T8eJ0lN8TOnUerNadrQ8eodwcM\
60mS0vDrzwIz1AIUW2fZ7MBTikpE+\
VEwlEQKcCUdQCyKOiQtrYInt8M5IMEi2sxryam1FS0phlxAP8tJlKXQZoCishlpb6f49dn4ZLYlI6K\
FC9UfkDpCq0eyzGybX6ocpbgLpnoyJtT22/hJHUOUfWoSH+p3jZWYzWDcvBzLTq+v6FzIGPLF/\
NiB8BA+aiiH4HSLc7FmxhS9ewZAJXKULZYeR+9VxX+QZsdJ/\
wSNIvaw0WvUqO97ouuIdgNrRMUVHLiWATW0latS7FA6/\
TFMpN77WwcYXw2ri0cpxSCQ5tqUrLMHXkB8ATPkJEd9S4wysF12IRy1k2uGaAs9hANVv/AZJW487v/\
Uu1RgDNpwDMyE6rOAWKsDPhOuRpE253JtkCjteyoBh0Qq93HrZm9q94JEJwP0mk13mGZQA780DZTrA\
ESPTooQ9FBBtT6VapfrWSRBvsiK8jBcl51UCLSmIRAyoRaygbQjnSileTqEB0C3qOjo1L9pGiusIHO\
gLrGLvPsf/WSVUqbAPdJP77lReqIEP0r4hUKTJ51Giidy+BGORtivWydOSP3pWKuEQPl082+\
LS9rgjujWZMuUx2v+67rUJS4ZoNbPthqKOo7r5hwPAd+\
ltUGQslAMsY0pSd4jvFKYAsxLW1oMmB3WZ8DW18pCa7HXoyhWCDMwJb/\
N67A2RJirwHVz6v6nL5bOZWoOMl+BA9NAPFXKyQYW8NgCxdjlpAdVsrxstwJHSYC+Od8UxMG89m8C+\
TnXRyNcKv4aB9l8Y9qzSsOu3wmkHrs/QgUXar7lWLdjgG4/k2fUgA0rd0vPht3+QauJ+WEd7QH7o/\
2DiY0jEPP9Y4806aH2oc+eB8zvUiYgsPCwaxCri0Q/7r9412WvVKioKF5st4ybrefl3b/\
jguUYzBOzguz37JYBjDw9d0s4M7/gmgu6s16YiZVUVs5xqoxbTF+Vdw3cHItrvzwhJ/p4ZN+N+\
ifjsb9t+LDE10if2er8FEiFFsYRC311zSBqgnwAF8S5FPI2sRbVi2T45lL8ZYcIpIQbhZpE7YbF5B+\
QttM199DMQBMqGVJHtW7r5huqffeScirBYXeYJtw3cVDc0/\
f5a8KKD144IttX9cIfuHVydUrf9PK2fbKIyBJABzrue/Wjm/en1/\
PPP64HkPz0Ubk7Soz2MohFkz2nvllsQp9cakxAIuwcXEMZaF6gUbP8zZ163dn886GuSj99w2ud7fvQ\
vOWj3yMJgpiNZSLU0aGIJ8N4tg606l9rN178aysyzbXr5x4Kdw/MrVGhxav6ZQuq390D8kC6x/\
HPN6BJ2EiscJdLDZ5gUUaV4PYlHMnlyrhNsPb5nKgRNCNPJgcMZj2NsUoV1+\
zIJGPCr3H238Bydox4o="},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->847036161,ExpressionUUID->"a50b6286-26f9-43a0-a37e-835f8fa72eb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "75adc616-6dfe-4303-92f7-cd5636c9bebd"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"946fde95-2ff1-4aac-a99b-8b028ce865c3"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->288851603,ExpressionUUID->"e9c48c68-dc77-466e-bd96-fc33be291717"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2b65e4fa-37de-4529-a01c-872c19c1e17f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"3d5d355c-0d91-4853-ab46-439a0d750fda"],

Cell[TextData[ButtonBox["Probability Density",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://scienceworld.wolfram.com/physics/ProbabilityDensity.html"], 
   None}]], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.427563663286841*^9, 3.42756369251246*^9}},
 CellID->434681701,ExpressionUUID->"335985f3-ecd6-4d98-8249-e365156c83be"],

Cell[TextData[ButtonBox["Uncertainty Principle",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://scienceworld.wolfram.com/physics/UncertaintyPrinciple.html"], 
   None}]], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.427563539392327*^9, 3.427563586652036*^9}},
 CellID->926764656,ExpressionUUID->"2cd51059-86f4-4d73-9c10-6ed9a7215807"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d672c39f-a7b6-405a-8b6f-f7539a1a2db5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"afee07c3-ee28-4770-b7a9-f58ee7fe5288"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->107750934,ExpressionUUID->"f34d5ee4-cb88-4fe6-90c8-482658723d65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "69567f32-50ac-4736-bb01-0aae949d1542"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"4762ccb6-b125-4441-a924-d5960bba573c"],

Cell["2011-03-07", "Text",
 TaggingRules->{},
 CellID->821630786,ExpressionUUID->"faca385d-daa1-4812-b9f7-035849b4ece1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f2e47a80-6965-4420-9013-ec2be30acf38"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"9e6c96f0-70ce-40dd-9361-c9d492715761"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1c0b9bc6-2028-45dd-a709-bdc555549187"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->52145858,ExpressionUUID->"c7d11b9d-d05b-4662-bb99-535dfb23cb0f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->885916833,ExpressionUUID->"61c0fdd0-27c1-4bae-b616-79b346f68870"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ec314f88-b56d-403e-9b41-0959486cadb3"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->469796577,ExpressionUUID->"4b3cabcc-bc84-40c5-82ec-5040f3a689fa"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->203048737,ExpressionUUID->"8e1e7109-c5c8-48d4-a8ec-72a2c179b466"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c191632c-ecf6-435a-a90a-e74cb37711d9"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->386963008,ExpressionUUID->"3f6d7c46-db0c-4273-90c5-ae248c823938"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->107018979,ExpressionUUID->"6618b30b-c52f-465f-97eb-ca63f06279af"]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{808, 678},
WindowMargins->{{33, Automatic}, {Automatic, -439}},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.05.27", "CreationTimestamp" -> 
  3.92625516237871`16.346553509592585*^9, "UpdatedTimestamp" -> 
  3.926255162378759`16.34655350959259*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}, "StatusMessage" -> ""},
CreateCellID->True,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.0 for Mac OS X ARM (64-bit) (December 12, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"6e28e140-0a3e-4031-8704-4f27d23066bf"
]
